%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: izhik_a2a_nn.pdf
%%Creator: Adobe Acrobat 8.0
%%For: abigail
%%CreationDate: 05/29/2008, 04:01:07 PM
%%BoundingBox: 11 154 584 688
%%HiResBoundingBox: 11.6201 154.5906 583.6501 687.2995
%%CropBox: 11.6201 154.5906 583.6501 687.2995
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (ApeosPort-II C3300) (3016.103) 6
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
[{
%%BeginFeature: *JobPatchFile 0

%%EndFeature
} stopped cleartomark
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize A4

    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known 
    {get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice

%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 3574 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c320 44.287556, Sun May 13 2007 17:18:41">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 8.61"
   xap:ModifyDate="2008-05-29T15:05:36+09:00"
   xap:CreateDate="2008-05-29T15:05:36+09:00"
   xap:CreatorTool="UnknownApplication"
   xapMM:DocumentID="cdb3695b-6561-11e8-0000-37dd62f92f3d"
   xapMM:InstanceID="cdb3695b-6561-11e8-0000-37dd62f92f3d"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Untitled</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [11.620012283325 154.59057617188 583.65002441406 687.29943847656]]
[/BleedBox [11.620012283325 154.59057617188 583.65002441406 687.29943847656]]
[/ArtBox [0 0 595 684.375 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
/0 {
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1 0 sub 255 div mul 0 add
dup 0 lt{pop 0 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
/1 {
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1.00787 -1 sub 255 div mul -1 add
dup -1 lt{pop -1 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
11.62 154.701 mo
11.62 687.409 li
583.65 687.409 li
583.65 154.701 li
cp
clp
[1.26507 0 0 1.26507 -75.4484 -380.817 ]ct
gsave
51.8047 11.73 mo
51.8047 830.38 li
543.465 830.38 li
543.465 11.73 li
cp
clp
8 setflat
123.902 350.437 mo
123.902 43.7963 li
446.029 43.7963 li
446.029 350.437 li
123.902 350.437 li
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
12.9804 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
123.902 43.7963 mo
446.029 43.7963 li
123.902 350.437 mo
446.029 350.437 li
123.902 350.437 mo
446.029 350.437 li
123.902 93.9163 mo
123.902 97.0504 li
0 gry
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VNTAAA+Helvetica Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /VNTAAA+Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
def
/FontBBox {0 -220 850 733} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUW+Helvetica /VNTAAA+Helvetica findfont ct_VMDictPut
/DYLDUW+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
118.188 375.735 mo
(0)sh
204.389 350.437 mo
204.389 347.133 li
204.389 43.7963 mo
204.389 46.9265 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[48{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
198.675 375.735 mo
(5)sh
284.879 350.437 mo
284.879 347.133 li
284.879 43.7963 mo
284.879 46.9265 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE0295
8A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
273.475 375.735 mo
(10)
[11.499 0 ]xsh
365.368 350.437 mo
365.368 347.133 li
365.368 43.7963 mo
365.368 46.9265 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
353.962 375.735 mo
(15)
[11.499 0 ]xsh
446.029 93.9163 mo
446.029 97.0504 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
434.619 375.735 mo
(20)
[11.499 0 ]xsh
123.902 349.395 mo
127.005 349.395 li
446.029 349.395 mo
442.752 349.395 li
123.902 298.23 mo
127.005 298.23 li
446.029 298.23 mo
442.752 298.23 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AC7E044D0946E6D2305FBC1A5806554FDBB52A
75CA669> |-
/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD
48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B261170
2A5DA745406DEB5C33C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 45 /hyphen put
dup 52 /four put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 202{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
98.5418 305.95 mo
(-4)
[6.88686 0 ]xsh
123.902 247.238 mo
127.005 247.238 li
123.902 196.073 mo
127.005 196.073 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
98.5418 203.8 mo
(-2)
[6.88686 0 ]xsh
123.902 144.905 mo
127.005 144.905 li
446.029 144.905 mo
442.752 144.905 li
123.902 93.9163 mo
127.005 93.9163 li
446.029 93.9163 mo
442.752 93.9163 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
106.469 101.646 mo
(0)sh
123.902 43.7963 mo
446.029 43.7963 li
123.902 350.437 mo
446.029 350.437 li
446.029 350.437 mo
446.029 43.7963 li
123.902 350.437 mo
123.902 43.7963 li
130.17 93.7685 mo
130.17 97.2262 127.391 100.032 123.964 100.032 cv
120.54 100.032 117.761 97.2262 117.761 93.7685 cv
117.761 90.3098 120.54 87.5033 123.964 87.5033 cv
127.391 87.5033 130.17 90.3098 130.17 93.7685 cv
138.112 102.292 mo
138.112 105.746 135.33 108.556 131.909 108.556 cv
128.482 108.556 125.7 105.746 125.7 102.292 cv
125.7 98.83 128.482 96.0244 131.909 96.0244 cv
135.33 96.0244 138.112 98.83 138.112 102.292 cv
146.051 110.311 mo
146.051 113.766 143.273 116.572 139.848 116.572 cv
136.421 116.572 133.643 113.766 133.643 110.311 cv
133.643 106.85 136.421 104.043 139.848 104.043 cv
143.273 104.043 146.051 106.85 146.051 110.311 cv
153.996 117.326 mo
153.996 120.785 151.215 123.593 147.791 123.593 cv
144.363 123.593 141.585 120.785 141.585 117.326 cv
141.585 113.869 144.363 111.062 147.791 111.062 cv
151.215 111.062 153.996 113.869 153.996 117.326 cv
161.939 122.338 mo
161.939 125.797 159.157 128.604 155.73 128.604 cv
152.309 128.604 149.527 125.797 149.527 122.338 cv
149.527 118.881 152.309 116.075 155.73 116.075 cv
159.157 116.075 161.939 118.881 161.939 122.338 cv
170.376 133.366 mo
170.376 136.82 167.597 139.63 164.17 139.63 cv
160.746 139.63 157.967 136.82 157.967 133.366 cv
157.967 129.908 160.746 127.098 164.17 127.098 cv
167.597 127.098 170.376 129.908 170.376 133.366 cv
178.318 139.88 mo
178.318 143.342 175.536 146.144 172.112 146.144 cv
168.688 146.144 165.906 143.342 165.906 139.88 cv
165.906 136.422 168.688 133.616 172.112 133.616 cv
175.536 133.616 178.318 136.422 178.318 139.88 cv
186.26 148.403 mo
186.26 151.859 183.479 154.667 180.054 154.667 cv
176.63 154.667 173.849 151.859 173.849 148.403 cv
173.849 144.943 176.63 142.136 180.054 142.136 cv
183.479 142.136 186.26 144.943 186.26 148.403 cv
194.2 150.406 mo
194.2 153.865 191.421 156.673 187.997 156.673 cv
184.569 156.673 181.792 153.865 181.792 150.406 cv
181.792 146.948 184.569 144.142 187.997 144.142 cv
191.421 144.142 194.2 146.948 194.2 150.406 cv
202.639 158.426 mo
202.639 161.883 199.858 164.69 196.437 164.69 cv
193.009 164.69 190.232 161.883 190.232 158.426 cv
190.232 154.968 193.009 152.161 196.437 152.161 cv
199.858 152.161 202.639 154.968 202.639 158.426 cv
210.582 170.454 mo
210.582 173.912 207.8 176.718 204.377 176.718 cv
200.953 176.718 198.17 173.912 198.17 170.454 cv
198.17 166.996 200.953 164.189 204.377 164.189 cv
207.8 164.189 210.582 166.996 210.582 170.454 cv
218.524 178.977 mo
218.524 182.432 215.747 185.241 212.318 185.241 cv
208.891 185.241 206.116 182.432 206.116 178.977 cv
206.116 175.516 208.891 172.71 212.318 172.71 cv
215.747 172.71 218.524 175.516 218.524 178.977 cv
226.466 178.473 mo
226.466 181.934 223.685 184.741 220.262 184.741 cv
216.837 184.741 214.056 181.934 214.056 178.473 cv
214.056 175.018 216.837 172.209 220.262 172.209 cv
223.685 172.209 226.466 175.018 226.466 178.473 cv
234.903 191.005 mo
234.903 194.464 232.126 197.269 228.698 197.269 cv
225.274 197.269 222.496 194.464 222.496 191.005 cv
222.496 187.543 225.274 184.741 228.698 184.741 cv
232.126 184.741 234.903 187.543 234.903 191.005 cv
242.846 205.039 mo
242.846 208.5 240.068 211.303 236.64 211.303 cv
233.216 211.303 230.438 208.5 230.438 205.039 cv
230.438 201.58 233.216 198.774 236.64 198.774 cv
240.068 198.774 242.846 201.58 242.846 205.039 cv
250.788 206.541 mo
250.788 210.002 248.007 212.808 244.586 212.808 cv
241.159 212.808 238.377 210.002 238.377 206.541 cv
238.377 203.085 241.159 200.28 244.586 200.28 cv
248.007 200.28 250.788 203.085 250.788 206.541 cv
258.731 210.552 mo
258.731 214.01 255.95 216.819 252.525 216.819 cv
249.101 216.819 246.323 214.01 246.323 210.552 cv
246.323 207.094 249.101 204.288 252.525 204.288 cv
255.95 204.288 258.731 207.094 258.731 210.552 cv
267.168 218.572 mo
267.168 222.03 264.389 224.836 260.965 224.836 cv
257.538 224.836 254.759 222.03 254.759 218.572 cv
254.759 215.113 257.538 212.308 260.965 212.308 cv
264.389 212.308 267.168 215.113 267.168 218.572 cv
275.11 228.093 mo
275.11 231.555 272.329 234.358 268.907 234.358 cv
265.48 234.358 262.699 231.555 262.699 228.093 cv
262.699 224.635 265.48 221.832 268.907 221.832 cv
272.329 221.832 275.11 224.635 275.11 228.093 cv
283.053 233.607 mo
283.053 237.068 280.274 239.874 276.847 239.874 cv
273.422 239.874 270.644 237.068 270.644 233.607 cv
270.644 230.152 273.422 227.342 276.847 227.342 cv
280.274 227.342 283.053 230.152 283.053 233.607 cv
290.995 246.89 mo
290.995 250.35 288.216 253.157 284.789 253.157 cv
281.365 253.157 278.586 250.35 278.586 246.89 cv
278.586 243.434 281.365 240.624 284.789 240.624 cv
288.216 240.624 290.995 243.434 290.995 246.89 cv
299.184 248.144 mo
299.184 251.602 296.405 254.408 292.979 254.408 cv
289.558 254.408 286.776 251.602 286.776 248.144 cv
286.776 244.686 289.558 241.876 292.979 241.876 cv
296.405 241.876 299.184 244.686 299.184 248.144 cv
306.876 248.644 mo
306.876 252.103 304.101 254.909 300.674 254.909 cv
297.246 254.909 294.472 252.103 294.472 248.644 cv
294.472 245.183 297.246 242.38 300.674 242.38 cv
304.101 242.38 306.876 245.183 306.876 248.644 cv
315.316 272.703 mo
315.316 276.162 312.538 278.967 309.113 278.967 cv
305.686 278.967 302.908 276.162 302.908 272.703 cv
302.908 269.242 305.686 266.436 309.113 266.436 cv
312.538 266.436 315.316 269.242 315.316 272.703 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
323.259 264.683 mo
323.259 268.142 320.477 270.948 317.056 270.948 cv
313.629 270.948 310.848 268.142 310.848 264.683 cv
310.848 261.226 313.629 258.416 317.056 258.416 cv
320.477 258.416 323.259 261.226 323.259 264.683 cv
331.198 275.209 mo
331.198 278.665 328.422 281.474 324.996 281.474 cv
321.574 281.474 318.793 278.665 318.793 275.209 cv
318.793 271.749 321.574 268.942 324.996 268.942 cv
328.422 268.942 331.198 271.749 331.198 275.209 cv
339.143 287.237 mo
339.143 290.696 336.362 293.505 332.937 293.505 cv
329.514 293.505 326.733 290.696 326.733 287.237 cv
326.733 283.78 329.514 280.973 332.937 280.973 cv
336.362 280.973 339.143 283.78 339.143 287.237 cv
347.58 291.246 mo
347.58 294.707 344.802 297.514 341.377 297.514 cv
337.95 297.514 335.173 294.707 335.173 291.246 cv
335.173 287.791 337.95 284.981 341.377 284.981 cv
344.802 284.981 347.58 287.791 347.58 291.246 cv
355.525 296.259 mo
355.525 299.717 352.744 302.526 349.318 302.526 cv
345.896 302.526 343.115 299.717 343.115 296.259 cv
343.115 292.803 345.896 289.995 349.318 289.995 cv
352.744 289.995 355.525 292.803 355.525 296.259 cv
363.466 308.29 mo
363.466 311.745 360.683 314.554 357.263 314.554 cv
353.836 314.554 351.057 311.745 351.057 308.29 cv
351.057 304.831 353.836 302.022 357.263 302.022 cv
360.683 302.022 363.466 304.831 363.466 308.29 cv
371.407 323.825 mo
371.407 327.287 368.629 330.089 365.202 330.089 cv
361.778 330.089 358.996 327.287 358.996 323.825 cv
358.996 320.367 361.778 317.561 365.202 317.561 cv
368.629 317.561 371.407 320.367 371.407 323.825 cv
379.847 321.819 mo
379.847 325.281 377.066 328.086 373.642 328.086 cv
370.218 328.086 367.436 325.281 367.436 321.819 cv
367.436 318.365 370.218 315.555 373.642 315.555 cv
377.066 315.555 379.847 318.365 379.847 321.819 cv
387.787 333.85 mo
387.787 337.308 385.008 340.115 381.584 340.115 cv
378.157 340.115 375.379 337.308 375.379 333.85 cv
375.379 330.393 378.157 327.583 381.584 327.583 cv
385.008 327.583 387.787 330.393 387.787 333.85 cv
395.728 342.37 mo
395.728 345.829 392.951 348.638 389.524 348.638 cv
386.102 348.638 383.321 345.829 383.321 342.37 cv
383.321 338.913 386.102 336.106 389.524 336.106 cv
392.951 336.106 395.728 338.913 395.728 342.37 cv
403.672 342.875 mo
403.672 346.33 400.893 349.136 397.466 349.136 cv
394.042 349.136 391.263 346.33 391.263 342.875 cv
391.263 339.413 394.042 336.608 397.466 336.608 cv
400.893 336.608 403.672 339.413 403.672 342.875 cv
412.112 347.384 mo
412.112 350.841 409.333 353.651 405.906 353.651 cv
402.478 353.651 399.703 350.841 399.703 347.384 cv
399.703 343.925 402.478 341.119 405.906 341.119 cv
409.333 341.119 412.112 343.925 412.112 347.384 cv
123.902 93.9163 mo
446.029 93.9163 li
130.17 93.7685 mo
130.17 97.2262 127.391 100.032 123.964 100.032 cv
120.54 100.032 117.761 97.2262 117.761 93.7685 cv
117.761 90.3098 120.54 87.5033 123.964 87.5033 cv
127.391 87.5033 130.17 90.3098 130.17 93.7685 cv
138.112 100.786 mo
138.112 104.244 135.33 107.051 131.909 107.051 cv
128.482 107.051 125.7 104.244 125.7 100.786 cv
125.7 97.3287 128.482 94.5222 131.909 94.5222 cv
135.33 94.5222 138.112 97.3287 138.112 100.786 cv
146.051 103.793 mo
146.051 107.252 143.273 110.057 139.848 110.057 cv
136.421 110.057 133.643 107.252 133.643 103.793 cv
133.643 100.335 136.421 97.5256 139.848 97.5256 cv
143.273 97.5256 146.051 100.335 146.051 103.793 cv
153.996 108.302 mo
153.996 111.763 151.215 114.57 147.791 114.57 cv
144.363 114.57 141.585 111.763 141.585 108.302 cv
141.585 104.847 144.363 102.041 147.791 102.041 cv
151.215 102.041 153.996 104.847 153.996 108.302 cv
161.939 114.82 mo
161.939 118.278 159.157 121.087 155.73 121.087 cv
152.309 121.087 149.527 118.278 149.527 114.82 cv
149.527 111.361 152.309 108.556 155.73 108.556 cv
159.157 108.556 161.939 111.361 161.939 114.82 cv
170.376 116.322 mo
170.376 119.783 167.597 122.59 164.17 122.59 cv
160.746 122.59 157.967 119.783 157.967 116.322 cv
157.967 112.867 160.746 110.057 164.17 110.057 cv
167.597 110.057 170.376 112.867 170.376 116.322 cv
178.318 121.335 mo
178.318 124.792 175.536 127.602 172.112 127.602 cv
168.688 127.602 165.906 124.792 165.906 121.335 cv
165.906 117.88 168.688 115.07 172.112 115.07 cv
175.536 115.07 178.318 117.88 178.318 121.335 cv
186.26 123.34 mo
186.26 126.801 183.479 129.604 180.054 129.604 cv
176.63 129.604 173.849 126.801 173.849 123.34 cv
173.849 119.883 176.63 117.076 180.054 117.076 cv
183.479 117.076 186.26 119.883 186.26 123.34 cv
194.2 126.851 mo
194.2 130.306 191.421 133.115 187.997 133.115 cv
184.569 133.115 181.792 130.306 181.792 126.851 cv
181.792 123.39 184.569 120.584 187.997 120.584 cv
191.421 120.584 194.2 123.39 194.2 126.851 cv
202.639 129.357 mo
202.639 132.812 199.858 135.622 196.437 135.622 cv
193.009 135.622 190.232 132.812 190.232 129.357 cv
190.232 125.896 193.009 123.09 196.437 123.09 cv
199.858 123.09 202.639 125.896 202.639 129.357 cv
210.582 131.863 mo
210.582 135.319 207.8 138.125 204.377 138.125 cv
200.953 138.125 198.17 135.319 198.17 131.863 cv
198.17 128.403 200.953 125.596 204.377 125.596 cv
207.8 125.596 210.582 128.403 210.582 131.863 cv
218.524 136.372 mo
218.524 139.831 215.747 142.64 212.318 142.64 cv
208.891 142.64 206.116 139.831 206.116 136.372 cv
206.116 132.914 208.891 130.108 212.318 130.108 cv
215.747 130.108 218.524 132.914 218.524 136.372 cv
226.466 140.885 mo
226.466 144.34 223.685 147.149 220.262 147.149 cv
216.837 147.149 214.056 144.34 214.056 140.885 cv
214.056 137.423 216.837 134.617 220.262 134.617 cv
223.685 134.617 226.466 137.423 226.466 140.885 cv
234.903 143.391 mo
234.903 146.846 232.126 149.655 228.698 149.655 cv
225.274 149.655 222.496 146.846 222.496 143.391 cv
222.496 139.93 225.274 137.124 228.698 137.124 cv
232.126 137.124 234.903 139.93 234.903 143.391 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
242.846 141.886 mo
242.846 145.343 240.068 148.15 236.64 148.15 cv
233.216 148.15 230.438 145.343 230.438 141.886 cv
230.438 138.427 233.216 135.622 236.64 135.622 cv
240.068 135.622 242.846 138.427 242.846 141.886 cv
250.788 146.896 mo
250.788 150.357 248.007 153.162 244.586 153.162 cv
241.159 153.162 238.377 150.357 238.377 146.896 cv
238.377 143.44 241.159 140.631 244.586 140.631 cv
248.007 140.631 250.788 143.44 250.788 146.896 cv
258.731 146.398 mo
258.731 149.856 255.95 152.659 252.525 152.659 cv
249.101 152.659 246.323 149.856 246.323 146.398 cv
246.323 142.937 249.101 140.133 252.525 140.133 cv
255.95 140.133 258.731 142.937 258.731 146.398 cv
267.168 151.908 mo
267.168 155.369 264.389 158.175 260.965 158.175 cv
257.538 158.175 254.759 155.369 254.759 151.908 cv
254.759 148.452 257.538 145.644 260.965 145.644 cv
264.389 145.644 267.168 148.452 267.168 151.908 cv
275.11 150.406 mo
275.11 153.865 272.329 156.673 268.907 156.673 cv
265.48 156.673 262.699 153.865 262.699 150.406 cv
262.699 146.948 265.48 144.142 268.907 144.142 cv
272.329 144.142 275.11 146.948 275.11 150.406 cv
283.053 154.414 mo
283.053 157.876 280.274 160.682 276.847 160.682 cv
273.422 160.682 270.644 157.876 270.644 154.414 cv
270.644 150.96 273.422 148.15 276.847 148.15 cv
280.274 148.15 283.053 150.96 283.053 154.414 cv
290.995 156.42 mo
290.995 159.879 288.216 162.684 284.789 162.684 cv
281.365 162.684 278.586 159.879 278.586 156.42 cv
278.586 152.962 281.365 150.156 284.789 150.156 cv
288.216 150.156 290.995 152.962 290.995 156.42 cv
299.184 157.925 mo
299.184 161.384 296.405 164.189 292.979 164.189 cv
289.558 164.189 286.776 161.384 286.776 157.925 cv
286.776 154.466 289.558 151.661 292.979 151.661 cv
296.405 151.661 299.184 154.466 299.184 157.925 cv
306.876 161.432 mo
306.876 164.891 304.101 167.697 300.674 167.697 cv
297.246 167.697 294.472 164.891 294.472 161.432 cv
294.472 157.974 297.246 155.166 300.674 155.166 cv
304.101 155.166 306.876 157.974 306.876 161.432 cv
315.316 158.426 mo
315.316 161.883 312.538 164.69 309.113 164.69 cv
305.686 164.69 302.908 161.883 302.908 158.426 cv
302.908 154.968 305.686 152.161 309.113 152.161 cv
312.538 152.161 315.316 154.968 315.316 158.426 cv
323.259 164.943 mo
323.259 168.399 320.477 171.207 317.056 171.207 cv
313.629 171.207 310.848 168.399 310.848 164.943 cv
310.848 161.482 313.629 158.676 317.056 158.676 cv
320.477 158.676 323.259 161.482 323.259 164.943 cv
331.198 160.431 mo
331.198 163.89 328.422 166.695 324.996 166.695 cv
321.574 166.695 318.793 163.89 318.793 160.431 cv
318.793 156.974 321.574 154.167 324.996 154.167 cv
328.422 154.167 331.198 156.974 331.198 160.431 cv
339.143 168.448 mo
339.143 171.909 336.362 174.715 332.937 174.715 cv
329.514 174.715 326.733 171.909 326.733 168.448 cv
326.733 164.992 329.514 162.184 332.937 162.184 cv
336.362 162.184 339.143 164.992 339.143 168.448 cv
347.58 163.939 mo
347.58 167.397 344.802 170.203 341.377 170.203 cv
337.95 170.203 335.173 167.397 335.173 163.939 cv
335.173 160.482 337.95 157.672 341.377 157.672 cv
344.802 157.672 347.58 160.482 347.58 163.939 cv
355.525 161.934 mo
355.525 165.391 352.744 168.201 349.318 168.201 cv
345.896 168.201 343.115 165.391 343.115 161.934 cv
343.115 158.478 345.896 155.669 349.318 155.669 cv
352.744 155.669 355.525 158.478 355.525 161.934 cv
363.466 169.956 mo
363.466 173.411 360.683 176.22 357.263 176.22 cv
353.836 176.22 351.057 173.411 351.057 169.956 cv
351.057 166.495 353.836 163.689 357.263 163.689 cv
360.683 163.689 363.466 166.495 363.466 169.956 cv
371.407 170.454 mo
371.407 173.912 368.629 176.718 365.202 176.718 cv
361.778 176.718 358.996 173.912 358.996 170.454 cv
358.996 166.996 361.778 164.189 365.202 164.189 cv
368.629 164.189 371.407 166.996 371.407 170.454 cv
379.847 167.951 mo
379.847 171.409 377.066 174.212 373.642 174.212 cv
370.218 174.212 367.436 171.409 367.436 167.951 cv
367.436 164.489 370.218 161.683 373.642 161.683 cv
377.066 161.683 379.847 164.489 379.847 167.951 cv
387.787 174.465 mo
387.787 177.924 385.008 180.729 381.584 180.729 cv
378.157 180.729 375.379 177.924 375.379 174.465 cv
375.379 171.003 378.157 168.201 381.584 168.201 cv
385.008 168.201 387.787 171.003 387.787 174.465 cv
395.728 175.967 mo
395.728 179.428 392.951 182.234 389.524 182.234 cv
386.102 182.234 383.321 179.428 383.321 175.967 cv
383.321 172.512 386.102 169.702 389.524 169.702 cv
392.951 169.702 395.728 172.512 395.728 175.967 cv
403.672 170.954 mo
403.672 174.416 400.893 177.221 397.466 177.221 cv
394.042 177.221 391.263 174.416 391.263 170.954 cv
391.263 167.499 394.042 164.69 397.466 164.69 cv
400.893 164.69 403.672 167.499 403.672 170.954 cv
412.112 173.461 mo
412.112 176.922 409.333 179.728 405.906 179.728 cv
402.478 179.728 399.703 176.922 399.703 173.461 cv
399.703 170.005 402.478 167.196 405.906 167.196 cv
409.333 167.196 412.112 170.005 412.112 173.461 cv
420.054 178.473 mo
420.054 181.934 417.272 184.741 413.848 184.741 cv
410.424 184.741 407.642 181.934 407.642 178.473 cv
407.642 175.018 410.424 172.209 413.848 172.209 cv
417.272 172.209 420.054 175.018 420.054 178.473 cv
427.993 176.471 mo
427.993 179.926 425.215 182.735 421.79 182.735 cv
418.363 182.735 415.585 179.926 415.585 176.471 cv
415.585 173.013 418.363 170.203 421.79 170.203 cv
425.215 170.203 427.993 173.013 427.993 176.471 cv
435.935 174.465 mo
435.935 177.924 433.157 180.729 429.733 180.729 cv
426.305 180.729 423.524 177.924 423.524 174.465 cv
423.524 171.003 426.305 168.201 429.733 168.201 cv
433.157 168.201 435.935 171.003 435.935 174.465 cv
444.375 173.965 mo
444.375 177.419 441.594 180.229 438.173 180.229 cv
434.745 180.229 431.964 177.419 431.964 173.965 cv
431.964 170.507 434.745 167.697 438.173 167.697 cv
441.594 167.697 444.375 170.507 444.375 173.965 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
452.315 179.478 mo
452.315 182.936 449.536 185.742 446.112 185.742 cv
442.688 185.742 439.906 182.936 439.906 179.478 cv
439.906 176.017 442.688 173.213 446.112 173.213 cv
449.536 173.213 452.315 176.017 452.315 179.478 cv
130.17 93.7685 mo
130.17 97.2262 127.391 100.032 123.964 100.032 cv
120.54 100.032 117.761 97.2262 117.761 93.7685 cv
117.761 90.3098 120.54 87.5033 123.964 87.5033 cv
127.391 87.5033 130.17 90.3098 130.17 93.7685 cv
138.112 114.82 mo
138.112 118.278 135.33 121.087 131.909 121.087 cv
128.482 121.087 125.7 118.278 125.7 114.82 cv
125.7 111.361 128.482 108.556 131.909 108.556 cv
135.33 108.556 138.112 111.361 138.112 114.82 cv
146.051 134.868 mo
146.051 138.329 143.273 141.132 139.848 141.132 cv
136.421 141.132 133.643 138.329 133.643 134.868 cv
133.643 131.409 136.421 128.604 139.848 128.604 cv
143.273 128.604 146.051 131.409 146.051 134.868 cv
153.996 158.426 mo
153.996 161.883 151.215 164.69 147.791 164.69 cv
144.363 164.69 141.585 161.883 141.585 158.426 cv
141.585 154.968 144.363 152.161 147.791 152.161 cv
151.215 152.161 153.996 154.968 153.996 158.426 cv
161.939 178.977 mo
161.939 182.432 159.157 185.241 155.73 185.241 cv
152.309 185.241 149.527 182.432 149.527 178.977 cv
149.527 175.516 152.309 172.71 155.73 172.71 cv
159.157 172.71 161.939 175.516 161.939 178.977 cv
170.376 195.013 mo
170.376 198.475 167.597 201.28 164.17 201.28 cv
160.746 201.28 157.967 198.475 157.967 195.013 cv
157.967 191.556 160.746 188.749 164.17 188.749 cv
167.597 188.749 170.376 191.556 170.376 195.013 cv
178.318 222.079 mo
178.318 225.538 175.536 228.347 172.112 228.347 cv
168.688 228.347 165.906 225.538 165.906 222.079 cv
165.906 218.621 168.688 215.815 172.112 215.815 cv
175.536 215.815 178.318 218.621 178.318 222.079 cv
186.26 241.126 mo
186.26 244.583 183.479 247.393 180.054 247.393 cv
176.63 247.393 173.849 244.583 173.849 241.126 cv
173.849 237.67 176.63 234.862 180.054 234.862 cv
183.479 234.862 186.26 237.67 186.26 241.126 cv
194.2 265.185 mo
194.2 268.643 191.421 271.449 187.997 271.449 cv
184.569 271.449 181.792 268.643 181.792 265.185 cv
181.792 261.726 184.569 258.92 187.997 258.92 cv
191.421 258.92 194.2 261.726 194.2 265.185 cv
202.639 290.745 mo
202.639 294.207 199.858 297.009 196.437 297.009 cv
193.009 297.009 190.232 294.207 190.232 290.745 cv
190.232 287.287 193.009 284.481 196.437 284.481 cv
199.858 284.481 202.639 287.287 202.639 290.745 cv
210.582 302.273 mo
210.582 305.734 207.8 308.537 204.377 308.537 cv
200.953 308.537 198.17 305.734 198.17 302.273 cv
198.17 298.814 200.953 296.011 204.377 296.011 cv
207.8 296.011 210.582 298.814 210.582 302.273 cv
218.524 329.842 mo
218.524 333.297 215.747 336.106 212.318 336.106 cv
208.891 336.106 206.116 333.297 206.116 329.842 cv
206.116 326.384 208.891 323.575 212.318 323.575 cv
215.747 323.575 218.524 326.384 218.524 329.842 cv
226.466 344.376 mo
226.466 347.835 223.685 350.641 220.262 350.641 cv
216.837 350.641 214.056 347.835 214.056 344.376 cv
214.056 340.915 216.837 338.109 220.262 338.109 cv
223.685 338.109 226.466 340.915 226.466 344.376 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
123.902 93.9163 mo
131.831 115.324 li
139.932 136.904 li
148.032 158.305 li
155.959 179.54 li
164.058 200.771 li
180.261 242.887 li
188.192 263.945 li
196.288 284.657 li
204.389 305.54 li
212.318 326.248 li
220.419 346.784 li
25.9917 lw
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
123.902 757.674 mo
123.902 451.03 li
446.029 451.03 li
446.029 757.674 li
123.902 757.674 li
1 gry
12.9804 lw
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
123.902 451.03 mo
446.029 451.03 li
123.902 757.674 mo
446.029 757.674 li
446.029 757.674 mo
446.029 451.03 li
123.902 757.674 mo
123.902 451.03 li
123.902 757.674 mo
446.029 757.674 li
123.902 757.674 mo
123.902 451.03 li
123.902 757.674 mo
123.902 754.37 li
123.902 451.03 mo
123.902 454.164 li
0 gry
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
118.188 782.95 mo
(0)sh
204.389 757.674 mo
204.389 754.37 li
204.389 451.03 mo
204.389 454.164 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
198.675 782.95 mo
(5)sh
284.879 757.674 mo
284.879 754.37 li
284.879 451.03 mo
284.879 454.164 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
273.475 782.95 mo
(10)
[11.499 0 ]xsh
365.368 757.674 mo
365.368 754.37 li
365.368 451.03 mo
365.368 454.164 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
353.962 782.95 mo
(15)
[11.499 0 ]xsh
446.029 757.674 mo
446.029 754.37 li
446.029 451.03 mo
446.029 454.164 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
434.619 782.95 mo
(20)
[11.499 0 ]xsh
123.902 757.674 mo
127.005 757.674 li
446.029 757.674 mo
442.752 757.674 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
98.5418 765.372 mo
(-1)
[6.88686 0 ]xsh
123.902 706.509 mo
127.005 706.509 li
446.029 706.509 mo
442.752 706.509 li
123.902 655.347 mo
127.005 655.347 li
446.029 655.347 mo
442.752 655.347 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
106.469 663.048 mo
(0)sh
123.902 604.352 mo
127.005 604.352 li
446.029 604.352 mo
442.752 604.352 li
123.902 553.187 mo
127.005 553.187 li
446.029 553.187 mo
442.752 553.187 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
106.469 560.895 mo
(1)sh
123.902 502.022 mo
127.005 502.022 li
446.029 502.022 mo
442.752 502.022 li
123.902 451.03 mo
127.005 451.03 li
446.029 451.03 mo
442.752 451.03 li
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
106.469 458.744 mo
(2)sh
123.902 451.03 mo
446.029 451.03 li
123.902 757.674 mo
446.029 757.674 li
446.029 757.674 mo
446.029 451.03 li
123.902 757.674 mo
123.902 451.03 li
130.17 655.21 mo
130.17 658.672 127.391 661.476 123.964 661.476 cv
120.54 661.476 117.761 658.672 117.761 655.21 cv
117.761 651.753 120.54 648.947 123.964 648.947 cv
127.391 648.947 130.17 651.753 130.17 655.21 cv
138.112 663.23 mo
138.112 666.689 135.33 669.498 131.909 669.498 cv
128.482 669.498 125.7 666.689 125.7 663.23 cv
125.7 659.775 128.482 656.966 131.909 656.966 cv
135.33 656.966 138.112 659.775 138.112 663.23 cv
146.051 678.769 mo
146.051 682.227 143.273 685.033 139.848 685.033 cv
136.421 685.033 133.643 682.227 133.643 678.769 cv
133.643 675.31 136.421 672.505 139.848 672.505 cv
143.273 672.505 146.051 675.31 146.051 678.769 cv
153.996 688.792 mo
153.996 692.252 151.215 695.059 147.791 695.059 cv
144.363 695.059 141.585 692.252 141.585 688.792 cv
141.585 685.336 144.363 682.527 147.791 682.527 cv
151.215 682.527 153.996 685.336 153.996 688.792 cv
161.939 696.311 mo
161.939 699.771 159.157 702.578 155.73 702.578 cv
152.309 702.578 149.527 699.771 149.527 696.311 cv
149.527 692.855 152.309 690.046 155.73 690.046 cv
159.157 690.046 161.939 692.855 161.939 696.311 cv
170.376 705.835 mo
170.376 709.293 167.597 712.1 164.17 712.1 cv
160.746 712.1 157.967 709.293 157.967 705.835 cv
157.967 702.377 160.746 699.568 164.17 699.568 cv
167.597 699.568 170.376 702.377 170.376 705.835 cv
178.318 701.823 mo
178.318 705.282 175.536 708.091 172.112 708.091 cv
168.688 708.091 165.906 705.282 165.906 701.823 cv
165.906 698.366 168.688 695.559 172.112 695.559 cv
175.536 695.559 178.318 698.366 178.318 701.823 cv
186.26 719.868 mo
186.26 723.327 183.479 726.133 180.054 726.133 cv
176.63 726.133 173.849 723.327 173.849 719.868 cv
173.849 716.411 176.63 713.601 180.054 713.601 cv
183.479 713.601 186.26 716.411 186.26 719.868 cv
194.2 716.361 mo
194.2 719.816 191.421 722.626 187.997 722.626 cv
184.569 722.626 181.792 719.816 181.792 716.361 cv
181.792 712.9 184.569 710.096 187.997 710.096 cv
191.421 710.096 194.2 712.9 194.2 716.361 cv
202.639 723.88 mo
202.639 727.336 199.858 730.144 196.437 730.144 cv
193.009 730.144 190.232 727.336 190.232 723.88 cv
190.232 720.419 193.009 717.613 196.437 717.613 cv
199.858 717.613 202.639 720.419 202.639 723.88 cv
210.582 722.375 mo
210.582 725.833 207.8 728.64 204.377 728.64 cv
200.953 728.64 198.17 725.833 198.17 722.375 cv
198.17 718.917 200.953 716.107 204.377 716.107 cv
207.8 716.107 210.582 718.917 210.582 722.375 cv
218.524 729.891 mo
218.524 733.353 215.747 736.158 212.318 736.158 cv
208.891 736.158 206.116 733.353 206.116 729.891 cv
206.116 726.436 208.891 723.627 212.318 723.627 cv
215.747 723.627 218.524 726.436 218.524 729.891 cv
226.466 713.354 mo
226.466 716.813 223.685 719.618 220.262 719.618 cv
216.837 719.618 214.056 716.813 214.056 713.354 cv
214.056 709.896 216.837 707.087 220.262 707.087 cv
223.685 707.087 226.466 709.896 226.466 713.354 cv
234.903 724.882 mo
234.903 728.339 232.126 731.146 228.698 731.146 cv
225.274 731.146 222.496 728.339 222.496 724.882 cv
222.496 721.423 225.274 718.614 228.698 718.614 cv
232.126 718.614 234.903 721.423 234.903 724.882 cv
242.846 713.854 mo
242.846 717.31 240.068 720.119 236.64 720.119 cv
233.216 720.119 230.438 717.31 230.438 713.854 cv
230.438 710.394 233.216 707.59 236.64 707.59 cv
240.068 707.59 242.846 710.394 242.846 713.854 cv
250.788 711.849 mo
250.788 715.307 248.007 718.116 244.586 718.116 cv
241.159 718.116 238.377 715.307 238.377 711.849 cv
238.377 708.391 241.159 705.585 244.586 705.585 cv
248.007 705.585 250.788 708.391 250.788 711.849 cv
258.731 714.856 mo
258.731 718.314 255.95 721.121 252.525 721.121 cv
249.101 721.121 246.323 718.314 246.323 714.856 cv
246.323 711.398 249.101 708.592 252.525 708.592 cv
255.95 708.592 258.731 711.398 258.731 714.856 cv
267.168 700.823 mo
267.168 704.281 264.389 707.087 260.965 707.087 cv
257.538 707.087 254.759 704.281 254.759 700.823 cv
254.759 697.365 257.538 694.555 260.965 694.555 cv
264.389 694.555 267.168 697.365 267.168 700.823 cv
275.11 699.32 mo
275.11 702.776 272.329 705.585 268.907 705.585 cv
265.48 705.585 262.699 702.776 262.699 699.32 cv
262.699 695.86 265.48 693.053 268.907 693.053 cv
272.329 693.053 275.11 695.86 275.11 699.32 cv
283.053 690.8 mo
283.053 694.256 280.274 697.061 276.847 697.061 cv
273.422 697.061 270.644 694.256 270.644 690.8 cv
270.644 687.339 273.422 684.533 276.847 684.533 cv
280.274 684.533 283.053 687.339 283.053 690.8 cv
290.995 684.283 mo
290.995 687.74 288.216 690.547 284.789 690.547 cv
281.365 690.547 278.586 687.74 278.586 684.283 cv
278.586 680.824 281.365 678.015 284.789 678.015 cv
288.216 678.015 290.995 680.824 290.995 684.283 cv
299.184 686.285 mo
299.184 689.746 296.405 692.553 292.979 692.553 cv
289.558 692.553 286.776 689.746 286.776 686.285 cv
286.776 682.83 289.558 680.02 292.979 680.02 cv
296.405 680.02 299.184 682.83 299.184 686.285 cv
306.876 673.757 mo
306.876 677.215 304.101 680.02 300.674 680.02 cv
297.246 680.02 294.472 677.215 294.472 673.757 cv
294.472 670.298 297.246 667.492 300.674 667.492 cv
304.101 667.492 306.876 670.298 306.876 673.757 cv
315.316 653.709 mo
315.316 657.164 312.538 659.973 309.113 659.973 cv
305.686 659.973 302.908 657.164 302.908 653.709 cv
302.908 650.25 305.686 647.442 309.113 647.442 cv
312.538 647.442 315.316 650.25 315.316 653.709 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
323.259 646.19 mo
323.259 649.652 320.477 652.454 317.056 652.454 cv
313.629 652.454 310.848 649.652 310.848 646.19 cv
310.848 642.732 313.629 639.926 317.056 639.926 cv
320.477 639.926 323.259 642.732 323.259 646.19 cv
331.198 632.657 mo
331.198 636.115 328.422 638.925 324.996 638.925 cv
321.574 638.925 318.793 636.115 318.793 632.657 cv
318.793 629.199 321.574 626.393 324.996 626.393 cv
328.422 626.393 331.198 629.199 331.198 632.657 cv
339.143 624.638 mo
339.143 628.099 336.362 630.902 332.937 630.902 cv
329.514 630.902 326.733 628.099 326.733 624.638 cv
326.733 621.179 329.514 618.373 332.937 618.373 cv
336.362 618.373 339.143 621.179 339.143 624.638 cv
347.58 613.11 mo
347.58 616.568 344.802 619.374 341.377 619.374 cv
337.95 619.374 335.173 616.568 335.173 613.11 cv
335.173 609.648 337.95 606.846 341.377 606.846 cv
344.802 606.846 347.58 609.648 347.58 613.11 cv
355.525 628.645 mo
355.525 632.107 352.744 634.913 349.318 634.913 cv
345.896 634.913 343.115 632.107 343.115 628.645 cv
343.115 625.19 345.896 622.384 349.318 622.384 cv
352.744 622.384 355.525 625.19 355.525 628.645 cv
363.466 604.09 mo
363.466 607.547 360.683 610.354 357.263 610.354 cv
353.836 610.354 351.057 607.547 351.057 604.09 cv
351.057 600.628 353.836 597.824 357.263 597.824 cv
360.683 597.824 363.466 600.628 363.466 604.09 cv
371.407 592.562 mo
371.407 596.021 368.629 598.823 365.202 598.823 cv
361.778 598.823 358.996 596.021 358.996 592.562 cv
358.996 589.1 361.778 586.298 365.202 586.298 cv
368.629 586.298 371.407 589.1 371.407 592.562 cv
379.847 571.51 mo
379.847 574.968 377.066 577.774 373.642 577.774 cv
370.218 577.774 367.436 574.968 367.436 571.51 cv
367.436 568.052 370.218 565.242 373.642 565.242 cv
377.066 565.242 379.847 568.052 379.847 571.51 cv
387.787 542.939 mo
387.787 546.4 385.008 549.207 381.584 549.207 cv
378.157 549.207 375.379 546.4 375.379 542.939 cv
375.379 539.484 378.157 536.675 381.584 536.675 cv
385.008 536.675 387.787 539.484 387.787 542.939 cv
395.728 560.483 mo
395.728 563.939 392.951 566.747 389.524 566.747 cv
386.102 566.747 383.321 563.939 383.321 560.483 cv
383.321 557.022 386.102 554.216 389.524 554.216 cv
392.951 554.216 395.728 557.022 395.728 560.483 cv
403.672 537.426 mo
403.672 540.884 400.893 543.69 397.466 543.69 cv
394.042 543.69 391.263 540.884 391.263 537.426 cv
391.263 533.967 394.042 531.162 397.466 531.162 cv
400.893 531.162 403.672 533.967 403.672 537.426 cv
412.112 529.91 mo
412.112 533.368 409.333 536.174 405.906 536.174 cv
402.478 536.174 399.703 533.368 399.703 529.91 cv
399.703 526.449 402.478 523.645 405.906 523.645 cv
409.333 523.645 412.112 526.449 412.112 529.91 cv
420.054 505.35 mo
420.054 508.806 417.272 511.614 413.848 511.614 cv
410.424 511.614 407.642 508.806 407.642 505.35 cv
407.642 501.889 410.424 499.083 413.848 499.083 cv
417.272 499.083 420.054 501.889 420.054 505.35 cv
427.993 514.372 mo
427.993 517.829 425.215 520.636 421.79 520.636 cv
418.363 520.636 415.585 517.829 415.585 514.372 cv
415.585 510.913 418.363 508.103 421.79 508.103 cv
425.215 508.103 427.993 510.913 427.993 514.372 cv
435.935 503.344 mo
435.935 506.803 433.157 509.612 429.733 509.612 cv
426.305 509.612 423.524 506.803 423.524 503.344 cv
423.524 499.887 426.305 497.08 429.733 497.08 cv
433.157 497.08 435.935 499.887 435.935 503.344 cv
444.375 465.753 mo
444.375 469.211 441.594 472.017 438.173 472.017 cv
434.745 472.017 431.964 469.211 431.964 465.753 cv
431.964 462.294 434.745 459.489 438.173 459.489 cv
441.594 459.489 444.375 462.294 444.375 465.753 cv
452.315 463.246 mo
452.315 466.705 449.536 469.511 446.112 469.511 cv
442.688 469.511 439.906 466.705 439.906 463.246 cv
439.906 459.788 442.688 456.982 446.112 456.982 cv
449.536 456.982 452.315 459.788 452.315 463.246 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
grestore
gsave
123.877 757.89 mo
446.168 757.89 li
446.168 451.086 li
123.877 451.086 li
cp
clp
8 setflat
123.902 655.347 mo
131.831 669.266 li
139.932 681.449 li
148.032 691.718 li
155.959 700.593 li
164.058 707.727 li
172.162 713.472 li
180.261 717.996 li
188.192 721.127 li
196.288 723.219 li
204.389 724.087 li
212.318 723.914 li
220.419 722.87 li
228.522 720.781 li
236.622 717.823 li
244.549 714.167 li
252.649 709.642 li
260.749 704.596 li
268.852 698.677 li
276.779 692.24 li
284.879 685.102 li
292.979 677.444 li
300.908 669.442 li
309.009 660.74 li
317.109 651.691 li
325.212 642.12 li
333.135 632.196 li
341.239 621.93 li
349.338 611.142 li
357.442 600.174 li
365.368 588.866 li
373.469 577.203 li
381.568 565.37 li
389.499 553.187 li
397.598 540.831 li
405.699 528.3 li
413.802 515.422 li
421.726 502.368 li
437.929 475.914 li
446.029 462.341 li
false sop
0 gry
25.9917 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
123.902 655.347 mo
446.029 655.347 li
12.9804 lw
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
grestore
false sop
0 gry
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/percent <1C60D8A8C9B59F8594089738AF9DF465F54C6E2E73D734CAE89F38
29C655870E5044D20DDF1C15426538D8756B98CCE5D961A3A5C080C9710FFF37
CA3959F6BD60F3A50AAEB0FA2B9533548A9525919BAF73CC58A05138B3772BD8
00A6DCE98B830406AD34A7385A06E8341B3E730BDDEC04AA5E3856EB49972689
3CCA542A61661EC0A8560829E2A9EA2E6C1F7661B29F647A8BF63EE405DC6C4B
6CE1866AF1D8C0062AED7ABAE59437FA2818FDD8CDA76B> |-
/parenleft <1C60D8A8C9B81F2C36CCD20CF8942181AC7F4474F2382F7D30DE
700E9D560AD8BD19EE22EACC9412684566AC63B0B33E5FC85E602E759FFC49BF
47306AE7BD9165A4E1D3> |-
/parenright <1C60D8A8C9B81F2C36CCD20CF894218194033859F410DA60583
B3351294315C6F5C4ACE205E4813D6F508658462783E35F08D53213E9F0ED798
4671681D402251A6FDC72> |-
/comma <1C60D8A8C9B854D0F84ABF2F32EEB7FA8EED76E620A4479EE0E29CEB
D5D7E6591884C779204CBCAA7D477065F5> |-
/H <1C60D8A8C9B6079F3517E07A2A32EE8D09F795FB6E9F11AE46C75AA31D50
B194B413469264EA3867DFEC1283FAD051B3C6B29B8DCA4E1CF3E914FCD7B445> |-
/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C5
36E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCE
C5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A
13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5
E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B9
32E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73
181F38CB34F1645F> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/f <1C60D8A8C9B854D0A3953AFC308C88F2CB7B77611DE17001C91B65CE86C8
891C39A4DBCDDE1373931B89EF13785E617F99570B386BE99D1A576D0D1701D2
F253DF8B3192240780F3E221EB68A6> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0
AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C
76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-
/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E3044975
4F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F0
11296A017FBEA0AE0137A10664047E> |-
/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D7
2A7354004D800853CB28271AB7834CF7A228A3A39984E70B0D> |-
/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA56325
4EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB07
74B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC
2BE2D98ABE47C6EE8D76> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF322792C3BF0D38904A73F4440F6D92D5F5AE09CC018066
468E681543C8F047ACFD615B747546B5480444F746C2E0CD698A8961C13AF2BF
3940EE05278AAEFC066B11F108A32A247BB7A1777E1A71A35D0F71427779DCE4
A1F61E27FEB716A84B084E0A293D7F37477EB4DB407CE06D6E55EF820764AC64
86> |-
/r <1C60D8A8C9B81F2C6DADD03096566F18A44C12756941A411C99A198CC8D4
3303483F8D4425C8C61A6016070C9755F215C6103A7B22F8F2C0462F4082ABD3
D08AED77838B7C426C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBE961C83BECBAF3
B4E5B0884D0E51EEB661AACE85886254728F5E34D401120D0E6C2B208B0A6EFE
EA993E281F58443FA8AF570296DB9AE2B0FD959762404D9D39D028E903103EBA
C5E167D6A6970865F2360877231B6B2635F07AB03FB78405FFC01711DD4ECCBE
59E46BB3AA7E7E004FCD7D8551926A4D9FE5600A8EF27E924599C5> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/x <1C60D8A8C9B7A73DEE9439F61CF83FD6F0AADDB8373458EFEDE4BF6C4615
5F8370F02E9CE5FFD24DBE7D153354FABD4F844978ABB054761731A2B93E507F
E62552012BB1EB5E1E3EE678332D9E> |-
/y <1C60D8A8C9B7A73DB586573D0157E99900164D3426B7076627BC2EECA012
86D768DC747555489A92E6150F2562090A782510749223A2D01B0EE6374EEA8F
B8F18250484D2C6B565CDCA8D95B100B7B1E0289ED25E0E350438F56B28A332A
DDF034CB8EDC264C3ABAA85278C66F3E4B6419> |-
/z <1C60D8A8C9B7A73DC507CAD0E4E88F6FB9C94CACABF910769E2577196AAA
10B49DA01B4D69E59659AA04AF6A1B6969B2FA2F58> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 72 /H put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 18{/.notdef}rp /H 24{/.notdef}rp /a /.notdef /c /.notdef 
/e /f /g /h /i 4{/.notdef}rp /n /o 
/p /.notdef /r /s /t 3{/.notdef}rp /x /y 
/z 133{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
151.53 805.121 mo
(postsynaptic firing rate, x \(Hz\))
[11.499 11.499 10.3409 5.74951 10.3409 10.3409 11.499 11.499 11.499 5.74951 4.59134 10.3409 
5.74951 5.74951 4.59134 6.88687 4.59131 11.499 11.4991 5.74951 6.88687 11.499 5.74951 11.499 
5.74951 5.74951 10.3409 5.74951 6.88687 14.9322 10.3409 0 ]xsh
DYLDUW+Helvetica*1 [0 -20.8829 -20.6817 0 0 0 ]msf
91.882 288.944 mo
(synaptic change, %)
[-10.4415 -10.4415 -11.6109 -11.6109 -11.6109 -5.80548 -4.63599 -10.4415 -5.80548 -10.4415 -11.6109 -11.6109 
-11.6109 -11.6109 -11.6109 -5.80542 -5.80548 0 ]ysh
100.155 710.781 mo
(synaptic change, %)
[-10.4415 -10.4415 -11.6109 -11.6109 -11.6109 -5.80548 -4.63599 -10.4415 -5.80548 -10.4414 -11.611 -11.6109 
-11.6109 -11.6109 -11.6109 -5.80548 -5.80542 0 ]ysh
123.902 97.0504 mo
401.906 350.613 li
123.902 93.9163 mo
177.502 133.075 289.533 167.531 444.65 177.973 cv
25.9917 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
138.317 550.067 mo
148.119 550.067 li
148.119 540.743 li
138.317 540.743 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 99.5327 526.942 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
157.278 575.493 mo
168.07 575.493 li
168.07 513.707 li
157.278 513.707 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.653 0 0 78.1633 123.52 494.776 ]ct
<<
/T 1
/W 109 
/H 618 
/M[109 0 0 -618 0 618 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\gg#_Kp#mJmA>$G_D6TP+Ui8cA^C7A%?q`***;!"L7"J-"Xln,PWsd)f6iJ,ttSO8q;"2uj2P
_LMX^bSE)YT"uZd#df\C6%R/hoS=29s%J-aC(gAj>%^il:$W@hfH.L.NJ$Qd=riV0,S/S-+9DG@$iiNH
W\>o56Kp6*h;Qn2O8oN3YZ@mS$Pj4rJ:cK0&4o<fh'f_dTpH^?6RbR<@cDU%e-H)F[pPeM(u>3R+KoMK
q:R)1eW%tn[Md_07b+p!_K+Cu/5je$hesX*rVS%"_LZEGZn3(<5D%-O2*DsdC/M.?D"CKIGAc*WJ]'It
BVn]cjmZoW\Y'21`uEB7rYV+P2j#63E]RQ#5=64P^Pc=#Z+H))RK,FN=s4$MD\NV0_9Yd%#qcd9g4Z@X
]F9e5b5:?(,S,eEr'M"\o&1jV3tVA+a[;ra5S,[g!NYa\8qFd^1`%+(;;;S;4D[E:*Zsm@_"PFd'TjG(
Lf._0acP!S&BW!5W?+\$$r\XYO0b.:78*hi/g'[)G_SZSjD?]aY$)te.rk1`3B:cK(r/nq,_mF(Z3p[s
b`Z4L%S87s#qf'H*2NQZ&F/pXTuh,VrZmU>F%Xk9m4>qE'[4`R34/%_;+C.G4]>"=78!S>Z[Fu<99k0J
MG=Mso.F):S.SO[Zb#g9f8fd>5YA9Ar4CV2bnC`CDl&o[dBkE6B[\elX$saZ,ojPO8<Qtjdko%\j3">i
2S7bqofmMt[3SCh5)<adf\T\0lV-1+X]6".'2*h(h,jh:JP*Et93PV'75KWi\7Q70^6j!*p=?7GJP>(o
Xtp^NGb'%L_j0fWOPA>]6"3F=2H,i-),r=[f^#DCDd&BcCF<`iI0H-RE5f5!1jT&5Ti*osST&8N_\8hZ
qGPY:6O?2i\nXhiX)DbFNjC*=3lT4DC\j(.`1`N,T<bE-7D6*,4(Onk6Q:d%:i:KH7ss_$U<\R4bGP'/
n+QJX8FUYD$Oh"@:D:G19ck1lEP(mH`H$?;r3N,f]1:)D]]HiQ;EY/Rd6ep!'@V"BY;auaSOZc+FhM7V
f60<4BA"@IVf1=64iSbciefCADg6AbM^Nc=a-5Fj*bHn"q/>_kl$<!SX6?p>`4P:253KE@qqd+GlZcbY
[IJVd:WrEUT/YU"Gi+#&q>J'`OnjI@VrRZ"?cVm>T=b#HciO-]-`I+h)u5%\rWTkl`pTD`]Rg\hha(?j
"e=orF7<nj_8mW#i<1$BN#BPqLe-VHktc<e8ed>B<skIV0SQaF(IK$T%,nQMD[j]*6al:6>8_'k;$nGT
G`#cN*(Fb^iZtp&N`4Zt>)D;!.(0>X'H1tdCMeqZ`CR:?)M:\@jZYB*pr5KB.m[gQM$gVWg='PY3fYO5
SB"1O=lZT.Nol=hZY!<K=`f1Tjdn`Y8Hrkh/;RfA)3;&%)TO+M*b7rJ8=TDjCgPL=GNQn>Q[(VlAGhmC
dYWjEW(q/?3Hp`7<`R:T=A"q6nT$D%=d9d"/LA!#QRfl/`Dc"SV<g]Vo*OV5abJ=-3pM\N<GNm`RYbOr
GFBgXB:Bd=Z6S/SORm0p,C-^jB)1_&;h@W.V/h&53Q7O9k"_)iA:GtQXa>`0=IY`D?Dk>9T-UjO.E<Al
-i%[u`3jS0H4$Jm.[$JN$>5l4)PNnI/Xl<(4jcg_TBNgiOQ=E@OZC"DB.5R+BuZ7+)G6&sR5%EL#*k^h
mS$P7!N%;o]b;*gO"%Y=La9r2S'$%b&qU._-SD*gW\."U\MZpu#sFjeRW+IaLoMlS8s<F^@Oeoq7ONeU
U:2IDC!%iAK[g\Z#0'A6q;A3JNMRe_3_jEmA$.*=#b6e;Ju"5`7jfLoTCsC&C>"M6LZqhQR`^'/!BI80
afpuZZ"&i74fNTs30W(a:JJ[NYGCgX*L,8R9kij<#eZatMa_'t1!2Mp>kjO!^/.Q2S[KiCh4%!I:i+7W
Oei3J'H9ARNH%7k`cflN'Co$;+\3.KJBSU0RUsQ[P;B4daHV<h;@HEW0Voo/>r'$6aLS/sL%=c%_WjN]
@88FD.eTA'Qstq]ALW=d\R"d!<f2H0.V7\>'^PTpLp9Q%"W40P18%FcJJT\eGamWSB7`^(#pk7pP`ddo
7u76j,=HL3&TTX,U:htm\#TLZJcY~>

%%EndBinary
grestore
np
f
190.534 535.933 mo
204.297 535.933 li
204.297 521.194 li
190.534 521.194 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 165.591 544.822 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
205.722 540.144 mo
216.317 540.144 li
216.317 529.315 li
205.722 529.315 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 184.805 539.495 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
8 setflat
169.776 545.146 mo
237.678 545.146 li
237.678 544.244 li
169.776 544.244 li
cp
0 gry
f
170.282 567.488 mo
179.914 567.488 li
179.914 558.39 li
170.282 558.39 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 139.971 504.903 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
182.195 554.777 mo
192.591 554.777 li
192.591 554.077 li
182.195 554.077 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 155.042 520.983 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
195.497 558.789 mo
200.547 558.789 li
200.547 547.359 li
195.497 547.359 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.3883 0 0 14.4597 171.87 515.908 ]ct
<<
/T 1
/W 51 
/H 114 
/M[51 0 0 -114 0 114 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf(__K(s)>e^lki\.!tBa1@B[b9rXAgS7:PZje-H'qHq3-\#o$Q7-#cEX&ZI$f$311OUsY"bdMjs"
c6-&bZs%Z2Sks)73P?&R4e0p!1g4H3Kh\DmWDiYI;PdBh<N7pfeTS9+Vq(-6b6:Ya=KpI12="P>a)&(d
DH@dRU?ca,>-@V#[J'+Z!(1<Fq=FGR#E']MnpFIh!KG(Z0ppl%"9~>

%%EndBinary
grestore
np
f
179.316 574.325 mo
189.911 574.325 li
189.911 563.496 li
179.316 563.496 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 151.399 496.254 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
207.906 568.478 mo
220.58 568.478 li
220.58 555.681 li
207.906 555.681 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 187.568 503.65 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
226.768 567.507 mo
236.57 567.507 li
236.57 558.183 li
226.768 558.183 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 211.43 504.879 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
244.14 551.037 mo
256.814 551.037 li
256.814 538.24 li
244.14 538.24 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 233.407 525.715 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
283.65 535.933 mo
297.413 535.933 li
297.413 521.194 li
283.65 521.194 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 283.39 544.822 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
299.433 535.031 mo
309.829 535.031 li
309.829 534.331 li
299.433 534.331 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 303.356 545.963 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
8 setflat
263.487 545.146 mo
331.39 545.146 li
331.39 544.244 li
263.487 544.244 li
cp
0 gry
f
263.994 567.488 mo
273.626 567.488 li
273.626 558.39 li
263.994 558.39 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 258.523 504.903 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
275.906 554.777 mo
286.302 554.777 li
286.302 554.077 li
275.906 554.077 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 273.593 520.983 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
289.209 558.789 mo
294.259 558.789 li
294.259 547.359 li
289.209 547.359 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.3883 0 0 14.4597 290.422 515.908 ]ct
<<
/T 1
/W 51 
/H 114 
/M[51 0 0 -114 0 114 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf(__K(s)>e^lki\.!tBa1@B[b9rXAgS7:PZje-H'qHq3-\#o$Q7-#cEX&ZI$f$311OUsY"bdMjs"
c6-&bZs%Z2Sks)73P?&R4e0p!1g4H3Kh\DmWDiYI;PdBh<N7pfeTS9+Vq(-6b6:Ya=KpI12="P>a)&(d
DH@dRU?ca,>-@V#[J'+Z!(1<Fq=FGR#E']MnpFIh!KG(Z0ppl%"9~>

%%EndBinary
grestore
np
f
273.623 569.512 mo
284.02 569.512 li
284.02 568.812 li
273.623 568.812 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 270.705 502.342 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
301.518 568.478 mo
314.192 568.478 li
314.192 555.681 li
301.518 555.681 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 305.994 503.65 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
320.479 567.507 mo
330.281 567.507 li
330.281 558.183 li
320.479 558.183 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 329.981 504.879 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
332.888 575.493 mo
343.68 575.493 li
343.68 513.707 li
332.888 513.707 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.653 0 0 78.1633 345.679 494.776 ]ct
<<
/T 1
/W 109 
/H 618 
/M[109 0 0 -618 0 618 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J05Bkp`pU`s*OeOn9AIh57E1]61G4:i;a+?6!k$#*+fKODuaCpLO]Fqpk6HC15JnTnGE8Rj_s&[:0.Ap
7OIYNF8e0_?q@0_#rLL3.Yp83'%j$1'+:\PjqB4;rb49jc6lVR"EpO>5Zb!C)8,g(=e\e<0M4KWT5L%J
jqWe[>&.K6<pm;P($u#gL;@g$q_f%:!4>:h[[PD=92N=DC6;WK`rcITj(9+/<"ee^RU:-?5R%<>K%"E"
(4A:Y%uGs*[J>%n'-XC1D)'^\D(b&pMV[`D.F.6<]$U")];`fJ@g2pK3"TU*9:pgSE9u5G<m$i1J*qNp
*Tp0*-/\HEr%A1#3U2[qHuf`5_hn&=br%_(f4o9h50s-(lE*kk#k>"@]E6!e87N.O^a^TPL-e^(d0i*t
].1KZ06@bYYHSE!"==R7!rfh?ZWRsQ0LQ'Y^Zn2ge](.4WlRYL]O;"7D<,=7`X3op)9>[.0(U4-.^p;;
;1q4_/$acG)8re5X!Agn]JP5;M`bW)`Y.Q:)9+GK$L#]IUS=\\Ojpi+9o,RER7rbHhUaO3X+`\`dj0i5
]SY/9q+Qrg!0XD4/>GS[F!RAC+Y"3Hjj4XQaI"B_]N\"WF!S^i;tT_0:fMK\re8kN>ldmSF]D-reTHRP
\CP>a9Z,H&c#Hb8Fh<Q=,8Dtj@&#V#<h^hI'VeT('j[;@=_PrMO]iNp<oqi\NE1_.f$%?:>H#e$<SV^S
0L+@A7FK+RdhUV[,;SJ4GG/*7kBP6o2,AW]+T;)&htQ\)Ic*06WX%J(XqQI5fKL+,iMk)o_gqNR,`cE%
[O[;Gp!UI1!-ctUO^mVK8!@Jl/lIQTJ.>/;,M&FYR:\$'B:EMDKr!qpi!+P#V:k!`T4iH!\YEh=\,\X)
H=iG?.B\](V!:MD0r^k8^9+Ej>2gu)#9)4qYj8nB`Nj:INmNSu)`g,7m:^+j\*[Csc$TKk`pLHX)r`;!
n&U7b^$qN[$bs88%ctX)HtEVrn[sVu"EHW&-d)$#^GLn\4L[9MF442Vbk(c?+jT_N(JKR+*8acG`n_[[
lQGW!B^/N0cYSa<I@kf?c<^`cgUeLN$/YD_&fKbT4u6:'H(H+-k]pI;X5&#mc_p1)hX?ZqHer\On,.YO
_s)RJ?a&Je^IQE<qVMP8q>B-Jh>7-n^\.8K?dJNE?W4!Jm^:KT#?^>c/$=!`+kON.%fhWC%"W@`1VkI]
!MCDJK.p-M6)Z"5&,V67n;7Xk7(D9I6^!-WR*S*S"Ugi*.Y[B7(rF3k%@eAlD[jY_[odh0U#?2mXd1*+
R!dUl]L[jU@O&>&Rat[7:2+R%X:TQ^e(SV@M\0g)Zpp;.,4o0"%0<$>&g0bU0as$Mh45-IB[5XSB4hgm
QcE-'aCDh-Nsr$OZGop5$p8s"&cDqhdO<+;iu;LV.RV9i@j<"P%!aU"i5nP7`$CfUEU4"Xai?gtTNn.?
leW>u87sBFN2VN4e\!Mk>.Wg;8<tu&=iCQ^&f03YBi=(t[7.1HAc-S90r\tF[?E>2Em]rs*bDEqI`ds%
NLDU4Buj:q,A+T@RkLdY]j`%ak538j/r<Ofq9(c5Be<:SAp'1qg8QH1\5S8sGq#R90G?22T']BC`oS.(
VsJGs1D)oCl3]op14W0bnpHa6q]f%9&>?,?5UPRG;\L@T:^W5BSWrQ?kkhn`oSP"5"K8.1\lqR<4Zh*7
<he'SL8H?@RA;kTHP.VaOC_92UZhuC*K<=4<=.t9=:\9%ap:ZHVPU/#:mmKpDa\99Q6u5e<@OY\8ElSF
VXu?qCAMO;eVN[koQZ6i4_UV4RGf8,gCI*9E'%&nn5i#_<R5Mb96GEkTp3#g;Sh?T'qW7m['<e1!S'2k
./Qnp<E&740Ju??iRpSE7#f`a3+b_;=<hfg;F.WKG)5#-UNBngeW)J!,ha.-Bk<9<R5T^X`nA7CA'AYG
2O9HUQu`RK%AginG"C*9j"=?TQ$tNtd&`Q(Z<KsjL,AW!YEhMh=A(6a2"g(T>_8\Lah>tL[tqiU!if*)
!R<HRr107mf67M&hC5paQ/4hG8kF"K,ijWBhSN;h)@=/%Vj48$Efr\E3<9~>

%%EndBinary
grestore
np
f
0 gry
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCD055133316849E00736C24057076
3FFBEAA17D20BAD0C90929E7FC98BEF078FBD21661E4465220571BF6C5785F77
9B145176EAC3F1B48024793437EC4438247E11A602434D0E7AC34F18A158BFAD
2A9FD91C0C9E4A3D67CE58D890D1A5D9362E68BDC6AD4CEE4C45C583B8E0A134
37C5A7D60D6E4A23D8A01F527509176EA8D499100624E9> |-
/l <1C60D8A8C9B88C082599D5E898B54D665A852C4BD97DFF418DFF9C25960C
0EAF> |-
/m <1C60D8A8C9B6B41CEC825914121F52A95173CFD7506435BFCA0C73FC750A
4D7711E7680982A273D09BFA78A78C3BFB84B5A84E78736633502A23A244AC4B
8B8A25A1EF52BC81D0DC1A968E29EA6EC88ECE580C5DEBED086D17296DEA1F7B
0E698AFEF752B5B2C464CAF7578D7EFED5F29653E00948F6A07597CC6820AC> |-
/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D
1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E
99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E5
6946239346863C679F19> |-
/v <1C60D8A8C9B7A73DC53FF2C839B947F31C11DB63CB8CC0B0E0518E01B2A8
090086BA063BC631F5BCB6255A1F02FF856D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 100 /d put
dup 108 /l put
dup 109 /m put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 18{/.notdef}rp /H 24{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [15.6545 13.6417 13.5101 -15.8066 0 0 ]msf
239.688 183.904 mo
(additive)
[8.7039 7.58478 8.70392 7.58484 8.70389 7.58479 3.47531 3.02844 4.35196 3.79242 3.47531 3.02844 
7.82724 6.82086 0 0 ]xysh
DYLDUW+Helvetica*1 [7.98069 19.262 19.0765 -8.05858 0 0 ]msf
174.297 204.47 mo
(multiplicative)
[6.64786 16.045 4.43727 10.7097 1.77171 4.27618 2.21863 5.3548 1.77171 4.27618 4.43727 10.7097 
1.77171 4.27611 1.77171 4.27618 3.99034 9.63098 4.43727 10.7096 2.21863 5.35486 1.77173 4.27612 
3.99034 9.63098 0 0 ]xysh
DYLDUW+Helvetica*1 [19.1452 7.8886 7.81258 -19.3315 0 0 ]msf
178.772 111.773 mo
( )sh
DYLDUW+Helvetica*1 [19.308 7.47513 7.40312 -19.4959 0 0 ]msf
184.35 114.091 mo
(s)sh
DYLDUW+Helvetica*1 [19.473 7.02391 6.95623 -19.6625 0 0 ]msf
194.373 117.969 mo
(u)sh
DYLDUW+Helvetica*1 [19.609 6.62987 6.56592 -19.7997 0 0 ]msf
205.486 121.971 mo
(p)sh
DYLDUW+Helvetica*1 [19.6989 6.34926 6.28807 -19.8905 0 0 ]msf
216.522 125.683 mo
(r)sh
DYLDUW+Helvetica*1 [19.7793 6.08843 6.03004 -19.9715 0 0 ]msf
223.166 127.84 mo
(e)sh
DYLDUW+Helvetica*1 [19.8661 5.7902 5.73427 -20.0593 0 0 ]msf
234.248 131.246 mo
(s)sh
DYLDUW+Helvetica*1 [19.9449 5.50619 5.45305 -20.139 0 0 ]msf
244.212 134.151 mo
(s)sh
DYLDUW+Helvetica*1 [20.0012 5.29944 5.24844 -20.1955 0 0 ]msf
254.188 136.889 mo
(i)sh
DYLDUW+Helvetica*1 [20.0602 5.0655 5.01667 -20.2555 0 0 ]msf
258.604 138.082 mo
(o)sh
DYLDUW+Helvetica*1 [20.1492 4.70052 4.65509 -20.3451 0 0 ]msf
269.934 140.943 mo
(n)sh
gsave
-110.083 11.73 mo
-110.083 11.73 li
cp
clp
-127.262 -220.21 mo
-110.082 -220.21 li
-110.082 -238.59 li
-127.262 -238.59 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[21.7342 0 0 23.2524 -236.444 1501.4 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
grestore
gsave
-95.0512 11.73 mo
-95.0512 11.73 li
cp
clp
-108.276 -214.93 mo
-95.0509 -214.93 li
-95.0509 -228.434 li
-108.276 -228.434 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.7307 0 0 17.0834 -212.425 1494.72 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
grestore
gsave
-82.875 11.73 mo
-82.875 11.73 li
cp
clp
-92.3931 -219.94 mo
-82.8758 -219.94 li
-82.8758 -231.568 li
-92.3931 -231.568 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.04 0 0 14.7106 -192.332 1501.06 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
grestore
gsave
-67.1293 11.73 mo
-67.1293 11.73 li
cp
clp
-80.1081 -235.95 mo
-67.1302 -235.95 li
-67.1302 -236.825 li
-80.1081 -236.825 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.418 0 0 1.1072 -176.791 1521.31 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
grestore
gsave
-58.4051 11.73 mo
-58.4051 11.73 li
cp
clp
-64.7206 -230.72 mo
-58.4053 -230.72 li
-58.4053 -244.474 li
-64.7206 -244.474 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.98929 0 0 17.3997 -157.325 1514.69 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
grestore
gsave
-48.4973 11.73 mo
-48.4973 11.73 li
cp
clp
-56.531 -225.6 mo
-48.4972 -225.6 li
-48.4972 -247.106 li
-56.531 -247.106 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[10.1634 0 0 27.2069 -146.964 1508.22 ]ct
<<
/T 1
/W 65 
/H 172 
/M[65 0 0 -172 0 172 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uCDl"G+'*n;$l@!=X_#iJ7c(+t4'g6K%nMe.ObQ!68JCkmT==,(I?-Ef!c"%k)fuiKG.05#Ca<
6RNOdr1UqiL/7!Mq*P4?%&6Zqnq70!-VfRajUh9Z8eE>L5q<Qqn.)c,PulmE)&)KM@XlU=(9%u*+)%0L
/b19>IaLBlh5!dHrM#:#^<!:^N#i<0,)Kb_n:2!$#?\6A,IQ<LNkJo+jt-3V<c^2?[q/sUq\@.EG-P@2
3f*2&`NIdaoN40jdQ8A-`HO!qmPcYXYOEc>9Wi!B`f4-1O?Do[Ri9aWqE59VIoY(b`ikoB(:q9;NA*7n
?)<%o\:R2E[JsKII?*5dIPAJnBC#37j12Rigb2"^3\&>TKs%UO"RE*B65Jt#Nq0L]+`A&'WB>!<b,hhf
qpqjdBKP4S6h'\"jh@b%8qXZN1\Rk<BKQ4T^ac^#K>=]J&?A:a4;d1rb-ZJI_WnL\+<kdSM[c]4H[-.%
;IKRb4Y\F_.1d(adhSl\_#Y@]Oc#tg&.ttl)lcg[!?S7>7*c4LOp\$E,:LKlWD6t,Pho1%3<kF<BUSu
~>

%%EndBinary
grestore
np
f
grestore
gsave
-36.5742 11.73 mo
-36.5742 11.73 li
cp
clp
-46.6037 -230.72 mo
-36.5734 -230.72 li
-36.5734 -240.205 li
-46.6037 -240.205 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.6891 0 0 11.999 -134.405 1514.69 ]ct
<<
/T 1
/W 81 
/H 76 
/M[81 0 0 -76 0 76 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[J-6Vr!C/o?&85T#rd]_hTeGVg1&h*._4Ye0"=<"HKYl`QL\h-.",+T:TQj!-*rg^_i)'3Bra@R5
+<Q+N'C\4BLVEi\g&0(ppmFpV#R?%unO8t\-I=f,4i&q%&*[m;`G1@JRCk'!PT>M!%n#$LF?!8qF#\,C
U%JeQ/qCaJ6_IM=[*H41SBrGS$k4-ZHGSPfR&iFQ(P[K*Z1qIV:D5D_j(Gom"7nO7Ms'Z!m*lNuTR:JE
R[ktH<L;<QB,O2DcS)]SmP#%Y[Hi+7?r_7F*@_/FHK0!io.U??0?qr;0<n8o4/n[;p&Gm[9OkUCmq03k
fHpt>jir*6J.FIsnWreE4;ob%a4gU~>

%%EndBinary
grestore
np
f
grestore
gsave
-26.2957 11.73 mo
-26.2957 11.73 li
cp
clp
-37.4208 -226.47 mo
-26.2968 -226.47 li
-26.2968 -237.827 li
-37.4208 -237.827 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[14.0727 0 0 14.3674 -122.788 1509.32 ]ct
<<
/T 1
/W 90 
/H 91 
/M[90 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-]AN<^k4l,&=>j((C#W0iUAgc$7?(3`S^2f<&-6NLI`Ue.(#.!&<FsZ18u8!9.lFI,r6uTdT\Vr
c6b9&XR^9nSBrX'\Xa'b*2CnpPM0:@RmEt!kn7`*18ch+e#N#>bs?l1!*F&<1'N]_B=(iYp'X_!Q!:"`
/ldh#EpI_V?>eAq`U<\Q^f5*W.t/89L94o8fW6DA*Jqhrni5EZ=!a0T5p;=$~>

%%EndBinary
grestore
np
f
grestore
gsave
-275.618 11.73 mo
-275.618 11.73 li
cp
clp
-292.799 -111.618 mo
-275.619 -111.618 li
-275.619 -129.998 li
-292.799 -129.998 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[21.7342 0 0 23.2524 -445.861 1364.02 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
grestore
gsave
-260.089 11.73 mo
-260.089 11.73 li
cp
clp
-273.069 -112.702 mo
-260.091 -112.702 li
-260.091 -113.577 li
-273.069 -113.577 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.418 0 0 1.1072 -420.901 1365.39 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
grestore
gsave
-247.048 11.73 mo
-247.048 11.73 li
cp
clp
-256.565 -111.352 mo
-247.048 -111.352 li
-247.048 -122.98 li
-256.565 -122.98 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.04 0 0 14.7106 -400.022 1363.68 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
grestore
gsave
-234.986 11.73 mo
-234.986 11.73 li
cp
clp
-241.302 -122.131 mo
-234.987 -122.131 li
-234.987 -135.885 li
-241.302 -135.885 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.98929 0 0 17.3997 -380.713 1377.32 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
grestore
gsave
-225.078 11.73 mo
-225.078 11.73 li
cp
clp
-233.112 -117.004 mo
-225.078 -117.004 li
-225.078 -138.51 li
-233.112 -138.51 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[10.1634 0 0 27.2069 -370.352 1370.84 ]ct
<<
/T 1
/W 65 
/H 172 
/M[65 0 0 -172 0 172 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uCDl"G+'*n;$l@!=X_#iJ7c(+t4'g6K%nMe.ObQ!68JCkmT==,(I?-Ef!c"%k)fuiKG.05#Ca<
6RNOdr1UqiL/7!Mq*P4?%&6Zqnq70!-VfRajUh9Z8eE>L5q<Qqn.)c,PulmE)&)KM@XlU=(9%u*+)%0L
/b19>IaLBlh5!dHrM#:#^<!:^N#i<0,)Kb_n:2!$#?\6A,IQ<LNkJo+jt-3V<c^2?[q/sUq\@.EG-P@2
3f*2&`NIdaoN40jdQ8A-`HO!qmPcYXYOEc>9Wi!B`f4-1O?Do[Ri9aWqE59VIoY(b`ikoB(:q9;NA*7n
?)<%o\:R2E[JsKII?*5dIPAJnBC#37j12Rigb2"^3\&>TKs%UO"RE*B65Jt#Nq0L]+`A&'WB>!<b,hhf
qpqjdBKP4S6h'\"jh@b%8qXZN1\Rk<BKQ4T^ac^#K>=]J&?A:a4;d1rb-ZJI_WnL\+<kdSM[c]4H[-.%
;IKRb4Y\F_.1d(adhSl\_#Y@]Oc#tg&.ttl)lcg[!?S7>7*c4LOp\$E,:LKlWD6t,Pho1%3<kF<BUSu
~>

%%EndBinary
grestore
np
f
grestore
gsave
-213.155 11.73 mo
-213.155 11.73 li
cp
clp
-223.185 -122.132 mo
-213.155 -122.132 li
-213.155 -131.617 li
-223.185 -131.617 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.6891 0 0 11.999 -357.794 1377.32 ]ct
<<
/T 1
/W 81 
/H 76 
/M[81 0 0 -76 0 76 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[J-6Vr!C/o?&85T#rd]_hTeGVg1&h*._4Ye0"=<"HKYl`QL\h-.",+T:TQj!-*rg^_i)'3Bra@R5
+<Q+N'C\4BLVEi\g&0(ppmFpV#R?%unO8t\-I=f,4i&q%&*[m;`G1@JRCk'!PT>M!%n#$LF?!8qF#\,C
U%JeQ/qCaJ6_IM=[*H41SBrGS$k4-ZHGSPfR&iFQ(P[K*Z1qIV:D5D_j(Gom"7nO7Ms'Z!m*lNuTR:JE
R[ktH<L;<QB,O2DcS)]SmP#%Y[Hi+7?r_7F*@_/FHK0!io.U??0?qr;0<n8o4/n[;p&Gm[9OkUCmq03k
fHpt>jir*6J.FIsnWreE4;ob%a4gU~>

%%EndBinary
grestore
np
f
grestore
gsave
-202.502 11.73 mo
-202.502 11.73 li
cp
clp
-213.257 -123.227 mo
-202.504 -123.227 li
-202.504 -123.977 li
-213.257 -123.977 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.6035 0 0 0.949253 -345.234 1378.71 ]ct
<<
/T 1
/W 87 
/H 6 
/M[87 0 0 -6 0 6 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]%="b]3N:q1$["Ub>r5Q~>

%%EndBinary
grestore
np
f
grestore
gsave
-135.913 11.73 mo
-135.913 11.73 li
cp
clp
-153.094 -82.7031 mo
-135.914 -82.7031 li
-135.914 -101.083 li
-153.094 -101.083 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[21.7342 0 0 23.2524 -269.124 1327.44 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
grestore
gsave
-120.387 11.73 mo
-120.387 11.73 li
cp
clp
-133.363 -83.787 mo
-120.385 -83.787 li
-120.385 -84.6622 li
-133.363 -84.6622 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.418 0 0 1.1072 -244.162 1328.81 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
grestore
gsave
-134.899 11.73 mo
-134.899 11.73 li
cp
clp
-152.081 -314.88 mo
-134.901 -314.88 li
-134.901 -333.26 li
-152.081 -333.26 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[21.7342 0 0 23.2524 -267.842 1621.16 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
grestore
gsave
-119.87 11.73 mo
-119.87 11.73 li
cp
clp
-133.094 -309.6 mo
-119.869 -309.6 li
-119.869 -323.104 li
-133.094 -323.104 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.7307 0 0 17.0834 -243.822 1614.48 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
grestore
gsave
-72.6891 701.323 mo
-72.6891 701.323 li
cp
clp
-84.9477 712.951 mo
-72.6883 712.951 li
-72.6883 701.323 li
-84.9477 701.323 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[15.509 0 0 14.7106 -182.913 320.882 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
grestore
gsave
-60.7879 701.323 mo
-60.7879 701.323 li
cp
clp
-70.3047 712.951 mo
-60.7874 712.951 li
-60.7874 701.323 li
-70.3047 701.323 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.04 0 0 14.7106 -164.389 320.882 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
grestore
gsave
-45.0422 696.063 mo
-45.0422 696.063 li
cp
clp
-58.0197 696.94 mo
-45.0418 696.94 li
-45.0418 696.065 li
-58.0197 696.065 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.418 0 0 1.1072 -148.848 341.137 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
grestore
gsave
-32.2508 692.432 mo
-32.2508 692.432 li
cp
clp
-42.6325 702.168 mo
-32.2502 702.168 li
-32.2502 692.433 li
-42.6325 692.433 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1344 0 0 12.3149 -129.382 334.523 ]ct
<<
/T 1
/W 84 
/H 78 
/M[84 0 0 -78 0 78 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf!#u=E!$Aira8c8>rqHHoiD94;!YGBV!!"`4jB*K'?q$f.!'>]@s$.[A#7(unIe\N2?3:HH![n)!
8_a=P&dB`aIL"s7#S`j?p`I?9O6HK]n:->C-nlnI_P%a#dU`Ibr-!nkLIq\,g;CeEJ,n7NNX/l*4$7K:
Cm2jI/l*LV0^dL`@Li,IKd#Dse/Trt.&P!+plG\+iCnk(-r;kr:(NZ2jg%^!bR,kfWR'm-L\5C4UP\0.
n2N:h;6>l2EDUM4F(#O46)#;M9Kn<DJODB-hA65J^Xd$L4D0F&P69uajh2]#Jd]TaE:po91BXi,OC@ul
*n2'Ying=k)W+L3LZubSrLY+u2@YAkrLc]2Y$:]!ZH/1;c_/(!i-lp?+t3U>M>JXBSdrq=JLDmsJ@))O
dJ/C3m;ml4XUXj.ZQ9\c+VCI]$8T`*Lrs7912EsrJ".+&"MZ013J)3*Bfo"KOCn\/O2S%2,`esF.\Hm9
&b;+n&+Dm[JsZgc+pZ/EW;PPE#g71F3G3pdhk>o`*fVJIgD(kuN^;TRJ,~>

%%EndBinary
grestore
np
f
grestore
gsave
-24.4043 688.418 mo
-24.4043 688.418 li
cp
clp
-30.7198 702.171 mo
-24.4045 702.171 li
-24.4045 688.417 li
-30.7198 688.417 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.98929 0 0 17.3997 -114.311 334.519 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
grestore
gsave
-252.576 698.9 mo
-252.576 698.9 li
cp
clp
-264.837 710.528 mo
-252.578 710.528 li
-252.578 698.9 li
-264.837 698.9 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[15.509 0 0 14.7106 -410.487 323.947 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
grestore
gsave
-240.675 698.9 mo
-240.675 698.9 li
cp
clp
-250.194 710.528 mo
-240.677 710.528 li
-240.677 698.9 li
-250.194 698.9 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.04 0 0 14.7106 -391.962 323.947 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
grestore
gsave
-224.549 690.009 mo
-224.549 690.009 li
cp
clp
-234.931 699.745 mo
-224.549 699.745 li
-224.549 690.01 li
-234.931 690.01 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1344 0 0 12.3149 -372.653 337.588 ]ct
<<
/T 1
/W 84 
/H 78 
/M[84 0 0 -78 0 78 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf!#u=E!$Aira8c8>rqHHoiD94;!YGBV!!"`4jB*K'?q$f.!'>]@s$.[A#7(unIe\N2?3:HH![n)!
8_a=P&dB`aIL"s7#S`j?p`I?9O6HK]n:->C-nlnI_P%a#dU`Ibr-!nkLIq\,g;CeEJ,n7NNX/l*4$7K:
Cm2jI/l*LV0^dL`@Li,IKd#Dse/Trt.&P!+plG\+iCnk(-r;kr:(NZ2jg%^!bR,kfWR'm-L\5C4UP\0.
n2N:h;6>l2EDUM4F(#O46)#;M9Kn<DJODB-hA65J^Xd$L4D0F&P69uajh2]#Jd]TaE:po91BXi,OC@ul
*n2'Ying=k)W+L3LZubSrLY+u2@YAkrLc]2Y$:]!ZH/1;c_/(!i-lp?+t3U>M>JXBSdrq=JLDmsJ@))O
dJ/C3m;ml4XUXj.ZQ9\c+VCI]$8T`*Lrs7912EsrJ".+&"MZ013J)3*Bfo"KOCn\/O2S%2,`esF.\Hm9
&b;+n&+Dm[JsZgc+pZ/EW;PPE#g71F3G3pdhk>o`*fVJIgD(kuN^;TRJ,~>

%%EndBinary
grestore
np
f
grestore
gsave
-216.703 685.995 mo
-216.703 685.995 li
cp
clp
-223.018 699.748 mo
-216.703 699.748 li
-216.703 685.994 li
-223.018 685.994 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.98929 0 0 17.3997 -357.582 337.584 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
grestore
278.301 403.743 mo
288.103 403.743 li
288.103 394.419 li
278.301 394.419 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 276.623 712.052 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
290.909 408.612 mo
295.266 408.612 li
295.266 388.017 li
290.909 388.017 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 292.573 705.893 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
297.064 403.542 mo
310.827 403.542 li
310.827 388.803 li
297.064 388.803 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 300.359 712.307 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
312.252 407.754 mo
322.847 407.754 li
322.847 396.925 li
312.252 396.925 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 319.573 706.978 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
324.661 403.723 mo
334.293 403.723 li
334.293 394.625 li
324.661 394.625 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 335.272 712.078 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
333.695 407.754 mo
344.29 407.754 li
344.29 396.925 li
333.695 396.925 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 346.7 706.978 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
351.166 404.714 mo
363.84 404.714 li
363.84 391.917 li
351.166 391.917 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 368.802 710.824 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
370.127 403.542 mo
383.89 403.542 li
383.89 388.803 li
370.127 388.803 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 392.789 712.307 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
385.911 402.64 mo
396.307 402.64 li
396.307 401.94 li
385.911 401.94 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 412.757 713.448 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
398.717 403.723 mo
408.349 403.723 li
408.349 394.625 li
398.717 394.625 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 428.958 712.078 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
408.346 402.64 mo
418.742 402.64 li
418.742 401.94 li
408.346 401.94 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 441.139 713.448 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
421.649 408.612 mo
426.006 408.612 li
426.006 388.017 li
421.649 388.017 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 457.968 705.893 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
308.708 381.635 mo
297.33 347.699 309.225 308.54 317.498 295.489 cv
0 gry
12.9804 lw
0 lj
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
320.823 290.242 mo
320.156 293.332 319.76 297.442 320.199 300.434 cv
317.016 296.246 li
311.917 295.081 li
314.791 294.231 318.323 292.145 320.823 290.242 cv
f
8 setflat
453.699 129.984 mo
450.424 129.984 li
453.699 78.8163 mo
450.424 78.8163 li
1 lj
10 ml
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
gsave
51.8047 813.932 mo
526.281 813.932 li
526.281 11.73 li
51.8047 11.73 li
cp
clp
317.68 132.841 mo
526.565 132.841 li
526.565 70.714 li
317.68 70.714 li
cp
1 gry
f
grestore
348.468 93.915 mo
358.27 93.915 li
358.27 84.5905 li
348.468 84.5905 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 365.389 1104.01 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
361.076 98.7839 mo
365.433 98.7839 li
365.433 78.1887 li
361.076 78.1887 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 381.339 1097.85 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
367.231 93.715 mo
380.994 93.715 li
380.994 78.9761 li
367.231 78.9761 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 389.126 1104.26 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
382.419 97.926 mo
393.014 97.926 li
393.014 87.0974 li
382.419 87.0974 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 408.34 1098.93 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
394.828 93.8959 mo
404.46 93.8959 li
404.46 84.798 li
394.828 84.798 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 424.038 1104.03 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
403.862 97.926 mo
414.457 97.926 li
414.457 87.0974 li
403.862 87.0974 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.4029 0 0 13.6988 435.467 1098.93 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
421.334 94.8859 mo
434.008 94.8859 li
434.008 82.0888 li
421.334 82.0888 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 457.57 1102.78 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
440.294 93.715 mo
454.057 93.715 li
454.057 78.9761 li
440.294 78.9761 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[17.4111 0 0 18.6457 481.556 1104.26 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
456.078 92.8129 mo
466.474 92.8129 li
466.474 92.113 li
456.078 92.113 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 501.524 1105.4 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
468.884 93.8959 mo
478.516 93.8959 li
478.516 84.798 li
468.884 84.798 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 517.724 1104.03 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
478.513 92.8129 mo
488.909 92.8129 li
488.909 92.113 li
478.513 92.113 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[13.1523 0 0 0.885526 529.906 1105.4 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
491.816 98.7839 mo
496.173 98.7839 li
496.173 78.1887 li
491.816 78.1887 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 546.735 1097.85 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
8 setflat
323.243 102.826 mo
522.878 102.826 li
522.878 101.924 li
323.243 101.924 li
cp
0 gry
f
324.941 127.051 mo
329.298 127.051 li
329.298 106.456 li
324.941 106.456 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 335.626 1062.09 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
332.188 121.984 mo
338.228 121.984 li
338.228 108.348 li
332.188 108.348 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.64094 0 0 17.2503 344.794 1068.5 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
345.391 123.153 mo
358.065 123.153 li
358.065 110.356 li
345.391 110.356 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 361.496 1067.02 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
365.543 121.984 mo
371.583 121.984 li
371.583 108.348 li
365.543 108.348 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.64094 0 0 17.2503 386.99 1068.5 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
373.882 122.262 mo
381.803 122.262 li
381.803 108.365 li
373.882 108.365 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[10.0207 0 0 17.5803 397.54 1068.15 ]ct
<<
/T 1
/W 80 
/H 139 
/M[80 0 0 -139 0 139 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&GR-#CZXQ"8Ftb_$U:^?g%bl"rdI@"5X"[r#c"AKu)UWBHTJKi/#/0&9\&&"Se-N+clCl%P\uR
c/;HT4E:T&Ma5W&3J=\Cs*..EdV2]2RnJl9=;8gjNWh"ed:.3CI0PH4TZCM^=8e#++.Z-$QC6NK'0*F]
mI5A>b!->h^+T$(rTYX.^>@dm#i5J;JriI#0Q[:X_2FufnaRk/9-FAZjPdXM#$rVYcK-l#j9CZ6U!;dJ
0K:\N-(WXTFrIs%#@f=>D'5==Ie.-bghl_7&-hBM$KH.ar2l;@=jGT?.fCbC;ieoZp,TghIrhCAl1d<R
0#&dUf(=7d?>jIhgY;JsIQd_':PH4Rmf,@3n*bec^Vg4FgH]UC(t1>r15,irn5D%G6#>!eb;,0S2T[Z]
-k=+t$p+n.-a<5(^Fp!&i1."Ze4tr)l^H>87;,liNt:cL`jMniU4"#_Mup;sO:'tGHn3@6OJ&Uf&kJ:\
Eb(Pm,q?6'VFZYTNhA+`R`LmKWP[;m95<1lPGL$\OHN0`**!b,LrqXiU1gPPLO]_PcQ'?P=on~>

%%EndBinary
grestore
np
f
383.114 122.162 mo
392.746 122.162 li
392.746 113.064 li
383.114 113.064 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 409.219 1068.27 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
394.133 119.377 mo
401.658 119.377 li
401.658 108.548 li
394.133 108.548 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[9.51989 0 0 13.6988 423.159 1071.8 ]ct
<<
/T 1
/W 76 
/H 108 
/M[76 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrLGPh.8It9^(J-[BO)$p:1ci=%S65]\&_4_AFL`Pt,J$:11aCBf)i!7$XJ9D>H#:b5@&F_(.<T,)'
b$^kKK7FCRJO/Gd!$M7E0d"[#OGFML5>%MEfDtc%*WFt!d\=*p`@>4bGQ@'[B7L2O"J`[^d]5bBn,TfF
Tm%D;/E(EU!&!^JD!q%GK+'CIHk$XH!5W"ldh%6PK8miMJ/Ja_1EDe&dGfG!hI`6>cTh$3>okXl<n$3<
)GOP->H$0=Z^Vs6?RN;)@eTX=hH,&)_WSEg$q<;F`k?CFQKs8deRPgelo%KNWjaA@fkT'j<CR-jWog;Z
g1H5+.\bo"mg8n!2.rISAf&RYrUDPIYi.9/4ISU$XQP0H!%?#Npl?mTMB]7,-3+%=/h9i8bJ%eo.`K9k
>F,Z'0ZqKE6YK.Z&]:j^4Usg+1fY/W0k<!R`3FD@X/kae2[prZMotJ.1"o2>/<S'c+NLN,!W~>

%%EndBinary
grestore
np
f
402.969 116.07 mo
408.019 116.07 li
408.019 108.55 li
402.969 108.55 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.3883 0 0 9.51325 434.337 1075.98 ]ct
<<
/T 1
/W 51 
/H 75 
/M[51 0 0 -75 0 75 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VqBp\TJ)i-55EJ,gO=!=F8U!&3V8iXT@O_9_<G"D*2b!(UHg2tT:++%+.8&+fjL+"DcE"2XedaF>m_
#:As8-t*&t&5Qs&!sJ;s0lTEF'R2/C,>=oC!&Y$1%]J<d;<g$-D.9XQYLmVe>6U#&AZg[Np8^'VdqcHt
DDqBWf'.CWgTNOth:haNK&3^jbT6QgJ8eo$3)!Wt)i2IDELA=7U6<=880rDWHoul^c@@_@9_O*#UX85_
+9~>

%%EndBinary
grestore
np
f
408.924 116.15 mo
414.964 116.15 li
414.964 108.452 li
408.924 108.452 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.64094 0 0 9.73884 441.87 1075.88 ]ct
<<
/T 1
/W 61 
/H 77 
/M[61 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vse!#u=8!e11M"8D^7)[Zhf?sr_^(*%ih_I?=!$jcnuK>/P4p&KOOp]JImmg+jMi!4nE"7T\<*J"WK
^Aos4`$0C)!$C/"#K1?\5Who:5QesiNrM?S.F`[%i^Y%07;;)g`4i]dPgSfW$Od>l#dRCa!/:Wb#Agk6
m<75\+TZS%!&!uGe`-6XUV&8Pr"&r2!lDgZ=M/6)(PdWOWUTh?;^V:];tCl3hHr'/cK;J/*9%&nEJE?A
>-.tW26PNq*u:Btdm:FK<i^SIV->:&Hq.o7MOb_!8q@1,&)bD.K`Z]5.MIZ\i^qXIFf&7Y?+Ij#ZEWCI
F?CV'rWgF+:WYJ_B&GnkSe9WA3Va#H_l=S-f*2Y6J,~>

%%EndBinary
grestore
np
f
416.668 127.051 mo
421.025 127.051 li
421.025 106.456 li
416.668 106.456 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 451.667 1062.09 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
424.709 127.051 mo
429.066 127.051 li
429.066 106.456 li
424.709 106.456 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 461.84 1062.09 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
431.955 121.984 mo
437.995 121.984 li
437.995 108.348 li
431.955 108.348 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[7.64094 0 0 17.2503 471.006 1068.5 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
445.158 123.153 mo
457.832 123.153 li
457.832 110.356 li
445.158 110.356 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.0333 0 0 16.1893 487.709 1067.02 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
464.119 122.182 mo
473.921 122.182 li
473.921 112.858 li
464.119 112.858 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 511.696 1068.25 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
475.436 122.162 mo
485.068 122.162 li
485.068 113.064 li
475.436 113.064 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.1851 0 0 11.5095 526.013 1068.27 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
486.455 119.377 mo
493.98 119.377 li
493.98 108.548 li
486.455 108.548 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[9.51989 0 0 13.6988 539.953 1071.8 ]ct
<<
/T 1
/W 76 
/H 108 
/M[76 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrLGPh.8It9^(J-[BO)$p:1ci=%S65]\&_4_AFL`Pt,J$:11aCBf)i!7$XJ9D>H#:b5@&F_(.<T,)'
b$^kKK7FCRJO/Gd!$M7E0d"[#OGFML5>%MEfDtc%*WFt!d\=*p`@>4bGQ@'[B7L2O"J`[^d]5bBn,TfF
Tm%D;/E(EU!&!^JD!q%GK+'CIHk$XH!5W"ldh%6PK8miMJ/Ja_1EDe&dGfG!hI`6>cTh$3>okXl<n$3<
)GOP->H$0=Z^Vs6?RN;)@eTX=hH,&)_WSEg$q<;F`k?CFQKs8deRPgelo%KNWjaA@fkT'j<CR-jWog;Z
g1H5+.\bo"mg8n!2.rISAf&RYrUDPIYi.9/4ISU$XQP0H!%?#Npl?mTMB]7,-3+%=/h9i8bJ%eo.`K9k
>F,Z'0ZqKE6YK.Z&]:j^4Usg+1fY/W0k<!R`3FD@X/kae2[prZMotJ.1"o2>/<S'c+NLN,!W~>

%%EndBinary
grestore
np
f
495.588 116.15 mo
502.34 116.15 li
502.34 108.452 li
495.588 108.452 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[8.5421 0 0 9.73884 551.507 1075.88 ]ct
<<
/T 1
/W 68 
/H 77 
/M[68 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfJ.)b`n:Mh`!Vd?Prql`r!-$S(%NuO9YQs]cgc5BEL-d!/=8Und#D^FYn*$8bn.1.;@1NWS$9nf8
7c6rBr$$CjSAGgBq>bsU!/!SRn;/D#QQr<JSe&o4)Q?Z8^oHj\bWGsrP>Yq0#DB)[rW$(Pd^r/(@7^G=
/_$-c`IVr[!!X6dV<[kq^!0t1"9o3L&Am67(lU9N(Q"sIiHV#M:EpIk_QqOY`[a-;c-<Tjbmlg*U=/21
3dio^!K_up15H=V#Q]b8h*MqTc0o_&hs[bD#6h9XEoUD@[OY-+%;;tI?^:KL-`9n?aZsbOKGp\#UtKG\
)I>I]!cV#3OD*/?FW?oZW,h4BaraW`8isHuDutj+TuI-N5U35-/sIOCMQ2FgafH>2+NK'8~>

%%EndBinary
grestore
np
f
503.331 116.15 mo
508.594 116.15 li
508.594 108.452 li
503.331 108.452 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.65767 0 0 9.73884 561.302 1075.88 ]ct
<<
/T 1
/W 53 
/H 77 
/M[53 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrZ!!E2pG^mJY!!)p;rpYVmh[kMBIJa+j63&\e!J'\="2LN1"2j%]!e(+[%fuS8'e;MaTCSl_ao6fQ
0IG!G_Zjr84<S;/)73r[76CS7'WI<lR3JHOWRW63DIj'R8e2J:]l%=`5YGo+HN67*^o+s)$ju'Q$"UG3
/['rJ0$S-q_WEM-<(>CoKuW!\qdo'uEe[uj+96j$!!%j@Y!<tKhA;Hij`$B_O8s8YKa'.C4VZQMV3s"<
(O5)FMlrr;1V1Xc6>\05bb87/E!"Jqhs[oP$HslSTEJJ-4Is56^BP)H3Ub7QMUg+a49lfVPuh*R!7B^u
#J^gt!^QQnYaCLn=_bs/hi\odilqj_ag6)me^jGEJ,~>

%%EndBinary
grestore
np
f
509.287 116.15 mo
514.252 116.15 li
514.252 105.452 li
509.287 105.452 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.28078 0 0 13.5331 568.837 1075.88 ]ct
<<
/T 1
/W 50 
/H 107 
/M[50 0 0 -107 0 107 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[L_K`<!eN\1n2MsO'*a+W@PFaN65^Je]HU4?ghJPbMb#"3-kh1k-B(P@d(*D!=URJajtVAhDJKr9
:#ZhRPO`i$Hr&cZ-Nsg-69n?0+:;K[JFKF7B_;o?3iQ,Ye7m8)jPkl!S_*4*.g-p:>d;n^QCA>dh.jH(
DDl9Adbf)X?*8@/^$>3:^"MmV>QjW0L7@0F=KCR*CQ?9lnMr.,;]CqAk&M?M]C:@Q!$C+om08J>s3U!$
n+6g@nLu'#p(<Zr!'^F-_V?)S%d4u6EQGrap,k;=rr^.$0Aq5`P!>70:\)Qh*J"4~>

%%EndBinary
grestore
np
f
516.534 127.051 mo
520.891 127.051 li
520.891 106.456 li
516.534 106.456 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[5.51138 0 0 26.0544 578.005 1062.09 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
423.361 126.573 mo
424.013 137.417 420.628 154.868 417.964 159.029 cv
0 gry
0 lj
4 ml
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
414.543 164.4 mo
415.223 161.312 415.641 157.205 415.214 154.211 cv
418.375 158.414 li
423.472 159.6 li
420.591 160.438 417.053 162.509 414.543 164.4 cv
f
314.81 679.522 mo
327.911 679.522 li
327.911 661.142 li
314.81 661.142 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.5744 0 0 23.2524 322.809 363.172 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
gsave
327.913 11.73 mo
327.913 11.73 li
cp
clp
314.81 -119.248 mo
327.911 -119.248 li
327.911 -137.628 li
314.81 -137.628 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.5744 0 0 23.2524 322.809 1373.67 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
grestore
gsave
221.256 11.73 mo
221.256 11.73 li
cp
clp
208.154 -121.67 mo
221.255 -121.67 li
221.255 -140.05 li
208.154 -140.05 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[16.5744 0 0 23.2524 187.882 1376.74 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
grestore
0 gry
%ADOBeginSubsetFont: VNTAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70
768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A4
87B4AA37370316974673AB> |-
/F <1C60D8A8C9B7D8BE41A64DA557BA3801C50A6D0B90DD03689D1958230FDD
078C54AD8D0DA7DD6F0C9EC4C6354485AE4B93FC66781C> |-
/b <1C60D8A8C9B7EF325758E57677E81C8AA433AA021E3255F2E2A0B1596320
19EEA8F6DE2A2BAC7F3B4B357F98F028325FFF3907B73C5456EB1D8FF0179B85
DD1D687E5A074ACA4745CB20001A6A3AC6F132FADF60810876C26262A98CC751
0FA38BE9723AF4B4ABB522A0D15754DB077A63E0BA57BE88E1BBA6B0CE58E658
8DE7ADAB6E41FD9D54E4EFD5A122C76C7BEBAA12F9C5DCCF6BAA6CC0815777C0
B46D695C4EB465E9932D1607B265E794EBAF8378597763D2145A376764> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUW+Helvetica /Encoding get
dup 68 /D put
dup 70 /F put
dup 98 /b put
pop
%ADOEndSubsetFont
/DYLDUW+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 14{/.notdef}rp /D /.notdef /F /.notdef /H 24{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
/z 133{/.notdef}rp]
DYLDUW+Helvetica nf
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
358.616 67.9479 mo
(all-to-all)
[11.499 4.59134 4.59134 6.88687 5.74951 11.499 6.88687 11.499 4.59134 0 ]xsh
207.028 477.256 mo
(nearest-neighbor)
[11.499 11.499 11.499 6.88686 11.499 10.3409 5.74951 6.88684 11.4991 11.499 4.59134 11.499 
11.499 11.499 11.499 0 ]xsh
DYLDUW+Helvetica*1 [33.0907 0 0 -33.4124 0 0 ]msf
75.7902 47.8719 mo
(D)sh
73.0304 458.564 mo
(F)sh
gsave
-328.217 243.199 mo
-328.217 243.199 li
cp
clp
-338.021 252.524 mo
-328.219 252.524 li
-328.219 243.2 li
-338.021 243.2 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 -503.07 903.355 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
grestore
gsave
-324.082 598.208 mo
-324.082 598.208 li
cp
clp
-333.885 607.532 mo
-324.083 607.532 li
-324.083 598.208 li
-333.885 598.208 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.4005 0 0 11.7961 -497.837 454.244 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
grestore
gsave
-162.796 196.991 mo
-162.796 196.991 li
cp
clp
-174.044 208.621 mo
-162.796 208.621 li
-162.796 196.993 li
-174.044 196.993 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[14.229 0 0 14.7106 -295.627 958.896 ]ct
<<
/T 1
/W 91 
/H 93 
/M[91 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-NFV\s):9]huEfW#75sq+bTQ;*Pi-h`F*?Z)o)s`5f+X^huJ3'"-Q3J;(-Ggq$i-Eh>eB+!a.6c
6(nO?KPiS$3)<p[=;/JY6BXbZmts.)+YSU8jn'sc%]:e$!$lO*;hA]bP#e:jRb`i(J<.L]'1dWTdmLQ.
jHKIoMI1IZgh#I>4E<k'V-2a'Ra)*:I_nH[i!^SM'l&fH=;^lU7K8R*>GOdseSd!hYLigeQqa^oF-11;
H:]CI"a>W8@/%0!^Kja33$n:s`UUbWhF+j.#X/;%=hJaE*0)EK.Eg,Tn?@_^ij0,67IQ=%^J]pD`HHUt
:C^10jFUq3d=4qQ/Y-j,T_XC5Et#jf\20BfYNPWT^W`G`!5FIRFT""og^^J?YZqg7_9C'MMmP%9aU4_\
RoIc[lO58m.WG9[&@CsG)%*eZRr6q(9Cf0Y*ruLLf>\De<uT(n>)7D3&^-.T7kU<VZ6A[V^bA<9XGlqk
XIHH\_QWcd-o#O8K&s?i$6:XoC9S8g&2!emHijdS#;J;kitMO':eAGd0gIkTW0dpCrAc-\M$#l4^jA\2
,jIts5;;E^plDu+i',7--\=*=#NrmOKU`>DJ;P0Dq;FoB5QpY2!9O?Qgbh^Hb_<B#dc/H^kp%c#5&Kil
~>

%%EndBinary
grestore
np
f
grestore
gsave
-129.534 221.007 mo
-129.534 221.007 li
cp
clp
-139.05 232.638 mo
-129.533 232.638 li
-129.533 221.01 li
-139.05 221.01 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[12.04 0 0 14.7106 -251.357 928.513 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%*Ws*R)i9E5%o&IO--8+;lbiYr)Z5b%fVqZ$j=J"Qd[pYZ63"V8D!&X]j&(3kDC+j_TeiWgN^
L*1.04QZkQJ\M3s-f=uS"+O/+&]q^9AI=13J2E.ArIInA<Fes1Vuh<&W52m8#^$p&s-["T&t%#ILDHZ>
BQG\^r\m3(bH8+ObRQQmL-hb9A-C2o0L/Y];.rK&'`WYQi3G=A,:Ab0;0%br`>64YMeD%SCHPX/V8_]j
%uHRX3?-R=FrIl&`to/q`HN7n2QmM!`Sk`<c5-8EQ&BYRQ!Qs:Q\O\c.<t^P;\tJY7Cq;=cXTuUc1:ci
cQ?N;9Cp-94q<`cfpDnCnuuJc6f[:%I:k?pXOaPu*!=+Xb*WFM_!;Oc1TZY:k^X.j,0iFq#WYOC50h$B
![`N.,QRh`Y,Efk[A'W=&jS#2!d]Ne%/BmfTdPGrU8>q),-*4"8rF(XbZ[u(Xsg"]js#gXcA]"ZiW9~>

%%EndBinary
grestore
np
f
grestore
gsave
-121.7 213.006 mo
-121.7 213.006 li
cp
clp
-127.137 238.716 mo
-121.699 238.716 li
-121.699 213.007 li
-127.137 213.007 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.87973 0 0 32.5236 -236.286 920.823 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
grestore
gsave
-112.015 216.26 mo
-112.015 216.26 li
cp
clp
-119.692 232.612 mo
-112.014 232.612 li
-112.014 216.263 li
-119.692 216.263 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[9.71264 0 0 20.6826 -226.868 928.545 ]ct
<<
/T 1
/W 62 
/H 131 
/M[62 0 0 -131 0 131 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfpY\4A"+S#bn9>nf#7Q/C!&4`U![dhu7A>SD]HT?TLW1HM#n.pW-%X1tJ-]D;"Y>HoV@r-X[KeR?
9`Pio)tJ1aT2-S.i;EWV7@-1dnHr8?#>-)e!#6Am_P[sG<?\";rF3;KE*)/P)XWIa6\3m,&1.RP+`4X+
@WqX=\j$b<^Fc)djmWP+^>Ns44=1F8K*"<8[_,j#EK$O--oS`08sbj<_^W%,hJ06cW5C,D]cN'GVQRff
QG$V)h6*@(2=`8OXu3Yu__1hgb_eusJ+)cFXrKZ]$fgSnY^The+)'iRo"?T8;`!"Wk@"7e`C$u(KB[bI
#fU"Hj7C8JY^^#\?gRO,2R&D+='kCmmGIr%Q)Ep'S-[%6!BA0%#_A?s3Wq^C%O(g;_6-*'!Q$6%%gnrl
oIbWj&BGptTZA6?&0OK]7h.p7^jct]EEl=rO7?YoK9-ZOK,R-'*,pHSV?.29+Q``/SfA#=i27V%=hq-]
#^HEW-cb64%'P[H7(u&@UHXe^%I*u~>

%%EndBinary
grestore
np
f
grestore
gsave
-104.576 213.006 mo
-104.576 213.006 li
cp
clp
-110.013 238.716 mo
-104.575 238.716 li
-104.575 213.007 li
-110.013 213.007 li
cp
0 gry
gsave
clp
[0.790468 0 0 -0.790468 59.6395 966.598 ]ct
[6.87973 0 0 32.5236 -214.623 920.823 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
grestore
gsave
51.8047 11.73 mo
51.8047 830.38 li
543.465 830.38 li
543.465 11.73 li
cp
clp
8 setflat
-157.033 202.727 mo
-160.306 202.727 li
217.971 46.6883 mo
217.971 50.2454 214.992 53.1294 211.324 53.1294 cv
207.649 53.1294 204.673 50.2454 204.673 46.6883 cv
204.673 43.1381 207.649 40.2482 211.324 40.2482 cv
214.992 40.2482 217.971 43.1381 217.971 46.6883 cv
226.482 54.9341 mo
226.482 58.4913 223.506 61.3741 219.832 61.3741 cv
216.163 61.3741 213.184 58.4913 213.184 54.9341 cv
213.184 51.3799 216.163 48.494 219.832 48.494 cv
223.506 48.494 226.482 51.3799 226.482 54.9341 cv
234.996 59.5725 mo
234.996 63.1266 232.014 66.0126 228.346 66.0126 cv
224.674 66.0126 221.695 63.1266 221.695 59.5725 cv
221.695 56.0153 224.674 53.1294 228.346 53.1294 cv
232.014 53.1294 234.996 56.0153 234.996 59.5725 cv
242.441 69.8762 mo
242.441 73.4294 239.465 76.3163 235.791 76.3163 cv
232.122 76.3163 229.143 73.4294 229.143 69.8762 cv
229.143 66.3221 232.122 63.4361 235.791 63.4361 cv
239.465 63.4361 242.441 66.3221 242.441 69.8762 cv
249.889 88.9412 mo
249.889 92.4944 246.91 95.3813 243.242 95.3813 cv
239.567 95.3813 236.591 92.4944 236.591 88.9412 cv
236.591 85.384 239.567 82.5002 243.242 82.5002 cv
246.91 82.5002 249.889 85.384 249.889 88.9412 cv
258.4 77.0891 mo
258.4 80.6462 255.424 83.5291 251.752 83.5291 cv
248.081 83.5291 245.101 80.6462 245.101 77.0891 cv
245.101 73.5349 248.081 70.649 251.752 70.649 cv
255.424 70.649 258.4 73.5349 258.4 77.0891 cv
265.316 92.5476 mo
265.316 96.1018 262.337 98.9877 258.668 98.9877 cv
254.994 98.9877 252.019 96.1018 252.019 92.5476 cv
252.019 88.9905 254.994 86.1035 258.668 86.1035 cv
262.337 86.1035 265.316 88.9905 265.316 92.5476 cv
274.359 100.276 mo
274.359 103.83 271.382 106.717 267.711 106.717 cv
264.04 106.717 261.061 103.83 261.061 100.276 cv
261.061 96.7198 264.04 93.8359 267.711 93.8359 cv
271.382 93.8359 274.359 96.7198 274.359 100.276 cv
282.873 113.157 mo
282.873 116.711 279.894 119.595 276.223 119.595 cv
272.551 119.595 269.575 116.711 269.575 113.157 cv
269.575 109.6 272.551 106.717 276.223 106.717 cv
279.894 106.717 282.873 109.6 282.873 113.157 cv
290.318 116.764 mo
290.318 120.318 287.342 123.204 283.671 123.204 cv
279.998 123.204 277.02 120.318 277.02 116.764 cv
277.02 113.206 279.998 110.323 283.671 110.323 cv
287.342 110.323 290.318 113.206 290.318 116.764 cv
297.769 125.006 mo
297.769 128.559 294.786 131.446 291.118 131.446 cv
287.447 131.446 284.468 128.559 284.468 125.006 cv
284.468 121.452 287.447 118.568 291.118 118.568 cv
294.786 118.568 297.769 121.452 297.769 125.006 cv
307.343 135.313 mo
307.343 138.866 304.364 141.75 300.693 141.75 cv
297.024 141.75 294.042 138.866 294.042 135.313 cv
294.042 131.756 297.024 128.872 300.693 128.872 cv
304.364 128.872 307.343 131.756 307.343 135.313 cv
315.854 131.703 mo
315.854 135.26 312.875 138.147 309.203 138.147 cv
305.535 138.147 302.552 135.26 302.552 131.703 cv
302.552 128.152 305.535 125.263 309.203 125.263 cv
312.875 125.263 315.854 128.152 315.854 131.703 cv
321.704 142.523 mo
321.704 146.079 318.728 148.966 315.057 148.966 cv
311.385 148.966 308.406 146.079 308.406 142.523 cv
308.406 138.972 311.385 136.082 315.057 136.082 cv
318.728 136.082 321.704 138.972 321.704 142.523 cv
329.686 153.858 mo
329.686 157.416 326.708 160.299 323.037 160.299 cv
319.365 160.299 316.389 157.416 316.389 153.858 cv
316.389 150.307 319.365 147.417 323.037 147.417 cv
326.708 147.417 329.686 150.307 329.686 153.858 cv
338.729 153.342 mo
338.729 156.899 335.75 159.786 332.079 159.786 cv
328.41 159.786 325.431 156.899 325.431 153.342 cv
325.431 149.791 328.41 146.902 332.079 146.902 cv
335.75 146.902 338.729 149.791 338.729 153.342 cv
346.709 172.41 mo
346.709 175.964 343.73 178.85 340.062 178.85 cv
336.387 178.85 333.407 175.964 333.407 172.41 cv
333.407 168.853 336.387 165.967 340.062 165.967 cv
343.73 165.967 346.709 168.853 346.709 172.41 cv
354.157 180.139 mo
354.157 183.69 351.177 186.576 347.506 186.576 cv
343.838 186.576 340.856 183.69 340.856 180.139 cv
340.856 176.582 343.838 173.698 347.506 173.698 cv
351.177 173.698 354.157 176.582 354.157 180.139 cv
362.136 179.623 mo
362.136 183.177 359.157 186.063 355.488 186.063 cv
351.814 186.063 348.838 183.177 348.838 179.623 cv
348.838 176.066 351.814 173.183 355.488 173.183 cv
359.157 173.183 362.136 176.066 362.136 179.623 cv
371.71 196.626 mo
371.71 200.177 368.734 203.064 365.063 203.064 cv
361.392 203.064 358.412 200.177 358.412 196.626 cv
358.412 193.07 361.392 190.186 365.063 190.186 cv
368.734 190.186 371.71 193.07 371.71 196.626 cv
378.63 199.201 mo
378.63 202.755 375.647 205.641 371.976 205.641 cv
368.308 205.641 365.326 202.755 365.326 199.201 cv
365.326 195.643 368.308 192.76 371.976 192.76 cv
375.647 192.76 378.63 195.643 378.63 199.201 cv
387.137 189.927 mo
387.137 193.484 384.159 196.367 380.491 196.367 cv
376.819 196.367 373.839 193.484 373.839 189.927 cv
373.839 186.372 376.819 183.487 380.491 183.487 cv
384.159 183.487 387.137 186.372 387.137 189.927 cv
394.589 207.446 mo
394.589 210.997 391.606 213.886 387.937 213.886 cv
384.266 213.886 381.288 210.997 381.288 207.446 cv
381.288 203.889 384.266 201.006 387.937 201.006 cv
391.606 201.006 394.589 203.889 394.589 207.446 cv
403.096 226.507 mo
403.096 230.064 400.117 232.948 396.449 232.948 cv
392.778 232.948 389.798 230.064 389.798 226.507 cv
389.798 222.954 392.778 220.067 396.449 220.067 cv
400.117 220.067 403.096 222.954 403.096 226.507 cv
412.142 222.129 mo
412.142 225.686 409.163 228.569 405.495 228.569 cv
401.821 228.569 398.841 225.686 398.841 222.129 cv
398.841 218.572 401.821 215.688 405.495 215.688 cv
409.163 215.688 412.142 218.572 412.142 222.129 cv
420.121 227.024 mo
420.121 230.578 417.139 233.464 413.471 233.464 cv
409.803 233.464 406.82 230.578 406.82 227.024 cv
406.82 223.47 409.803 220.584 413.471 220.584 cv
417.139 220.584 420.121 223.47 420.121 227.024 cv
1 lj
10 ml
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
427.569 231.144 mo
427.569 234.701 424.591 237.584 420.916 237.584 cv
417.247 237.584 414.268 234.701 414.268 231.144 cv
414.268 227.592 417.247 224.706 420.916 224.706 cv
424.591 224.706 427.569 227.592 427.569 231.144 cv
436.081 241.966 mo
436.081 245.52 433.098 248.403 429.43 248.403 cv
425.758 248.403 422.783 245.52 422.783 241.966 cv
422.783 238.412 425.758 235.526 429.43 235.526 cv
433.098 235.526 436.081 238.412 436.081 241.966 cv
442.466 267.728 mo
442.466 271.285 439.483 274.168 435.815 274.168 cv
432.143 274.168 429.164 271.285 429.164 267.728 cv
429.164 264.171 432.143 261.287 435.815 261.287 cv
439.483 261.287 442.466 264.171 442.466 267.728 cv
452.039 272.364 mo
452.039 275.921 449.06 278.804 445.389 278.804 cv
441.72 278.804 438.742 275.921 438.742 272.364 cv
438.742 268.809 441.72 265.922 445.389 265.922 cv
449.06 265.922 452.039 268.809 452.039 272.364 cv
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
1 setflat
207.495 44.3148 mo
444.566 260.332 li
25.9917 lw
4 ml
gsave
[0.099515 0 0 -0.100485 0 842 ]ct
@
grestore newpath
DYLDUW+Helvetica*1 [15.2997 14.0435 13.9081 -15.4484 0 0 ]msf
348.241 213.207 mo
(correlated)
[7.64984 7.02173 8.50662 7.80817 5.0947 4.67633 5.0947 4.67639 8.50662 7.80817 3.39651 3.11761 
8.50665 7.80815 4.2533 3.90411 8.50665 7.80811 0 0 ]xysh
DYLDUW+Helvetica*1 [20.6817 0 0 -20.8829 0 0 ]msf
108.867 49.5449 mo
(1)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Procedure [/0 /1 ]]
] del_res
/DYLDUW+Helvetica*1 uf
/DYLDUW+Helvetica uf
/VNTAAA+Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize A4
%%+ *JobPatchFile 0
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
