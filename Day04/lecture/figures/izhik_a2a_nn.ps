%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: 089976603321891783.pdf
%%Creator: Adobe Acrobat 8.0
%%For: abigail
%%CreationDate: 05/29/2008, 03:05:29 PM
%%BoundingBox: 51 11 544 831
%%HiResBoundingBox: 51.8048 11.6200 543.4653 830.2700
%%CropBox: 51.8048 11.6200 543.4653 830.2700
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (ApeosPort-II C3300) (3016.103) 6
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
[{
%%BeginFeature: *JobPatchFile 0

%%EndFeature
} stopped cleartomark
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize A4

    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known 
    {get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice

%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 3402 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c320 44.287556, Sun May 13 2007 17:18:41">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:CreateDate="2003-04-18T08:52:33Z"
   xap:CreatorTool=" TeX output 2003.04.02:1303"
   xap:ModifyDate="2006-02-22T07:15:53+05:30"
   pdf:Producer="Acrobat Distiller 4.05 for Macintosh">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>joe@diskserver.castanet.com Joe Pickert</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">/c/1997c/tops/dvips</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (2)]
[/TrimBox [51.804737091064 11.619995117188 543.46527099609 830.26995849609]]
[/BleedBox [51.804737091064 11.619995117188 543.46527099609 830.26995849609]]
[/ArtBox [0 0 595 842 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
51.8047 11.73 mo
51.8047 830.38 li
543.465 830.38 li
543.465 11.73 li
cp
clp
[3.09042 0 0 3.09042 -818.599 -837.502 ]ct
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
%ADOBeginSubsetFont: OCNBAA+Palatino-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /OCNBAA+Palatino-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989 Adobe Systems Incorporated.  All rights reserved.Palatino is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Palatino-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 78 /N put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 115 /s put
dup 118 /v put
dup 122 /z put
def
/FontBBox {-166 -283 1021 927} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 689 709 459 469 726 728] def
/OtherBlues [266 276 -283 -278] def
/StdHW [51] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
20 dict dup begin
/period <1C60D8A8C9B8707CAD1BD6CC731392F6B2AFDE7C960476B9887B4E0
85C1593079EE0F8EAFC4DB00379A34EF6> |-
/one <1C60D8A8C9B7A73DC60AD0F2BAE5883FA8779A90C3194AE1F5DD3953C5
EE8269B8091F760514D7DFB723B1FFACA7AA77FAE2A0EFA62BF401005C3B2916
C7BD2CA7814C88E892873C317E64454AD50D2E42E738284E8EDDE9D80D3CB3EC
E9D28A1CC5F956536895C23ADFE6C1037EFFB8E0FBC54F68240B05774EE20DD1
3F3757972985EBA5BDA28508ABF585D87C471AB6EC819ED590611AF6> |-
/two <1C60D8A8C9B7A73DC67A2056743B7CAB88164EB9400E0B11C90B7F72C6
4077B0EC63A1ED87B94D47B04E4A28C0D041D5CB2F01A52030A447B6F14E8BFD
17FEBDAEE819BAEBC9D5374AC2ED2FC6CD7DB0F7A45C6539070F2E9ABDFF0083
031D94C316380724223D9E00B565A347DDCFD145BCFE88077126AEEBD5909474
62173333CD3FAA7392802A6820753D0CD1BF> |-
/five <1C60D8A8C9B7A73D3957DD70375BA417E8CAB7A83C6714FD798917510
4E63EAB05316318DFC14782512642D2CB41B71D01BA775DFA8B0E03C377D40ED
3CFFCA705F2712C4F76A628ACE7FABEC5972C7DBBC80B502A2E1D1E132DA028C
6ACC21F93429B7672187E617522491C62AF8F84801C0396DB98B1EB4F3426CE1
E2064B2DAD0B498CAA4D15748B099B6CEBC8EC68CB968171B2BFCF2718EF8249
6B1DDB02819C37702DC96F69D30EC0489A30A286635> |-
/D <1C60D8A8C9B6FB5FBBC78FB65DD69557B194E40C257FEBEB7C8261AA313E
CAB2CF3FDC87E69ECC51FB70881D06BC643532ED607086BDAD97F60F508C51FE
859DC3EF26AB1F979AED230664848A2FD46C94BA4391B560DE5E8D45AB96DC42
2DB2A895520593A8083F2E7826A479320F005F8FB8D2FD0ED9CB19541D7A8322
ADE98937A3E977044D52784CC50EA06306BDEA51E72E244772E1962074570A73
6934A7446E6CBA7935148813D0C13F1DEA5813D48F5C38A03CD0806AFEAF1920
4B3E5A8EC67A0B290DCB885AB76228D800F4A688762854C9C5E1B7460C33C136
B0AEB9D97767510B9E101AB460F6021CE9C67A3CEF2667F2375E819A7F8B376F
65D9518099> |-
/E <1C60D8A8C9B7D8BE69BA8C5C44C29379C3F6816735A5482CE6DA5F11CEAF
85877A2A7869289B872AECFD1FE886C1E568511CEC0B052BC25280D3E4A91574
9F5D99AD94CAAB84790A99E915DF5A003CA24E82A9A53A95F739DDD488F53E38
34FB1CFE71B260A04924FCF52925F62DCB0A30034062635318F78606CE397F08
8A422058C2BECA0652A3C0BA636575BE8D1F608CD39C989992EA32D58CEB0655
7A2895DA7348FAA77A64D64FB298A8E2625AFF5D9E9737792E70FB39ED873144
F02EDA7D45CD7FD1B2E9631195DF933B8A54191A9D08015596D899BC7745DBB0
9EDCCFCE7A8EB996FC79554BA9DFF77D0234232035B65B432A2AEC0A86522D33
9ED37F33E8FC710149F15B44DB219ABAB43D1918B35F351B2E130543B62AA87B
424FB11B05338E415D29CDA289CE40AF64A31AA408AD6B72543A29B3F8BC9A58
7BABFCD9FE5143534C15BFA8B0465DC8CBAAAF42E4E5C9C18EFE5E39A5B452C0
CEAF523BAE5AF2ED2151B95C27FA6CD5D0562689> |-
/I <1C60D8A8C9B81BEA11F8DE52D6DB761A2AAA43CD09A03A3C82786C718340
8FAC8DB712C17D7BF77B0534633319163F4D54A35118F43267A36905C609DF12
5CA923BC810D8D5AD01EF73D2AD4B5427F2B8E07D8F399195C46FD4282834A66
9E79B5AB090337A74F8A0897026F6E88A8867650201CA879097876F4EE1172FB
234D56E604C04F72A6F89BA37C2BBDEBB1DF605502493D0DAB50E421293C11F3
E3F0979FE997565294AB6FC47AB5DB6DB17716EA1B8B4B9FAE6EF4757C> |-
/N <1C60D8A8C9B6B278CF3D0B5B2CB3A1C020AAA89ED72D6BFF6335EF77EB12
66264B9877CFF7400769419D14D92A7BA12F0EBA9B8A2C5B66ABD0D704710E4B
CC0FE8560AC492ED78C441233DF94A59085BE3C17B5DAD89FDBA24AA97E08F27
C496014810494C4FE77213F97D6C090539DBF4DCAD1B2451316AF1240D14FD6C
BCDE145C73B42529097766239F3E5006AF6C197B480ECDB1826F647FC44387FB
821241D78F055243DFF86986D0450004CE11187617CE0D1B8719CB5AB702CEE5
DB49E04A38C7FCBFC1D763CCD6E4BC7701C8BED080C17DD8AABEB6C0DA907B5F
F95749F2C94C277637F177BF31D0572DB09EB22BB9A906B064BA2E01F6C4616A
6E2F5C9113E539D9838F61C50323D1EF6731ED87113B64E84E6491200B7A9CC4
9533153A5F36053894CE43A0> |-
/a <1C60D8A8C9B7A73DC60B9EACA61D90F296B24300CE80E762E4B1E02F0058
BC5B8D48B69FCC1BD7AED9810F8FEE2193572F74F8B6198F36E058A38F853858
59393B22651B4352E9736F442D5894E23EFCAAF48A3373E5F0DB76119E9546F8
1BF976FA76CDC3B4642DAEF48CB6A7989F5AD31CAD8C1078B477E83C9D5727EE
BADEDC49837B5463D723C02BD0E7A32E0B414356A2CCA2567E074489389340CE
53B0FF71C425554D1539BE5600C47D202B0089ACD151600E84C59A02B388E1FA
3112A2DE2A5730A27F50792AE9699EF1C59CCC02C9E98FDC96A521E15FC7B124
E949E09C7E99F8C1139F853EA92238> |-
/c <1C60D8A8C9B77FE24E589A4BC1FB0315B0D97F03377DA5AA85F52DF2A408
CF00AFA5999807E42B8CB1740166BE611554B03E3506883E426AE77586E8EC7D
458DD134D84F6D6EB049C331FDEFBC098D0AA5748B18F6C99E4A73A680885710
9C5F6C06D8D1D5B32DD9FDB4979650DD6573C24C> |-
/d <1C60D8A8C9B7D8BE69BA8C533DAC79CBAA016C512697D2193F62DF5121CC
91F06135625FA66CF9E1CB586F8610DB889D84EAD61D287708407C97E0CE05A2
A70EC8B0BD275B05BC6764B11D9B1C316B88A6A0A0D97E15E123AE85374CF80E
5767C2EC127E7C3CEEDE8CB99DC5B482C81123C845AA42CC318362544C3F3F25
CA7E3A06B68F738626BDC209E7588C6B440D5163FECFD84F50C7CCC72FE18ED9
4F669FF37E79D0894A8D16CFACA5B22F65FF391DE14265F1E69B103C06B997FF
D645411C6951779E44BB7C507C3BB13A5A5B6A8A56402FCFAA964FF5A4F53D58
FF3BA6D8F042D53C5C29506D59E97BAA> |-
/e <1C60D8A8C9B75CBBDC5536C53A31CAE3790865AFF4EE04FB18C81929E7DB
306A4EDD693CF6C15C846A4E7AA1FD44D043B952B34AAE3416A17E8CD0EA823D
7A9C831E8F6F0DCA8C5E628059E197D24E6139B6398D4E6D2280DBF8D567360F
9D0B8BB7EE72E96AE8769F5E740A5CD0AFF803BF1C037A9DCE43A1EC84D5E137
AEB81BCD251815AB2ABF> |-
/h <1C60D8A8C9B7F51B67AF3606C3E28589C8291209B55CC37669EC3248A686
CD69D24EB0E29BF6A9909CAB241932BB8A71494D2F3DB56B28EA1DFB6789439A
2D986257774C2FF02F8003E97528AEFFF5173D47BA1D00ED331C8ED6B4C6B9D4
0EC77258FF4599BB1966E68B275292BD79568547942A5E71F4704918874B0BF0
E9CED5E8F244C34ED26E5462675CB7592DB69A43ECE23B9D5C2DCA7B2F49329D
8448E2930B385C400F509DF0625C0BC0B2183C98032C17F6048C58E19258B3CC
92EB78D2AC2EE234586D007F1048D21CB619855094CEFBFD36A191473DF58E6F
DEA633783BE7A00CAEDBD197C01B7C8050E7543181FC3B96B6> |-
/i <1C60D8A8C9B849F2331CC19BD00DF1E2FA12EB3A3BD31453FD78E4B39474
806DAADC00BF074453D8A95E77BFC52683C8605332B3F8D347C0C5823B07E045
6FE51F9A82B1B6A22D4C920AAD6957F1D3635625BD7F2D9A58224190F67D5D49
7446196C358E835B2E872C1880130BE535C06C204F27256D9B59E111CC431FF5
77B967FF9E707CB59DF5AF7C8F15AB803B4F389CA0765B40B72E2D167B14A2BC
E41821E8EFD18330BC1506C482825C5172BAF3EC5B1583> |-
/k <1C60D8A8C9B7EF32548E9ED29418AA6CEA9159A4E64A719DDB78A3A8756F
E77509A77F4657CE700DFE91504185E62E944A0492D506123986A524D5E6C6A1
843F47786B7D271206AEAF5B9F29A7BA50416BD3F5FB158A3100C4E752AED0B2
66ED4FDB91830A690123431D74C088608D7980B93C24F504F8CF09D7A5778767
6084178B55AFFF5514998E5B3B8AA0F675C2A12410148E15D12BE328DB462842
2104AE4C847A46557657E2B6CE00AC14D14720529354E044D38AFEC315569AAC
C460774D82BE4E226349CBCA637B9B1B355FC4B7> |-
/n <1C60D8A8C9B7F51B67AF3606C3E285932D99BCEF03AFBB111EB4598F97AF
4D528D9118D5FF8D1A6AECAE8B678FADC0150077DDBFDED7A65665FA1FE9DDBA
84FA877B06264C118F52C10211BE709DCBC588EDFD8905D039E7E23F22DA47DB
4F2596FCAE7FC73DF99BC28FD70CCF3ECA117954775143655F4806178CED8EBC
6CD75B16469369C9E93CA9498EE7BCFD42D24FE946AEA7D728A2B91D86E080EB
3316F0837C2F7800A2AA4DB5B47E6917370C7F618BFBFF1CBF9D415C59C30124
6D0AD5812DC37CD3E83D9CF350D6BDBDF45A9991FB4DE5E12A13364574CE20B1
AECC1346EE736EB025D1ABB246D46817FE79528F5B4FE98B433A806EEFCF17A0
9404> |-
/s <1C60D8A8C9B713D4BC3C72C059606B1A38529848A446B2F6B90A230DA9A2
13BEEEC3F8E3042332E27EC240E264F7B13264979E4E6290B6EF78BC1A8DA46F
FF92A2A3507C08396C4FB85295A9F8A92380BA40C72B63469E3B80F155F34990
8AA7FA92C6C6441DD73769B7633452AFBD10D0701E3DADB70A407C3DB1D9A820
7F28B975A452A74E8DF22EE818C41FBBFCF115791B74D9FECC83AD728FCD9715
6596589D53246631A24A16E7C414154A2D4D18CB86020C2265FD9AC511E1408F
BFD55B> |-
/v <1C60D8A8C9B7E6F03D67E54D078B6BE06C12B654B362F05D153C96C6CF24
2496F90965E8909CD46560627F9144593F8D7BDAC5993B1D5A74D6E3BA9ED90F
D294ED6183774E569E2165B042027D6B8C850A99ADBD48ED72A1CE9F585A0443
4563EC42D03FEB109C5F9D09CB40C01ECAC28E5E7609680B848AF1863519A6B7
F961AE41289F821BC55A53466E4BF690E32A7AB57D2192CB6298ACA2FE776B24
2114E5B21F70BA530E5A6B9866C764BB9BB451045A39302D5C0B496481B8DD18> |-
/z <1C60D8A8C9B7A73DC610A9CEF33D3E2C0BF608368F8BE2F02EA16555C075
DCDD863C9CA140363BC38441C34ED2AE62D1007C046E781A64274FC6CFD5C83B
6A85F4FD1AB744FF7A0514EEE8F87B90EB0876A0534D454F451996506D5B053E
EE433ADEF6FF4D43D8E43A8147609E122E85A300A6B5D76141805C005654AABF
2A5ADF5A94CF98FC121124BBF55C3699982A01E5E85755C941689C737E76FBF6
53E367AABEEB9CADF60C116052D482D42C04DC52> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUQ+Palatino-Roman /OCNBAA+Palatino-Roman findfont ct_VMDictPut
/DYLDUQ+Palatino-Roman*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /two 2{/.notdef}rp /five 14{/.notdef}rp 
/D /E 3{/.notdef}rp /I 4{/.notdef}rp /N 18{/.notdef}rp /a 
/.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef 
/k 2{/.notdef}rp /n 4{/.notdef}rp /s 2{/.notdef}rp /v 3{/.notdef}rp 
/z 133{/.notdef}rp]
DYLDUQ+Palatino-Roman nf
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
133.39 125.933 mo
(1512E.IzhikevichandN.Desai)
[4.4832 4.4832 4.4832 192.21 5.47839 4.48318 3.02173 4.48318 5.21848 2.60922 4.98532 4.29495 
5.06604 2.60919 3.98108 7.46097 4.48318 5.21848 7.72 7.45102 4.48318 6.94 4.29495 3.80173 
4.48318 0 ]xsh
211.157 352.662 mo
212.997 352.662 213.875 352.788 214.335 349.96 cv
214.798 347.114 215.234 338.441 215.632 337.415 cv
216.008 336.444 216.578 336.575 216.762 337.12 cv
217.723 339.992 217.876 352.93 225.253 352.788 cv
0.65 gry
f
211.157 352.662 mo
212.997 352.662 213.875 352.788 214.335 349.96 cv
214.798 347.114 215.234 338.441 215.632 337.415 cv
216.008 336.444 216.578 336.575 216.762 337.12 cv
217.723 339.992 217.876 352.93 225.253 352.788 cv
0 gry
0.841 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
162.2 516.238 mo
161.921 513.535 li
161.921 513.535 162.267 513.611 162.59 513.578 cv
199.62 509.706 210.105 478.623 214.232 465.784 cv
214.12 466.91 li
227.616 501.597 242.45 510.157 266.765 513.648 cv
266.877 516.238 li
162.2 516.238 li
0.65 gry
f
162.255 385.034 mo
266.653 385.034 li
266.653 352.768 li
162.255 352.768 li
cp
f
8 setflat
162.204 253.973 mo
162.204 154.749 li
266.438 154.749 li
266.438 253.973 li
162.204 253.973 li
1 gry
0.42 lw
10 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
162.204 154.748 mo
266.438 154.748 li
162.204 253.973 mo
266.438 253.973 li
266.438 253.973 mo
266.438 154.748 li
162.204 253.973 mo
162.204 154.748 li
162.204 253.973 mo
266.438 253.973 li
162.204 253.973 mo
162.204 154.748 li
162.204 253.973 mo
162.204 252.902 li
162.204 154.748 mo
162.204 155.762 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
%ADOBeginSubsetFont: RTRAAA+Helvetica Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /RTRAAA+Helvetica def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Helvetica) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/hyphen <1C60D8A8C9B81F2C3AC7E044D0946E6D2305FBC1A5806554FDBB52A
75CA669> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE0295
8A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUR+Helvetica /RTRAAA+Helvetica findfont ct_VMDictPut
/DYLDUR+Helvetica*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 206{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
152.719 262.164 mo
(-100)
[2.22845 3.72086 3.72087 0 ]xsh
8 setflat
188.249 253.973 mo
188.249 252.902 li
188.249 154.748 mo
188.249 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
180.659 262.164 mo
(-50)
[2.22845 3.72086 0 ]xsh
8 setflat
214.293 253.973 mo
214.293 252.902 li
214.293 154.748 mo
214.293 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
212.447 262.164 mo
(0)sh
8 setflat
240.338 253.973 mo
240.338 252.902 li
240.338 154.748 mo
240.338 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
236.65 262.164 mo
(50)
[3.72086 0 ]xsh
8 setflat
266.438 253.973 mo
266.438 252.902 li
266.438 154.748 mo
266.438 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
260.854 262.164 mo
(100)
[3.72086 3.72086 0 ]xsh
8 setflat
162.204 241.528 mo
163.208 241.528 li
266.438 241.528 mo
265.378 241.528 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
150.934 244.032 mo
(-50)
[2.22845 3.72086 0 ]xsh
8 setflat
162.204 216.749 mo
163.208 216.749 li
266.438 216.749 mo
265.378 216.749 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
156.567 219.255 mo
(0)sh
8 setflat
162.204 191.915 mo
163.208 191.915 li
266.438 191.915 mo
265.378 191.915 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
152.831 194.422 mo
(50)
[3.72086 0 ]xsh
8 setflat
162.204 167.137 mo
163.208 167.137 li
266.438 167.137 mo
265.378 167.137 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
149.094 169.645 mo
(100)
[3.72086 3.72087 0 ]xsh
8 setflat
162.204 154.748 mo
266.438 154.748 li
162.204 253.973 mo
266.438 253.973 li
266.438 253.973 mo
266.438 154.748 li
162.204 253.973 mo
162.204 154.748 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
162.2 254.055 mo
266.487 254.055 li
266.487 154.779 li
162.2 154.779 li
cp
clp
213.791 241.302 mo
213.234 240.57 li
212.229 239.219 li
211.672 238.599 li
211.17 237.923 li
210.668 237.304 li
210.111 236.74 li
209.106 235.615 li
208.549 235.051 li
208.047 234.488 li
207.545 233.981 li
206.988 233.475 li
206.485 233.024 li
205.928 232.517 li
204.924 231.617 li
204.366 231.222 li
203.864 230.771 li
203.362 230.378 li
202.805 229.984 li
202.302 229.589 li
201.801 229.251 li
201.243 228.857 li
200.239 228.181 li
199.682 227.843 li
199.179 227.505 li
198.678 227.224 li
198.119 226.885 li
197.618 226.604 li
197.116 226.323 li
196.558 226.041 li
196.056 225.76 li
195.555 225.535 li
194.996 225.252 li
194.495 225.027 li
193.993 224.746 li
193.435 224.521 li
192.431 224.07 li
191.874 223.901 li
191.372 223.676 li
190.814 223.451 li
190.312 223.282 li
189.811 223.113 li
189.252 222.888 li
188.751 222.719 li
188.249 222.549 li
187.691 222.38 li
187.189 222.212 li
186.688 222.043 li
186.129 221.93 li
185.628 221.761 li
185.125 221.593 li
184.568 221.48 li
184.066 221.31 li
183.564 221.198 li
183.006 221.085 li
182.505 220.916 li
182.002 220.804 li
181.445 220.691 li
180.942 220.579 li
180.441 220.466 li
179.883 220.354 li
179.381 220.241 li
178.879 220.185 li
178.322 220.072 li
177.819 219.96 li
177.318 219.847 li
176.759 219.791 li
176.258 219.678 li
175.701 219.621 li
175.198 219.509 li
174.696 219.452 li
174.139 219.34 li
173.637 219.283 li
173.135 219.227 li
172.578 219.115 li
172.075 219.058 li
171.573 219.002 li
171.016 218.946 li
170.514 218.889 li
170.012 218.833 li
169.454 218.777 li
168.952 218.721 li
168.451 218.664 li
167.892 218.608 li
167.391 218.552 li
166.889 218.495 li
166.331 218.439 li
165.829 218.383 li
165.328 218.327 li
164.769 218.27 li
164.268 218.214 li
163.765 218.214 li
163.208 218.158 li
162.706 218.102 li
162.204 218.045 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.293 242.034 mo
213.791 241.302 li
0.11 gry
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.795 169.164 mo
215.352 172.431 li
215.855 175.472 li
216.356 178.344 li
216.915 180.991 li
217.416 183.468 li
217.918 185.721 li
218.476 187.86 li
218.978 189.888 li
219.48 191.746 li
220.038 193.435 li
220.539 195.068 li
221.041 196.532 li
221.599 197.94 li
222.101 199.236 li
222.659 200.418 li
223.161 201.545 li
223.662 202.615 li
224.221 203.572 li
224.722 204.473 li
225.224 205.317 li
225.782 206.106 li
226.284 206.839 li
226.786 207.514 li
227.343 208.189 li
228.348 209.316 li
228.905 209.823 li
229.909 210.724 li
230.466 211.175 li
230.969 211.512 li
231.471 211.906 li
232.028 212.244 li
232.53 212.526 li
233.032 212.808 li
233.589 213.089 li
234.092 213.371 li
234.594 213.596 li
235.151 213.821 li
235.653 213.991 li
236.155 214.216 li
236.712 214.384 li
237.215 214.553 li
237.772 214.666 li
238.275 214.835 li
238.776 214.947 li
239.334 215.06 li
239.836 215.172 li
240.338 215.285 li
240.895 215.397 li
241.398 215.51 li
241.899 215.567 li
242.457 215.68 li
242.959 215.736 li
243.461 215.792 li
244.019 215.849 li
244.521 215.905 li
245.022 215.961 li
245.581 216.017 li
246.082 216.074 li
246.584 216.13 li
247.142 216.186 li
247.644 216.186 li
248.145 216.242 li
248.703 216.299 li
249.205 216.299 li
249.707 216.355 li
250.265 216.355 li
250.766 216.411 li
251.826 216.411 li
252.328 216.468 li
253.388 216.468 li
253.889 216.524 li
254.949 216.524 li
255.451 216.58 li
257.571 216.58 li
258.072 216.636 li
262.255 216.636 li
262.758 216.693 li
266.438 216.693 li
0 gry
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.293 165.617 mo
214.795 169.164 li
0.296 gry
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
162.204 216.749 mo
266.438 216.749 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
162.204 385.071 mo
162.204 285.846 li
266.438 285.846 li
266.438 385.071 li
162.204 385.071 li
1 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
162.204 285.846 mo
266.438 285.846 li
162.204 385.071 mo
266.438 385.071 li
266.438 385.071 mo
266.438 285.846 li
162.204 385.071 mo
162.204 285.846 li
162.204 385.071 mo
266.438 385.071 li
162.204 385.071 mo
162.204 285.846 li
162.204 385.071 mo
162.204 384.001 li
162.204 285.846 mo
162.204 286.86 li
188.249 385.071 mo
188.249 384.001 li
188.249 285.846 mo
188.249 286.86 li
214.293 385.071 mo
214.293 384.001 li
214.293 285.846 mo
214.293 286.86 li
240.338 385.071 mo
240.338 384.001 li
240.338 285.846 mo
240.338 286.86 li
266.438 385.071 mo
266.438 384.001 li
266.438 285.846 mo
266.438 286.86 li
162.204 385.071 mo
163.208 385.071 li
266.438 385.071 mo
265.378 385.071 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
157.571 385.541 mo
(0)sh
8 setflat
266.438 371.837 mo
265.378 371.837 li
266.438 358.604 mo
265.378 358.604 li
266.438 345.369 mo
265.378 345.369 li
266.438 332.136 mo
265.378 332.136 li
266.438 318.902 mo
265.378 318.902 li
162.204 305.669 mo
163.208 305.669 li
266.438 305.669 mo
265.378 305.669 li
266.438 292.435 mo
265.378 292.435 li
162.204 285.846 mo
266.438 285.846 li
162.204 385.071 mo
266.438 385.071 li
266.438 385.071 mo
266.438 285.846 li
162.204 385.071 mo
162.204 285.846 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
162.2 385.147 mo
266.487 385.147 li
266.487 285.871 li
162.2 285.871 li
cp
clp
162.204 352.802 mo
266.438 352.802 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
162.204 305.669 mo
266.438 305.669 li
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
162.204 516.168 mo
162.204 416.944 li
266.438 416.944 li
266.438 516.168 li
162.204 516.168 li
1 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
162.204 416.944 mo
266.438 416.944 li
162.204 516.168 mo
266.438 516.168 li
266.438 516.168 mo
266.438 416.944 li
162.204 516.168 mo
162.204 416.944 li
162.204 516.168 mo
266.438 516.168 li
162.204 516.168 mo
162.204 416.944 li
162.204 516.168 mo
162.204 515.099 li
162.204 416.944 mo
162.204 417.958 li
188.249 516.168 mo
188.249 515.099 li
188.249 416.944 mo
188.249 417.958 li
214.293 516.168 mo
214.293 515.099 li
214.293 416.944 mo
214.293 417.958 li
240.338 516.168 mo
240.338 515.099 li
240.338 416.944 mo
240.338 417.958 li
266.438 516.168 mo
266.438 515.099 li
266.438 416.944 mo
266.438 417.958 li
162.204 516.168 mo
163.208 516.168 li
266.438 516.168 mo
265.378 516.168 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
154.894 518.659 mo
(0)sh
8 setflat
162.204 499.612 mo
163.208 499.612 li
266.438 499.612 mo
265.378 499.612 li
162.204 483.057 mo
163.208 483.057 li
266.438 483.057 mo
265.378 483.057 li
162.204 466.556 mo
163.208 466.556 li
266.438 466.556 mo
265.378 466.556 li
266.438 450 mo
265.378 450 li
266.438 433.444 mo
265.378 433.444 li
162.204 416.944 mo
163.208 416.944 li
266.438 416.944 mo
265.378 416.944 li
162.204 416.944 mo
266.438 416.944 li
162.204 516.168 mo
266.438 516.168 li
266.438 516.168 mo
266.438 416.944 li
162.204 516.168 mo
162.204 416.944 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
162.2 516.238 mo
266.487 516.238 li
266.487 416.962 li
162.2 416.962 li
cp
clp
213.791 468.02 mo
213.234 469.428 li
212.229 472.131 li
211.672 473.427 li
211.17 474.722 li
210.668 475.905 li
210.111 477.086 li
209.609 478.269 li
209.106 479.396 li
208.549 480.466 li
208.047 481.535 li
207.545 482.549 li
206.988 483.563 li
206.485 484.521 li
205.928 485.421 li
204.924 487.223 li
204.366 488.068 li
203.864 488.913 li
203.362 489.701 li
202.805 490.49 li
202.302 491.278 li
201.801 492.01 li
201.243 492.685 li
200.741 493.418 li
200.239 494.093 li
199.682 494.713 li
198.678 495.951 li
198.119 496.571 li
197.116 497.698 li
195.555 499.275 li
194.996 499.781 li
194.495 500.288 li
193.993 500.739 li
193.435 501.189 li
192.431 502.09 li
191.874 502.484 li
191.372 502.878 li
190.814 503.273 li
190.312 503.667 li
189.811 504.005 li
189.252 504.399 li
188.249 505.075 li
187.691 505.413 li
187.189 505.694 li
186.688 506.032 li
186.129 506.314 li
185.125 506.877 li
184.568 507.158 li
184.066 507.439 li
183.564 507.665 li
183.006 507.947 li
182.505 508.172 li
182.002 508.397 li
181.445 508.622 li
180.942 508.847 li
180.441 509.073 li
179.883 509.299 li
179.381 509.467 li
178.879 509.692 li
178.322 509.861 li
177.819 510.086 li
177.318 510.255 li
176.759 510.424 li
176.258 510.594 li
175.701 510.763 li
175.198 510.931 li
174.696 511.044 li
174.139 511.213 li
173.637 511.382 li
173.135 511.494 li
172.578 511.663 li
172.075 511.776 li
171.573 511.888 li
171.016 512.002 li
170.514 512.17 li
170.012 512.283 li
169.454 512.396 li
168.952 512.508 li
168.451 512.621 li
167.892 512.677 li
167.391 512.789 li
166.889 512.902 li
166.331 513.015 li
165.829 513.071 li
165.328 513.183 li
164.769 513.297 li
164.268 513.353 li
163.765 513.466 li
163.208 513.522 li
162.706 513.578 li
162.204 513.691 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.293 466.556 mo
213.791 468.02 li
0.11 gry
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.795 468.02 mo
215.352 469.428 li
216.356 472.131 li
216.915 473.427 li
217.416 474.722 li
217.918 475.905 li
218.476 477.086 li
218.978 478.269 li
219.48 479.396 li
220.038 480.466 li
220.539 481.535 li
221.041 482.549 li
221.599 483.563 li
222.101 484.521 li
222.659 485.421 li
223.662 487.223 li
224.221 488.068 li
224.722 488.913 li
225.224 489.701 li
225.782 490.49 li
226.284 491.278 li
226.786 492.01 li
227.343 492.685 li
227.845 493.418 li
228.348 494.093 li
228.905 494.713 li
229.909 495.951 li
230.466 496.571 li
230.969 497.134 li
231.471 497.698 li
233.032 499.275 li
233.589 499.781 li
234.092 500.288 li
234.594 500.739 li
235.151 501.189 li
236.155 502.09 li
236.712 502.484 li
237.215 502.878 li
237.772 503.273 li
238.275 503.667 li
238.776 504.005 li
239.334 504.399 li
240.338 505.075 li
240.895 505.413 li
241.398 505.694 li
241.899 506.032 li
242.457 506.314 li
243.461 506.877 li
244.019 507.158 li
244.521 507.439 li
245.022 507.665 li
245.581 507.947 li
246.082 508.172 li
246.584 508.397 li
247.142 508.622 li
247.644 508.847 li
248.145 509.073 li
248.703 509.299 li
249.205 509.467 li
249.707 509.692 li
250.265 509.861 li
250.766 510.086 li
251.268 510.255 li
251.826 510.424 li
252.328 510.594 li
252.886 510.763 li
253.388 510.931 li
253.889 511.044 li
254.448 511.213 li
254.949 511.382 li
255.451 511.494 li
256.009 511.663 li
256.511 511.776 li
257.013 511.888 li
257.571 512.002 li
258.072 512.17 li
258.575 512.283 li
259.132 512.396 li
259.634 512.508 li
260.136 512.621 li
260.694 512.677 li
261.196 512.789 li
261.698 512.902 li
262.255 513.015 li
262.758 513.071 li
263.259 513.183 li
263.817 513.297 li
264.319 513.353 li
264.821 513.466 li
265.378 513.522 li
265.881 513.578 li
266.438 513.691 li
0 gry
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
214.293 466.556 mo
214.795 468.02 li
0.296 gry
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
162.204 435.64 mo
266.438 435.64 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
304.975 384.394 mo
304.975 285.171 li
409.209 285.171 li
409.209 384.394 li
304.975 384.394 li
1 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
304.975 285.171 mo
409.209 285.171 li
304.975 384.394 mo
409.209 384.394 li
304.975 384.394 mo
409.209 384.394 li
304.975 301.389 mo
304.975 302.403 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
303.126 392.58 mo
(0)sh
8 setflat
331.019 384.394 mo
331.019 383.325 li
331.019 285.171 mo
331.019 286.184 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
329.17 392.58 mo
(5)sh
8 setflat
357.064 384.394 mo
357.064 383.325 li
357.064 285.171 mo
357.064 286.184 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
353.374 392.58 mo
(10)
[3.72086 0 ]xsh
8 setflat
383.109 384.394 mo
383.109 383.325 li
383.109 285.171 mo
383.109 286.184 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
379.418 392.58 mo
(15)
[3.72086 0 ]xsh
8 setflat
409.209 301.389 mo
409.209 302.403 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 
202{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
405.517 392.58 mo
(20)
[3.72086 0 ]xsh
8 setflat
304.975 384.057 mo
305.979 384.057 li
409.209 384.057 mo
408.149 384.057 li
304.975 367.501 mo
305.979 367.501 li
409.209 367.501 mo
408.149 367.501 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD
48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B261170
2A5DA745406DEB5C33C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 202{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
296.769 369.999 mo
(-4)
[2.22845 0 ]xsh
8 setflat
304.975 351.001 mo
305.979 351.001 li
304.975 334.445 mo
305.979 334.445 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
296.769 336.945 mo
(-2)
[2.22845 0 ]xsh
8 setflat
304.975 317.888 mo
305.979 317.888 li
409.209 317.888 mo
408.149 317.888 li
304.975 301.389 mo
305.979 301.389 li
409.209 301.389 mo
408.149 301.389 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
299.334 303.89 mo
(0)sh
8 setflat
304.975 285.171 mo
409.209 285.171 li
304.975 384.394 mo
409.209 384.394 li
409.209 384.394 mo
409.209 285.171 li
304.975 384.394 mo
304.975 285.171 li
307.003 301.341 mo
307.003 302.46 306.104 303.368 304.995 303.368 cv
303.887 303.368 302.988 302.46 302.988 301.341 cv
302.988 300.222 303.887 299.314 304.995 299.314 cv
306.104 299.314 307.003 300.222 307.003 301.341 cv
309.573 304.099 mo
309.573 305.217 308.673 306.126 307.566 306.126 cv
306.457 306.126 305.557 305.217 305.557 304.099 cv
305.557 302.979 306.457 302.071 307.566 302.071 cv
308.673 302.071 309.573 302.979 309.573 304.099 cv
312.142 306.694 mo
312.142 307.812 311.243 308.72 310.135 308.72 cv
309.026 308.72 308.127 307.812 308.127 306.694 cv
308.127 305.574 309.026 304.666 310.135 304.666 cv
311.243 304.666 312.142 305.574 312.142 306.694 cv
314.713 308.964 mo
314.713 310.083 313.813 310.992 312.705 310.992 cv
311.596 310.992 310.697 310.083 310.697 308.964 cv
310.697 307.845 311.596 306.937 312.705 306.937 cv
313.813 306.937 314.713 307.845 314.713 308.964 cv
317.283 310.586 mo
317.283 311.705 316.383 312.613 315.274 312.613 cv
314.167 312.613 313.267 311.705 313.267 310.586 cv
313.267 309.467 314.167 308.559 315.274 308.559 cv
316.383 308.559 317.283 309.467 317.283 310.586 cv
320.013 314.154 mo
320.013 315.272 319.114 316.181 318.005 316.181 cv
316.897 316.181 315.998 315.272 315.998 314.154 cv
315.998 313.035 316.897 312.126 318.005 312.126 cv
319.114 312.126 320.013 313.035 320.013 314.154 cv
322.583 316.262 mo
322.583 317.382 321.683 318.289 320.575 318.289 cv
319.467 318.289 318.567 317.382 318.567 316.262 cv
318.567 315.143 319.467 314.235 320.575 314.235 cv
321.683 314.235 322.583 315.143 322.583 316.262 cv
325.153 319.02 mo
325.153 320.138 324.253 321.047 323.145 321.047 cv
322.037 321.047 321.137 320.138 321.137 319.02 cv
321.137 317.9 322.037 316.992 323.145 316.992 cv
324.253 316.992 325.153 317.9 325.153 319.02 cv
327.722 319.668 mo
327.722 320.787 326.823 321.696 325.715 321.696 cv
324.606 321.696 323.707 320.787 323.707 319.668 cv
323.707 318.549 324.606 317.641 325.715 317.641 cv
326.823 317.641 327.722 318.549 327.722 319.668 cv
330.453 322.263 mo
330.453 323.382 329.553 324.29 328.446 324.29 cv
327.337 324.29 326.438 323.382 326.438 322.263 cv
326.438 321.144 327.337 320.236 328.446 320.236 cv
329.553 320.236 330.453 321.144 330.453 322.263 cv
333.023 326.155 mo
333.023 327.274 332.123 328.182 331.015 328.182 cv
329.907 328.182 329.007 327.274 329.007 326.155 cv
329.007 325.036 329.907 324.128 331.015 324.128 cv
332.123 324.128 333.023 325.036 333.023 326.155 cv
335.593 328.913 mo
335.593 330.031 334.694 330.94 333.585 330.94 cv
332.476 330.94 331.578 330.031 331.578 328.913 cv
331.578 327.793 332.476 326.885 333.585 326.885 cv
334.694 326.885 335.593 327.793 335.593 328.913 cv
338.163 328.75 mo
338.163 329.87 337.263 330.778 336.155 330.778 cv
335.047 330.778 334.147 329.87 334.147 328.75 cv
334.147 327.632 335.047 326.723 336.155 326.723 cv
337.263 326.723 338.163 327.632 338.163 328.75 cv
340.893 332.805 mo
340.893 333.924 339.994 334.832 338.885 334.832 cv
337.777 334.832 336.878 333.924 336.878 332.805 cv
336.878 331.685 337.777 330.778 338.885 330.778 cv
339.994 330.778 340.893 331.685 340.893 332.805 cv
343.463 337.346 mo
343.463 338.466 342.564 339.373 341.455 339.373 cv
340.347 339.373 339.448 338.466 339.448 337.346 cv
339.448 336.227 340.347 335.319 341.455 335.319 cv
342.564 335.319 343.463 336.227 343.463 337.346 cv
346.033 337.832 mo
346.033 338.952 345.133 339.86 344.026 339.86 cv
342.917 339.86 342.017 338.952 342.017 337.832 cv
342.017 336.714 342.917 335.806 344.026 335.806 cv
345.133 335.806 346.033 336.714 346.033 337.832 cv
348.603 339.13 mo
348.603 340.249 347.703 341.158 346.595 341.158 cv
345.487 341.158 344.588 340.249 344.588 339.13 cv
344.588 338.011 345.487 337.103 346.595 337.103 cv
347.703 337.103 348.603 338.011 348.603 339.13 cv
351.333 341.725 mo
351.333 342.844 350.434 343.752 349.326 343.752 cv
348.217 343.752 347.318 342.844 347.318 341.725 cv
347.318 340.606 348.217 339.698 349.326 339.698 cv
350.434 339.698 351.333 340.606 351.333 341.725 cv
353.903 344.806 mo
353.903 345.926 353.003 346.833 351.896 346.833 cv
350.787 346.833 349.887 345.926 349.887 344.806 cv
349.887 343.687 350.787 342.78 351.896 342.78 cv
353.003 342.78 353.903 343.687 353.903 344.806 cv
356.473 346.59 mo
356.473 347.71 355.574 348.618 354.465 348.618 cv
353.357 348.618 352.458 347.71 352.458 346.59 cv
352.458 345.472 353.357 344.563 354.465 344.563 cv
355.574 344.563 356.473 345.472 356.473 346.59 cv
359.043 350.888 mo
359.043 352.008 358.144 352.916 357.035 352.916 cv
355.927 352.916 355.028 352.008 355.028 350.888 cv
355.028 349.77 355.927 348.861 357.035 348.861 cv
358.144 348.861 359.043 349.77 359.043 350.888 cv
361.693 351.294 mo
361.693 352.413 360.794 353.321 359.685 353.321 cv
358.578 353.321 357.678 352.413 357.678 351.294 cv
357.678 350.175 358.578 349.266 359.685 349.266 cv
360.794 349.266 361.693 350.175 361.693 351.294 cv
364.182 351.456 mo
364.182 352.575 363.284 353.483 362.175 353.483 cv
361.066 353.483 360.168 352.575 360.168 351.456 cv
360.168 350.336 361.066 349.429 362.175 349.429 cv
363.284 349.429 364.182 350.336 364.182 351.456 cv
366.913 359.241 mo
366.913 360.36 366.014 361.268 364.906 361.268 cv
363.797 361.268 362.898 360.36 362.898 359.241 cv
362.898 358.121 363.797 357.213 364.906 357.213 cv
366.014 357.213 366.913 358.121 366.913 359.241 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
369.483 356.646 mo
369.483 357.765 368.583 358.673 367.476 358.673 cv
366.367 358.673 365.467 357.765 365.467 356.646 cv
365.467 355.527 366.367 354.618 367.476 354.618 cv
368.583 354.618 369.483 355.527 369.483 356.646 cv
372.052 360.052 mo
372.052 361.17 371.154 362.079 370.045 362.079 cv
368.938 362.079 368.038 361.17 368.038 360.052 cv
368.038 358.932 368.938 358.024 370.045 358.024 cv
371.154 358.024 372.052 358.932 372.052 360.052 cv
374.623 363.944 mo
374.623 365.063 373.723 365.972 372.615 365.972 cv
371.507 365.972 370.607 365.063 370.607 363.944 cv
370.607 362.825 371.507 361.917 372.615 361.917 cv
373.723 361.917 374.623 362.825 374.623 363.944 cv
377.353 365.241 mo
377.353 366.361 376.454 367.269 375.346 367.269 cv
374.237 367.269 373.338 366.361 373.338 365.241 cv
373.338 364.123 374.237 363.214 375.346 363.214 cv
376.454 363.214 377.353 364.123 377.353 365.241 cv
379.924 366.863 mo
379.924 367.982 379.024 368.891 377.915 368.891 cv
376.808 368.891 375.908 367.982 375.908 366.863 cv
375.908 365.745 376.808 364.836 377.915 364.836 cv
379.024 364.836 379.924 365.745 379.924 366.863 cv
382.493 370.756 mo
382.493 371.874 381.593 372.783 380.486 372.783 cv
379.377 372.783 378.478 371.874 378.478 370.756 cv
378.478 369.637 379.377 368.728 380.486 368.728 cv
381.593 368.728 382.493 369.637 382.493 370.756 cv
385.063 375.783 mo
385.063 376.903 384.164 377.81 383.055 377.81 cv
381.947 377.81 381.047 376.903 381.047 375.783 cv
381.047 374.664 381.947 373.756 383.055 373.756 cv
384.164 373.756 385.063 374.664 385.063 375.783 cv
387.794 375.134 mo
387.794 376.254 386.894 377.162 385.786 377.162 cv
384.678 377.162 383.778 376.254 383.778 375.134 cv
383.778 374.016 384.678 373.107 385.786 373.107 cv
386.894 373.107 387.794 374.016 387.794 375.134 cv
390.363 379.027 mo
390.363 380.146 389.464 381.054 388.356 381.054 cv
387.247 381.054 386.348 380.146 386.348 379.027 cv
386.348 377.908 387.247 376.999 388.356 376.999 cv
389.464 376.999 390.363 377.908 390.363 379.027 cv
392.933 381.784 mo
392.933 382.903 392.034 383.812 390.925 383.812 cv
389.818 383.812 388.918 382.903 388.918 381.784 cv
388.918 380.665 389.818 379.757 390.925 379.757 cv
392.034 379.757 392.933 380.665 392.933 381.784 cv
395.503 381.947 mo
395.503 383.065 394.604 383.973 393.495 383.973 cv
392.387 383.973 391.488 383.065 391.488 381.947 cv
391.488 380.827 392.387 379.919 393.495 379.919 cv
394.604 379.919 395.503 380.827 395.503 381.947 cv
398.234 383.406 mo
398.234 384.525 397.335 385.434 396.226 385.434 cv
395.117 385.434 394.219 384.525 394.219 383.406 cv
394.219 382.287 395.117 381.379 396.226 381.379 cv
397.335 381.379 398.234 382.287 398.234 383.406 cv
304.975 301.389 mo
409.209 301.389 li
307.003 301.341 mo
307.003 302.46 306.104 303.368 304.995 303.368 cv
303.887 303.368 302.988 302.46 302.988 301.341 cv
302.988 300.222 303.887 299.314 304.995 299.314 cv
306.104 299.314 307.003 300.222 307.003 301.341 cv
309.573 303.612 mo
309.573 304.731 308.673 305.639 307.566 305.639 cv
306.457 305.639 305.557 304.731 305.557 303.612 cv
305.557 302.493 306.457 301.585 307.566 301.585 cv
308.673 301.585 309.573 302.493 309.573 303.612 cv
312.142 304.585 mo
312.142 305.704 311.243 306.612 310.135 306.612 cv
309.026 306.612 308.127 305.704 308.127 304.585 cv
308.127 303.466 309.026 302.557 310.135 302.557 cv
311.243 302.557 312.142 303.466 312.142 304.585 cv
314.713 306.044 mo
314.713 307.164 313.813 308.072 312.705 308.072 cv
311.596 308.072 310.697 307.164 310.697 306.044 cv
310.697 304.926 311.596 304.018 312.705 304.018 cv
313.813 304.018 314.713 304.926 314.713 306.044 cv
317.283 308.153 mo
317.283 309.272 316.383 310.181 315.274 310.181 cv
314.167 310.181 313.267 309.272 313.267 308.153 cv
313.267 307.034 314.167 306.126 315.274 306.126 cv
316.383 306.126 317.283 307.034 317.283 308.153 cv
320.013 308.639 mo
320.013 309.759 319.114 310.667 318.005 310.667 cv
316.897 310.667 315.998 309.759 315.998 308.639 cv
315.998 307.521 316.897 306.612 318.005 306.612 cv
319.114 306.612 320.013 307.521 320.013 308.639 cv
322.583 310.261 mo
322.583 311.38 321.683 312.289 320.575 312.289 cv
319.467 312.289 318.567 311.38 318.567 310.261 cv
318.567 309.143 319.467 308.234 320.575 308.234 cv
321.683 308.234 322.583 309.143 322.583 310.261 cv
325.153 310.91 mo
325.153 312.03 324.253 312.937 323.145 312.937 cv
322.037 312.937 321.137 312.03 321.137 310.91 cv
321.137 309.791 322.037 308.883 323.145 308.883 cv
324.253 308.883 325.153 309.791 325.153 310.91 cv
327.722 312.046 mo
327.722 313.164 326.823 314.073 325.715 314.073 cv
324.606 314.073 323.707 313.164 323.707 312.046 cv
323.707 310.926 324.606 310.018 325.715 310.018 cv
326.823 310.018 327.722 310.926 327.722 312.046 cv
330.453 312.857 mo
330.453 313.975 329.553 314.884 328.446 314.884 cv
327.337 314.884 326.438 313.975 326.438 312.857 cv
326.438 311.737 327.337 310.829 328.446 310.829 cv
329.553 310.829 330.453 311.737 330.453 312.857 cv
333.023 313.668 mo
333.023 314.786 332.123 315.694 331.015 315.694 cv
329.907 315.694 329.007 314.786 329.007 313.668 cv
329.007 312.548 329.907 311.64 331.015 311.64 cv
332.123 311.64 333.023 312.548 333.023 313.668 cv
335.593 315.127 mo
335.593 316.246 334.694 317.155 333.585 317.155 cv
332.476 317.155 331.578 316.246 331.578 315.127 cv
331.578 314.008 332.476 313.1 333.585 313.1 cv
334.694 313.1 335.593 314.008 335.593 315.127 cv
338.163 316.587 mo
338.163 317.705 337.263 318.614 336.155 318.614 cv
335.047 318.614 334.147 317.705 334.147 316.587 cv
334.147 315.467 335.047 314.559 336.155 314.559 cv
337.263 314.559 338.163 315.467 338.163 316.587 cv
340.893 317.398 mo
340.893 318.516 339.994 319.425 338.885 319.425 cv
337.777 319.425 336.878 318.516 336.878 317.398 cv
336.878 316.278 337.777 315.37 338.885 315.37 cv
339.994 315.37 340.893 316.278 340.893 317.398 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
343.463 316.911 mo
343.463 318.03 342.564 318.938 341.455 318.938 cv
340.347 318.938 339.448 318.03 339.448 316.911 cv
339.448 315.792 340.347 314.884 341.455 314.884 cv
342.564 314.884 343.463 315.792 343.463 316.911 cv
346.033 318.532 mo
346.033 319.652 345.133 320.56 344.026 320.56 cv
342.917 320.56 342.017 319.652 342.017 318.532 cv
342.017 317.414 342.917 316.505 344.026 316.505 cv
345.133 316.505 346.033 317.414 346.033 318.532 cv
348.603 318.371 mo
348.603 319.49 347.703 320.397 346.595 320.397 cv
345.487 320.397 344.588 319.49 344.588 318.371 cv
344.588 317.251 345.487 316.344 346.595 316.344 cv
347.703 316.344 348.603 317.251 348.603 318.371 cv
351.333 320.154 mo
351.333 321.274 350.434 322.182 349.326 322.182 cv
348.217 322.182 347.318 321.274 347.318 320.154 cv
347.318 319.036 348.217 318.127 349.326 318.127 cv
350.434 318.127 351.333 319.036 351.333 320.154 cv
353.903 319.668 mo
353.903 320.787 353.003 321.696 351.896 321.696 cv
350.787 321.696 349.887 320.787 349.887 319.668 cv
349.887 318.549 350.787 317.641 351.896 317.641 cv
353.003 317.641 353.903 318.549 353.903 319.668 cv
356.473 320.965 mo
356.473 322.085 355.574 322.993 354.465 322.993 cv
353.357 322.993 352.458 322.085 352.458 320.965 cv
352.458 319.847 353.357 318.938 354.465 318.938 cv
355.574 318.938 356.473 319.847 356.473 320.965 cv
359.043 321.614 mo
359.043 322.733 358.144 323.641 357.035 323.641 cv
355.927 323.641 355.028 322.733 355.028 321.614 cv
355.028 320.495 355.927 319.587 357.035 319.587 cv
358.144 319.587 359.043 320.495 359.043 321.614 cv
361.693 322.101 mo
361.693 323.22 360.794 324.128 359.685 324.128 cv
358.578 324.128 357.678 323.22 357.678 322.101 cv
357.678 320.982 358.578 320.074 359.685 320.074 cv
360.794 320.074 361.693 320.982 361.693 322.101 cv
364.182 323.236 mo
364.182 324.355 363.284 325.263 362.175 325.263 cv
361.066 325.263 360.168 324.355 360.168 323.236 cv
360.168 322.117 361.066 321.208 362.175 321.208 cv
363.284 321.208 364.182 322.117 364.182 323.236 cv
366.913 322.263 mo
366.913 323.382 366.014 324.29 364.906 324.29 cv
363.797 324.29 362.898 323.382 362.898 322.263 cv
362.898 321.144 363.797 320.236 364.906 320.236 cv
366.014 320.236 366.913 321.144 366.913 322.263 cv
369.483 324.372 mo
369.483 325.49 368.583 326.399 367.476 326.399 cv
366.367 326.399 365.467 325.49 365.467 324.372 cv
365.467 323.252 366.367 322.344 367.476 322.344 cv
368.583 322.344 369.483 323.252 369.483 324.372 cv
372.052 322.912 mo
372.052 324.031 371.154 324.939 370.045 324.939 cv
368.938 324.939 368.038 324.031 368.038 322.912 cv
368.038 321.793 368.938 320.885 370.045 320.885 cv
371.154 320.885 372.052 321.793 372.052 322.912 cv
374.623 325.506 mo
374.623 326.626 373.723 327.534 372.615 327.534 cv
371.507 327.534 370.607 326.626 370.607 325.506 cv
370.607 324.388 371.507 323.479 372.615 323.479 cv
373.723 323.479 374.623 324.388 374.623 325.506 cv
377.353 324.047 mo
377.353 325.166 376.454 326.074 375.346 326.074 cv
374.237 326.074 373.338 325.166 373.338 324.047 cv
373.338 322.928 374.237 322.019 375.346 322.019 cv
376.454 322.019 377.353 322.928 377.353 324.047 cv
379.924 323.398 mo
379.924 324.517 379.024 325.426 377.915 325.426 cv
376.808 325.426 375.908 324.517 375.908 323.398 cv
375.908 322.28 376.808 321.371 377.915 321.371 cv
379.024 321.371 379.924 322.28 379.924 323.398 cv
382.493 325.994 mo
382.493 327.112 381.593 328.021 380.486 328.021 cv
379.377 328.021 378.478 327.112 378.478 325.994 cv
378.478 324.874 379.377 323.966 380.486 323.966 cv
381.593 323.966 382.493 324.874 382.493 325.994 cv
385.063 326.155 mo
385.063 327.274 384.164 328.182 383.055 328.182 cv
381.947 328.182 381.047 327.274 381.047 326.155 cv
381.047 325.036 381.947 324.128 383.055 324.128 cv
384.164 324.128 385.063 325.036 385.063 326.155 cv
387.794 325.345 mo
387.794 326.464 386.894 327.371 385.786 327.371 cv
384.678 327.371 383.778 326.464 383.778 325.345 cv
383.778 324.225 384.678 323.317 385.786 323.317 cv
386.894 323.317 387.794 324.225 387.794 325.345 cv
390.363 327.453 mo
390.363 328.572 389.464 329.48 388.356 329.48 cv
387.247 329.48 386.348 328.572 386.348 327.453 cv
386.348 326.333 387.247 325.426 388.356 325.426 cv
389.464 325.426 390.363 326.333 390.363 327.453 cv
392.933 327.939 mo
392.933 329.059 392.034 329.967 390.925 329.967 cv
389.818 329.967 388.918 329.059 388.918 327.939 cv
388.918 326.821 389.818 325.912 390.925 325.912 cv
392.034 325.912 392.933 326.821 392.933 327.939 cv
395.503 326.317 mo
395.503 327.437 394.604 328.345 393.495 328.345 cv
392.387 328.345 391.488 327.437 391.488 326.317 cv
391.488 325.199 392.387 324.29 393.495 324.29 cv
394.604 324.29 395.503 325.199 395.503 326.317 cv
398.234 327.128 mo
398.234 328.248 397.335 329.156 396.226 329.156 cv
395.117 329.156 394.219 328.248 394.219 327.128 cv
394.219 326.01 395.117 325.101 396.226 325.101 cv
397.335 325.101 398.234 326.01 398.234 327.128 cv
400.804 328.75 mo
400.804 329.87 399.904 330.778 398.796 330.778 cv
397.688 330.778 396.788 329.87 396.788 328.75 cv
396.788 327.632 397.688 326.723 398.796 326.723 cv
399.904 326.723 400.804 327.632 400.804 328.75 cv
403.373 328.102 mo
403.373 329.22 402.474 330.129 401.366 330.129 cv
400.257 330.129 399.358 329.22 399.358 328.102 cv
399.358 326.983 400.257 326.074 401.366 326.074 cv
402.474 326.074 403.373 326.983 403.373 328.102 cv
405.943 327.453 mo
405.943 328.572 405.044 329.48 403.936 329.48 cv
402.827 329.48 401.927 328.572 401.927 327.453 cv
401.927 326.333 402.827 325.426 403.936 325.426 cv
405.044 325.426 405.943 326.333 405.943 327.453 cv
408.674 327.291 mo
408.674 328.409 407.774 329.318 406.667 329.318 cv
405.558 329.318 404.658 328.409 404.658 327.291 cv
404.658 326.172 405.558 325.263 406.667 325.263 cv
407.774 325.263 408.674 326.172 408.674 327.291 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
411.243 329.075 mo
411.243 330.194 410.344 331.102 409.236 331.102 cv
408.128 331.102 407.228 330.194 407.228 329.075 cv
407.228 327.955 408.128 327.048 409.236 327.048 cv
410.344 327.048 411.243 327.955 411.243 329.075 cv
307.003 301.341 mo
307.003 302.46 306.104 303.368 304.995 303.368 cv
303.887 303.368 302.988 302.46 302.988 301.341 cv
302.988 300.222 303.887 299.314 304.995 299.314 cv
306.104 299.314 307.003 300.222 307.003 301.341 cv
309.573 308.153 mo
309.573 309.272 308.673 310.181 307.566 310.181 cv
306.457 310.181 305.557 309.272 305.557 308.153 cv
305.557 307.034 306.457 306.126 307.566 306.126 cv
308.673 306.126 309.573 307.034 309.573 308.153 cv
312.142 314.64 mo
312.142 315.76 311.243 316.667 310.135 316.667 cv
309.026 316.667 308.127 315.76 308.127 314.64 cv
308.127 313.521 309.026 312.613 310.135 312.613 cv
311.243 312.613 312.142 313.521 312.142 314.64 cv
314.713 322.263 mo
314.713 323.382 313.813 324.29 312.705 324.29 cv
311.596 324.29 310.697 323.382 310.697 322.263 cv
310.697 321.144 311.596 320.236 312.705 320.236 cv
313.813 320.236 314.713 321.144 314.713 322.263 cv
317.283 328.913 mo
317.283 330.031 316.383 330.94 315.274 330.94 cv
314.167 330.94 313.267 330.031 313.267 328.913 cv
313.267 327.793 314.167 326.885 315.274 326.885 cv
316.383 326.885 317.283 327.793 317.283 328.913 cv
320.013 334.102 mo
320.013 335.222 319.114 336.13 318.005 336.13 cv
316.897 336.13 315.998 335.222 315.998 334.102 cv
315.998 332.983 316.897 332.075 318.005 332.075 cv
319.114 332.075 320.013 332.983 320.013 334.102 cv
322.583 342.86 mo
322.583 343.979 321.683 344.888 320.575 344.888 cv
319.467 344.888 318.567 343.979 318.567 342.86 cv
318.567 341.741 319.467 340.833 320.575 340.833 cv
321.683 340.833 322.583 341.741 322.583 342.86 cv
325.153 349.023 mo
325.153 350.142 324.253 351.051 323.145 351.051 cv
322.037 351.051 321.137 350.142 321.137 349.023 cv
321.137 347.905 322.037 346.996 323.145 346.996 cv
324.253 346.996 325.153 347.905 325.153 349.023 cv
327.722 356.808 mo
327.722 357.927 326.823 358.835 325.715 358.835 cv
324.606 358.835 323.707 357.927 323.707 356.808 cv
323.707 355.689 324.606 354.781 325.715 354.781 cv
326.823 354.781 327.722 355.689 327.722 356.808 cv
330.453 365.079 mo
330.453 366.199 329.553 367.106 328.446 367.106 cv
327.337 367.106 326.438 366.199 326.438 365.079 cv
326.438 363.96 327.337 363.052 328.446 363.052 cv
329.553 363.052 330.453 363.96 330.453 365.079 cv
333.023 368.809 mo
333.023 369.929 332.123 370.836 331.015 370.836 cv
329.907 370.836 329.007 369.929 329.007 368.809 cv
329.007 367.69 329.907 366.783 331.015 366.783 cv
332.123 366.783 333.023 367.69 333.023 368.809 cv
335.593 377.73 mo
335.593 378.848 334.694 379.757 333.585 379.757 cv
332.476 379.757 331.578 378.848 331.578 377.73 cv
331.578 376.611 332.476 375.702 333.585 375.702 cv
334.694 375.702 335.593 376.611 335.593 377.73 cv
338.163 382.433 mo
338.163 383.552 337.263 384.46 336.155 384.46 cv
335.047 384.46 334.147 383.552 334.147 382.433 cv
334.147 381.313 335.047 380.405 336.155 380.405 cv
337.263 380.405 338.163 381.313 338.163 382.433 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
304.975 301.389 mo
307.541 308.316 li
310.162 315.299 li
312.783 322.224 li
315.348 329.095 li
317.969 335.965 li
323.212 349.593 li
325.778 356.407 li
328.398 363.109 li
331.019 369.866 li
333.585 376.567 li
336.206 383.212 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
304.975 516.168 mo
304.975 416.944 li
409.209 416.944 li
409.209 516.168 li
304.975 516.168 li
1 gry
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
304.975 416.944 mo
409.209 416.944 li
304.975 516.168 mo
409.209 516.168 li
409.209 516.168 mo
409.209 416.944 li
304.975 516.168 mo
304.975 416.944 li
304.975 516.168 mo
409.209 516.168 li
304.975 516.168 mo
304.975 416.944 li
304.975 516.168 mo
304.975 515.099 li
304.975 416.944 mo
304.975 417.958 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
303.126 524.347 mo
(0)sh
8 setflat
331.019 516.168 mo
331.019 515.099 li
331.019 416.944 mo
331.019 417.958 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
329.17 524.347 mo
(5)sh
8 setflat
357.064 516.168 mo
357.064 515.099 li
357.064 416.944 mo
357.064 417.958 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
353.374 524.347 mo
(10)
[3.72086 0 ]xsh
8 setflat
383.109 516.168 mo
383.109 515.099 li
383.109 416.944 mo
383.109 417.958 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
379.418 524.347 mo
(15)
[3.72086 0 ]xsh
8 setflat
409.209 516.168 mo
409.209 515.099 li
409.209 416.944 mo
409.209 417.958 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
405.517 524.347 mo
(20)
[3.72086 0 ]xsh
8 setflat
304.975 516.168 mo
305.979 516.168 li
409.209 516.168 mo
408.149 516.168 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
296.769 518.659 mo
(-1)
[2.22845 0 ]xsh
8 setflat
304.975 499.612 mo
305.979 499.612 li
409.209 499.612 mo
408.149 499.612 li
304.975 483.057 mo
305.979 483.057 li
409.209 483.057 mo
408.149 483.057 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
299.334 485.549 mo
(0)sh
8 setflat
304.975 466.556 mo
305.979 466.556 li
409.209 466.556 mo
408.149 466.556 li
304.975 450 mo
305.979 450 li
409.209 450 mo
408.149 450 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
299.334 452.494 mo
(1)sh
8 setflat
304.975 433.444 mo
305.979 433.444 li
409.209 433.444 mo
408.149 433.444 li
304.975 416.944 mo
305.979 416.944 li
409.209 416.944 mo
408.149 416.944 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
299.334 419.44 mo
(2)sh
8 setflat
304.975 416.944 mo
409.209 416.944 li
304.975 516.168 mo
409.209 516.168 li
409.209 516.168 mo
409.209 416.944 li
304.975 516.168 mo
304.975 416.944 li
307.003 483.013 mo
307.003 484.133 306.104 485.04 304.995 485.04 cv
303.887 485.04 302.988 484.133 302.988 483.013 cv
302.988 481.894 303.887 480.986 304.995 480.986 cv
306.104 480.986 307.003 481.894 307.003 483.013 cv
309.573 485.608 mo
309.573 486.727 308.673 487.636 307.566 487.636 cv
306.457 487.636 305.557 486.727 305.557 485.608 cv
305.557 484.49 306.457 483.581 307.566 483.581 cv
308.673 483.581 309.573 484.49 309.573 485.608 cv
312.142 490.636 mo
312.142 491.755 311.243 492.663 310.135 492.663 cv
309.026 492.663 308.127 491.755 308.127 490.636 cv
308.127 489.517 309.026 488.609 310.135 488.609 cv
311.243 488.609 312.142 489.517 312.142 490.636 cv
314.713 493.879 mo
314.713 494.999 313.813 495.907 312.705 495.907 cv
311.596 495.907 310.697 494.999 310.697 493.879 cv
310.697 492.761 311.596 491.852 312.705 491.852 cv
313.813 491.852 314.713 492.761 314.713 493.879 cv
317.283 496.312 mo
317.283 497.432 316.383 498.34 315.274 498.34 cv
314.167 498.34 313.267 497.432 313.267 496.312 cv
313.267 495.194 314.167 494.285 315.274 494.285 cv
316.383 494.285 317.283 495.194 317.283 496.312 cv
320.013 499.394 mo
320.013 500.513 319.114 501.421 318.005 501.421 cv
316.897 501.421 315.998 500.513 315.998 499.394 cv
315.998 498.275 316.897 497.366 318.005 497.366 cv
319.114 497.366 320.013 498.275 320.013 499.394 cv
322.583 498.096 mo
322.583 499.215 321.683 500.124 320.575 500.124 cv
319.467 500.124 318.567 499.215 318.567 498.096 cv
318.567 496.977 319.467 496.069 320.575 496.069 cv
321.683 496.069 322.583 496.977 322.583 498.096 cv
325.153 503.935 mo
325.153 505.054 324.253 505.962 323.145 505.962 cv
322.037 505.962 321.137 505.054 321.137 503.935 cv
321.137 502.816 322.037 501.907 323.145 501.907 cv
324.253 501.907 325.153 502.816 325.153 503.935 cv
327.722 502.8 mo
327.722 503.918 326.823 504.827 325.715 504.827 cv
324.606 504.827 323.707 503.918 323.707 502.8 cv
323.707 501.68 324.606 500.773 325.715 500.773 cv
326.823 500.773 327.722 501.68 327.722 502.8 cv
330.453 505.233 mo
330.453 506.351 329.553 507.26 328.446 507.26 cv
327.337 507.26 326.438 506.351 326.438 505.233 cv
326.438 504.113 327.337 503.205 328.446 503.205 cv
329.553 503.205 330.453 504.113 330.453 505.233 cv
333.023 504.746 mo
333.023 505.865 332.123 506.773 331.015 506.773 cv
329.907 506.773 329.007 505.865 329.007 504.746 cv
329.007 503.627 329.907 502.718 331.015 502.718 cv
332.123 502.718 333.023 503.627 333.023 504.746 cv
335.593 507.178 mo
335.593 508.298 334.694 509.206 333.585 509.206 cv
332.476 509.206 331.578 508.298 331.578 507.178 cv
331.578 506.06 332.476 505.151 333.585 505.151 cv
334.694 505.151 335.593 506.06 335.593 507.178 cv
338.163 501.827 mo
338.163 502.946 337.263 503.854 336.155 503.854 cv
335.047 503.854 334.147 502.946 334.147 501.827 cv
334.147 500.708 335.047 499.799 336.155 499.799 cv
337.263 499.799 338.163 500.708 338.163 501.827 cv
340.893 505.557 mo
340.893 506.676 339.994 507.584 338.885 507.584 cv
337.777 507.584 336.878 506.676 336.878 505.557 cv
336.878 504.438 337.777 503.529 338.885 503.529 cv
339.994 503.529 340.893 504.438 340.893 505.557 cv
343.463 501.989 mo
343.463 503.107 342.564 504.016 341.455 504.016 cv
340.347 504.016 339.448 503.107 339.448 501.989 cv
339.448 500.869 340.347 499.962 341.455 499.962 cv
342.564 499.962 343.463 500.869 343.463 501.989 cv
346.033 501.34 mo
346.033 502.459 345.133 503.368 344.026 503.368 cv
342.917 503.368 342.017 502.459 342.017 501.34 cv
342.017 500.221 342.917 499.313 344.026 499.313 cv
345.133 499.313 346.033 500.221 346.033 501.34 cv
348.603 502.313 mo
348.603 503.432 347.703 504.34 346.595 504.34 cv
345.487 504.34 344.588 503.432 344.588 502.313 cv
344.588 501.194 345.487 500.286 346.595 500.286 cv
347.703 500.286 348.603 501.194 348.603 502.313 cv
351.333 497.772 mo
351.333 498.891 350.434 499.799 349.326 499.799 cv
348.217 499.799 347.318 498.891 347.318 497.772 cv
347.318 496.653 348.217 495.744 349.326 495.744 cv
350.434 495.744 351.333 496.653 351.333 497.772 cv
353.903 497.286 mo
353.903 498.404 353.003 499.313 351.896 499.313 cv
350.787 499.313 349.887 498.404 349.887 497.286 cv
349.887 496.166 350.787 495.258 351.896 495.258 cv
353.003 495.258 353.903 496.166 353.903 497.286 cv
356.473 494.529 mo
356.473 495.647 355.574 496.555 354.465 496.555 cv
353.357 496.555 352.458 495.647 352.458 494.529 cv
352.458 493.409 353.357 492.501 354.465 492.501 cv
355.574 492.501 356.473 493.409 356.473 494.529 cv
359.043 492.42 mo
359.043 493.539 358.144 494.447 357.035 494.447 cv
355.927 494.447 355.028 493.539 355.028 492.42 cv
355.028 491.301 355.927 490.392 357.035 490.392 cv
358.144 490.392 359.043 491.301 359.043 492.42 cv
361.693 493.068 mo
361.693 494.188 360.794 495.096 359.685 495.096 cv
358.578 495.096 357.678 494.188 357.678 493.068 cv
357.678 491.95 358.578 491.041 359.685 491.041 cv
360.794 491.041 361.693 491.95 361.693 493.068 cv
364.182 489.014 mo
364.182 490.133 363.284 491.041 362.175 491.041 cv
361.066 491.041 360.168 490.133 360.168 489.014 cv
360.168 487.895 361.066 486.987 362.175 486.987 cv
363.284 486.987 364.182 487.895 364.182 489.014 cv
366.913 482.527 mo
366.913 483.645 366.014 484.554 364.906 484.554 cv
363.797 484.554 362.898 483.645 362.898 482.527 cv
362.898 481.408 363.797 480.499 364.906 480.499 cv
366.014 480.499 366.913 481.408 366.913 482.527 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
369.483 480.094 mo
369.483 481.214 368.583 482.121 367.476 482.121 cv
366.367 482.121 365.467 481.214 365.467 480.094 cv
365.467 478.975 366.367 478.067 367.476 478.067 cv
368.583 478.067 369.483 478.975 369.483 480.094 cv
372.052 475.715 mo
372.052 476.834 371.154 477.743 370.045 477.743 cv
368.938 477.743 368.038 476.834 368.038 475.715 cv
368.038 474.596 368.938 473.688 370.045 473.688 cv
371.154 473.688 372.052 474.596 372.052 475.715 cv
374.623 473.12 mo
374.623 474.24 373.723 475.147 372.615 475.147 cv
371.507 475.147 370.607 474.24 370.607 473.12 cv
370.607 472.001 371.507 471.093 372.615 471.093 cv
373.723 471.093 374.623 472.001 374.623 473.12 cv
377.353 469.39 mo
377.353 470.509 376.454 471.417 375.346 471.417 cv
374.237 471.417 373.338 470.509 373.338 469.39 cv
373.338 468.27 374.237 467.363 375.346 467.363 cv
376.454 467.363 377.353 468.27 377.353 469.39 cv
379.924 474.417 mo
379.924 475.537 379.024 476.445 377.915 476.445 cv
376.808 476.445 375.908 475.537 375.908 474.417 cv
375.908 473.299 376.808 472.391 377.915 472.391 cv
379.024 472.391 379.924 473.299 379.924 474.417 cv
382.493 466.471 mo
382.493 467.59 381.593 468.498 380.486 468.498 cv
379.377 468.498 378.478 467.59 378.478 466.471 cv
378.478 465.351 379.377 464.444 380.486 464.444 cv
381.593 464.444 382.493 465.351 382.493 466.471 cv
385.063 462.741 mo
385.063 463.86 384.164 464.767 383.055 464.767 cv
381.947 464.767 381.047 463.86 381.047 462.741 cv
381.047 461.621 381.947 460.714 383.055 460.714 cv
384.164 460.714 385.063 461.621 385.063 462.741 cv
387.794 455.929 mo
387.794 457.048 386.894 457.956 385.786 457.956 cv
384.678 457.956 383.778 457.048 383.778 455.929 cv
383.778 454.81 384.678 453.901 385.786 453.901 cv
386.894 453.901 387.794 454.81 387.794 455.929 cv
390.363 446.684 mo
390.363 447.804 389.464 448.712 388.356 448.712 cv
387.247 448.712 386.348 447.804 386.348 446.684 cv
386.348 445.566 387.247 444.657 388.356 444.657 cv
389.464 444.657 390.363 445.566 390.363 446.684 cv
392.933 452.361 mo
392.933 453.479 392.034 454.388 390.925 454.388 cv
389.818 454.388 388.918 453.479 388.918 452.361 cv
388.918 451.241 389.818 450.333 390.925 450.333 cv
392.034 450.333 392.933 451.241 392.933 452.361 cv
395.503 444.9 mo
395.503 446.019 394.604 446.927 393.495 446.927 cv
392.387 446.927 391.488 446.019 391.488 444.9 cv
391.488 443.781 392.387 442.873 393.495 442.873 cv
394.604 442.873 395.503 443.781 395.503 444.9 cv
398.234 442.468 mo
398.234 443.587 397.335 444.495 396.226 444.495 cv
395.117 444.495 394.219 443.587 394.219 442.468 cv
394.219 441.348 395.117 440.441 396.226 440.441 cv
397.335 440.441 398.234 441.348 398.234 442.468 cv
400.804 434.521 mo
400.804 435.639 399.904 436.548 398.796 436.548 cv
397.688 436.548 396.788 435.639 396.788 434.521 cv
396.788 433.401 397.688 432.493 398.796 432.493 cv
399.904 432.493 400.804 433.401 400.804 434.521 cv
403.373 437.44 mo
403.373 438.559 402.474 439.467 401.366 439.467 cv
400.257 439.467 399.358 438.559 399.358 437.44 cv
399.358 436.321 400.257 435.412 401.366 435.412 cv
402.474 435.412 403.373 436.321 403.373 437.44 cv
405.943 433.872 mo
405.943 434.991 405.044 435.9 403.936 435.9 cv
402.827 435.9 401.927 434.991 401.927 433.872 cv
401.927 432.753 402.827 431.845 403.936 431.845 cv
405.044 431.845 405.943 432.753 405.943 433.872 cv
408.674 421.708 mo
408.674 422.827 407.774 423.735 406.667 423.735 cv
405.558 423.735 404.658 422.827 404.658 421.708 cv
404.658 420.589 405.558 419.681 406.667 419.681 cv
407.774 419.681 408.674 420.589 408.674 421.708 cv
411.243 420.897 mo
411.243 422.016 410.344 422.924 409.236 422.924 cv
408.128 422.924 407.228 422.016 407.228 420.897 cv
407.228 419.778 408.128 418.87 409.236 418.87 cv
410.344 418.87 411.243 419.778 411.243 420.897 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
304.967 516.238 mo
409.254 516.238 li
409.254 416.962 li
304.967 416.962 li
cp
clp
304.975 483.057 mo
307.541 487.561 li
310.162 491.503 li
312.783 494.826 li
315.348 497.698 li
317.969 500.006 li
320.591 501.865 li
323.212 503.329 li
325.778 504.342 li
328.398 505.019 li
331.019 505.3 li
333.585 505.244 li
336.206 504.906 li
338.828 504.23 li
341.449 503.273 li
344.014 502.09 li
346.635 500.626 li
349.256 498.993 li
351.878 497.078 li
354.443 494.995 li
357.064 492.685 li
359.685 490.207 li
362.251 487.618 li
364.872 484.802 li
367.493 481.874 li
370.115 478.777 li
372.679 475.566 li
375.301 472.244 li
377.922 468.753 li
380.544 465.204 li
383.109 461.545 li
385.73 457.771 li
388.351 453.942 li
390.917 450 li
393.538 446.002 li
396.159 441.947 li
398.781 437.78 li
401.345 433.556 li
406.588 424.996 li
409.209 420.604 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
304.975 483.057 mo
409.209 483.057 li
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
304.975 253.973 mo
304.975 154.749 li
409.209 154.749 li
409.209 253.973 li
304.975 253.973 li
1 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
304.975 154.748 mo
409.209 154.748 li
304.975 253.973 mo
409.209 253.973 li
409.209 253.973 mo
409.209 154.748 li
304.975 253.973 mo
304.975 154.748 li
304.975 253.973 mo
409.209 253.973 li
304.975 253.973 mo
304.975 154.748 li
304.975 253.973 mo
304.975 252.902 li
304.975 154.748 mo
304.975 155.762 li
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
303.126 262.164 mo
(0)sh
8 setflat
331.019 253.973 mo
331.019 252.902 li
331.019 154.748 mo
331.019 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
329.17 262.164 mo
(5)sh
8 setflat
357.064 253.973 mo
357.064 252.902 li
357.064 154.748 mo
357.064 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
353.374 262.164 mo
(10)
[3.72086 0 ]xsh
8 setflat
383.109 253.973 mo
383.109 252.902 li
383.109 154.748 mo
383.109 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
379.418 262.164 mo
(15)
[3.72086 0 ]xsh
8 setflat
409.209 253.973 mo
409.209 252.902 li
409.209 154.748 mo
409.209 155.762 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
405.517 262.164 mo
(20)
[3.72086 0 ]xsh
8 setflat
304.975 253.973 mo
305.979 253.973 li
409.209 253.973 mo
408.149 253.973 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
293.032 256.477 mo
(-20)
[2.22845 3.72086 0 ]xsh
8 setflat
304.975 239.781 mo
305.979 239.781 li
409.209 239.781 mo
408.149 239.781 li
304.975 225.591 mo
305.979 225.591 li
409.209 225.591 mo
408.149 225.591 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
299.334 228.096 mo
(0)sh
8 setflat
304.975 211.4 mo
305.979 211.4 li
409.209 211.4 mo
408.149 211.4 li
304.975 197.265 mo
305.979 197.265 li
409.209 197.265 mo
408.149 197.265 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
295.598 199.772 mo
(20)
[3.72086 0 ]xsh
8 setflat
304.975 183.074 mo
305.979 183.074 li
409.209 183.074 mo
408.149 183.074 li
304.975 168.883 mo
305.979 168.883 li
409.209 168.883 mo
408.149 168.883 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
295.598 171.391 mo
(40)
[3.72086 0 ]xsh
8 setflat
304.975 154.748 mo
305.979 154.748 li
409.209 154.748 mo
408.149 154.748 li
304.975 154.748 mo
409.209 154.748 li
304.975 253.973 mo
409.209 253.973 li
409.209 253.973 mo
409.209 154.748 li
304.975 253.973 mo
304.975 154.748 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
304.967 254.055 mo
409.254 254.055 li
409.254 154.779 li
304.967 154.779 li
cp
clp
304.975 225.591 mo
310.162 232.799 li
315.348 238.092 li
320.591 241.697 li
325.778 243.836 li
331.019 244.625 li
336.206 244.286 li
341.449 242.935 li
346.635 240.683 li
351.878 237.586 li
357.064 233.868 li
362.251 229.476 li
367.493 224.577 li
372.679 219.171 li
377.922 213.314 li
383.109 207.12 li
388.351 200.643 li
393.538 193.83 li
398.781 186.791 li
403.967 179.526 li
409.209 172.036 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
304.975 225.591 mo
310.162 228.857 li
315.348 230.378 li
320.591 230.49 li
325.778 229.251 li
331.019 226.885 li
336.206 223.563 li
341.449 219.396 li
346.635 214.497 li
351.878 208.922 li
357.064 202.784 li
362.251 196.138 li
367.493 189.099 li
372.679 181.722 li
377.922 173.951 li
383.109 165.954 li
388.351 157.733 li
390.192 154.749 li
[1.681 1.681 ] 0 dsh
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
304.975 225.591 mo
409.209 225.591 li
304.975 225.591 mo
310.162 246.877 li
357.064 218.495 li
409.209 215.68 li
0.42 lw
[] 0 dsh
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
307.003 225.629 mo
307.003 226.748 306.104 227.656 304.995 227.656 cv
303.887 227.656 302.988 226.748 302.988 225.629 cv
302.988 224.51 303.887 223.601 304.995 223.601 cv
306.104 223.601 307.003 224.51 307.003 225.629 cv
0.11 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
312.142 246.875 mo
312.142 247.994 311.243 248.902 310.135 248.902 cv
309.026 248.902 308.127 247.994 308.127 246.875 cv
308.127 245.755 309.026 244.848 310.135 244.848 cv
311.243 244.848 312.142 245.755 312.142 246.875 cv
359.043 218.492 mo
359.043 219.612 358.144 220.52 357.035 220.52 cv
355.927 220.52 355.028 219.612 355.028 218.492 cv
355.028 217.374 355.927 216.466 357.035 216.466 cv
358.144 216.466 359.043 217.374 359.043 218.492 cv
411.243 215.736 mo
411.243 216.854 410.344 217.763 409.236 217.763 cv
408.128 217.763 407.228 216.854 407.228 215.736 cv
407.228 214.617 408.128 213.708 409.236 213.708 cv
410.344 213.708 411.243 214.617 411.243 215.736 cv
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
8 setflat
gsave
304.967 254.055 mo
409.254 254.055 li
409.254 154.779 li
304.967 154.779 li
cp
clp
304.975 225.591 mo
310.162 232.687 li
315.348 229.871 li
357.064 204.361 li
409.209 201.489 li
[1.681 1.681 ] 0 dsh
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
grestore
1 setflat
8 setflat
307.003 225.629 mo
307.003 226.748 306.104 227.656 304.995 227.656 cv
303.887 227.656 302.988 226.748 302.988 225.629 cv
302.988 224.51 303.887 223.601 304.995 223.601 cv
306.104 223.601 307.003 224.51 307.003 225.629 cv
312.142 232.765 mo
312.142 233.885 311.243 234.792 310.135 234.792 cv
309.026 234.792 308.127 233.885 308.127 232.765 cv
308.127 231.646 309.026 230.737 310.135 230.737 cv
311.243 230.737 312.142 231.646 312.142 232.765 cv
317.283 229.846 mo
317.283 230.964 316.383 231.873 315.274 231.873 cv
314.167 231.873 313.267 230.964 313.267 229.846 cv
313.267 228.726 314.167 227.818 315.274 227.818 cv
316.383 227.818 317.283 228.726 317.283 229.846 cv
359.043 204.383 mo
359.043 205.502 358.144 206.411 357.035 206.411 cv
355.927 206.411 355.028 205.502 355.028 204.383 cv
355.028 203.264 355.927 202.356 357.035 202.356 cv
358.144 202.356 359.043 203.264 359.043 204.383 cv
411.243 201.464 mo
411.243 202.583 410.344 203.491 409.236 203.491 cv
408.128 203.491 407.228 202.583 407.228 201.464 cv
407.228 200.345 408.128 199.437 409.236 199.437 cv
410.344 199.437 411.243 200.345 411.243 201.464 cv
214.293 154.861 mo
214.293 254.198 li
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/percent <1C60D8A8C9B59F8594089738AF9DF465F54C6E2E73D734CAE89F38
29C655870E5044D20DDF1C15426538D8756B98CCE5D961A3A5C080C9710FFF37
CA3959F6BD60F3A50AAEB0FA2B9533548A9525919BAF73CC58A05138B3772BD8
00A6DCE98B830406AD34A7385A06E8341B3E730BDDEC04AA5E3856EB49972689
3CCA542A61661EC0A8560829E2A9EA2E6C1F7661B29F647A8BF63EE405DC6C4B
6CE1866AF1D8C0062AED7ABAE59437FA2818FDD8CDA76B> |-
/parenleft <1C60D8A8C9B81F2C36CCD20CF8942181AC7F4474F2382F7D30DE
700E9D560AD8BD19EE22EACC9412684566AC63B0B33E5FC85E602E759FFC49BF
47306AE7BD9165A4E1D3> |-
/parenright <1C60D8A8C9B81F2C36CCD20CF894218194033859F410DA60583
B3351294315C6F5C4ACE205E4813D6F508658462783E35F08D53213E9F0ED798
4671681D402251A6FDC72> |-
/comma <1C60D8A8C9B854D0F84ABF2F32EEB7FA8EED76E620A4479EE0E29CEB
D5D7E6591884C779204CBCAA7D477065F5> |-
/H <1C60D8A8C9B6079F3517E07A2A32EE8D09F795FB6E9F11AE46C75AA31D50
B194B413469264EA3867DFEC1283FAD051B3C6B29B8DCA4E1CF3E914FCD7B445> |-
/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C5
36E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCE
C5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A
13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5
E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B9
32E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73
181F38CB34F1645F> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/f <1C60D8A8C9B854D0A3953AFC308C88F2CB7B77611DE17001C91B65CE86C8
891C39A4DBCDDE1373931B89EF13785E617F99570B386BE99D1A576D0D1701D2
F253DF8B3192240780F3E221EB68A6> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0
AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C
76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-
/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E3044975
4F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F0
11296A017FBEA0AE0137A10664047E> |-
/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D7
2A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706F
E45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC7542
58679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52D
A81BBE025DB4544A719A686DB3A0393D2301EEF9A4AA3D42067FE37BAF> |-
/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA56325
4EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB07
74B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC
2BE2D98ABE47C6EE8D76> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF322792C3BF0D38904A73F4440F6D92D5F5AE09CC018066
468E681543C8F047ACFD615B747546B5480444F746C2E0CD698A8961C13AF2BF
3940EE05278AAEFC066B11F108A32A247BB7A1777E1A71A35D0F71427779DCE4
A1F61E27FEB716A84B084E0A293D7F37477EB4DB407CE06D6E55EF820764AC64
86> |-
/r <1C60D8A8C9B81F2C6DADD03096566F18A44C12756941A411C99A198CC8D4
3303483F8D4425C8C61A6016070C9755F215C6103A7B22F8F2C0462F4082ABD3
D08AED77838B7C426C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBE961C83BECBAF3
B4E5B0884D0E51EEB661AACE85886254728F5E34D401120D0E6C2B208B0A6EFE
EA993E281F58443FA8AF570296DB9AE2B0FD959762404D9D39D028E903103EBA
C5E167D6A6970865F2360877231B6B2635F07AB03FB78405FFC01711DD4ECCBE
59E46BB3AA7E7E004FCD7D8551926A4D9FE5600A8EF27E924599C5> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/x <1C60D8A8C9B7A73DEE9439F61CF83FD6F0AADDB8373458EFEDE4BF6C4615
5F8370F02E9CE5FFD24DBE7D153354FABD4F844978ABB054761731A2B93E507F
E62552012BB1EB5E1E3EE678332D9E> |-
/y <1C60D8A8C9B7A73DB586573D0157E99900164D3426B7076627BC2EECA012
86D768DC747555489A92E6150F2562090A782510749223A2D01B0EE6374EEA8F
B8F18250484D2C6B565CDCA8D95B100B7B1E0289ED25E0E350438F56B28A332A
DDF034CB8EDC264C3ABAA85278C66F3E4B6419> |-
/z <1C60D8A8C9B7A73DC507CAD0E4E88F6FB9C94CACABF910769E2577196AAA
10B49DA01B4D69E59659AA04AF6A1B6969B2FA2F58> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 72 /H put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 18{/.notdef}rp /H 24{/.notdef}rp /a /.notdef /c /.notdef 
/e /f /g /h /i 3{/.notdef}rp /m /n 
/o /p /.notdef /r /s /t 3{/.notdef}rp /x 
/y /z 133{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
211.555 168.069 mo
( )sh
223.378 244.483 mo
( )sh
194.88 233.333 mo
( )sh
200.067 268.471 mo
(time, t \(ms\)postsynaptic firing rate, x \(Hz\))
[1.86043 1.48567 5.57455 3.72086 1.86043 1.86044 1.86043 1.86043 2.22845 5.57455 3.3461 83.54 
3.72089 3.72086 3.3461 1.86041 3.34613 3.34607 3.72089 3.72086 3.72086 1.86041 1.48569 3.3461 
1.86041 1.86044 1.48569 2.22845 1.48566 3.72086 3.72086 1.86044 2.22845 3.72086 1.86041 3.72089 
1.86041 1.86044 3.3461 1.86041 2.22845 4.83179 3.3461 0 ]xsh
313.915 531.521 mo
(postsynaptic firing rate, x \(Hz\))
[3.72086 3.72086 3.3461 1.86044 3.3461 3.3461 3.72086 3.72086 3.72089 1.86041 1.48569 3.3461 
1.86041 1.86044 1.48566 2.22845 1.48569 3.72086 3.72086 1.86044 2.22845 3.72086 1.86041 3.72086 
1.86044 1.86044 3.3461 1.86041 2.22845 4.83179 3.3461 0 ]xsh
152.966 392.546 mo
(-100-50050100)
[2.22845 3.72086 3.72087 18.2697 2.22845 3.72086 25.8386 24.2037 3.72086 20.4828 3.72086 3.72086 
0 ]xsh
200.313 398.852 mo
(time, t \(ms\))
[1.86043 1.48567 5.57455 3.72086 1.86044 1.86043 1.86043 1.86043 2.22845 5.57455 3.3461 0 
]xsh
152.631 523.637 mo
(-100-50050100)
[2.22845 3.72086 3.72087 18.2697 2.22845 3.72086 25.8386 24.2037 3.72086 20.4828 3.72086 3.72086 
0 ]xsh
199.979 529.944 mo
(time, t \(ms\))
[1.86043 1.48567 5.57455 3.72086 1.86043 1.86044 1.86043 1.86043 2.22845 5.57455 3.3461 0 
]xsh
DYLDUR+Helvetica*1 [0 -6.7573 -6.6922 0 0 0 ]msf
292.342 236.593 mo
(synaptic change, %)
[-3.37866 -3.37866 -3.75702 -3.75708 -3.75702 -1.87854 -1.50012 -3.37866 -1.87854 -3.37866 -3.75702 -3.75708 
-3.75708 -3.75702 -3.75708 -1.87854 -1.87848 0 ]ysh
148.054 235.769 mo
(synaptic change, %)
[-3.37866 -3.37866 -3.75702 -3.75708 -3.75702 -1.87854 -1.50012 -3.37866 -1.87854 -3.37866 -3.75702 -3.75708 
-3.75708 -3.75702 -3.75708 -1.87854 -1.87848 0 ]ysh
294.614 364.496 mo
(synaptic change, %)
[-3.37866 -3.37863 -3.75705 -3.75708 -3.75705 -1.87854 -1.50012 -3.37863 -1.87854 -3.37863 -3.75708 -3.75705 
-3.75705 -3.75705 -3.75708 -1.87851 -1.87854 0 ]ysh
297.291 500.994 mo
(synaptic change, %)
[-3.37866 -3.37863 -3.75705 -3.75708 -3.75705 -1.87854 -1.50012 -3.37863 -1.87854 -3.37863 -3.75708 -3.75705 
-3.75705 -3.75705 -3.75708 -1.87851 -1.87854 0 ]ysh
304.975 302.403 mo
394.932 384.451 li
304.975 301.389 mo
322.319 314.06 358.57 325.209 408.763 328.588 cv
0.841 lw
4 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
182.797 178.738 mo
205.217 178.738 li
182.797 190.057 mo
205.217 190.057 li
0.42 lw
0 lj
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
185.851 175.612 mo
185.851 181.863 li
199.905 186.932 mo
199.905 193.182 li
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
171.123 179.95 mo
(pre)
[3.72086 2.22845 0 ]xsh
168.78 192.282 mo
(post)
[3.72086 3.72087 3.3461 0 ]xsh
188.235 186.297 mo
197.688 186.297 li
0.42 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
199.197 186.327 mo
198.484 186.594 197.6 187.05 197.052 187.532 cv
197.483 186.327 li
197.052 185.123 li
197.6 185.605 198.484 186.061 199.197 186.327 cv
f
186.715 186.327 mo
187.428 186.061 188.312 185.605 188.86 185.122 cv
188.428 186.327 li
188.86 187.532 li
188.312 187.05 187.428 186.594 186.715 186.327 cv
f
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
192.036 185.018 mo
(t)sh
309.64 448.99 mo
312.811 448.99 li
312.811 445.973 li
309.64 445.973 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 138.316 291.935 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
315.775 457.218 mo
319.267 457.218 li
319.267 437.225 li
315.775 437.225 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.7923 0 0 61.7855 157.277 266.509 ]ct
<<
/T 1
/W 109 
/H 618 
/M[109 0 0 -618 0 618 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\gg#_Kp#mJmA>$G_D6TP+Ui8cA^C7A%?q`***;!"L7"J-"Xln,PWsd)f6iJ,ttSO8q;"2uj2P
_LMX^bSE)YT"uZd#df\C6%R/hoS=29s%J-aC(gAj>%^il:$W@hfH.L.NJ$Qd=riV0,S/S-+9DG@$iiNH
W\>o56Kp6*h;Qn2O8oN3YZ@mS$Pj4rJ:cK0&4o<fh'f_dTpH^?6RbR<@cDU%e-H)F[pPeM(u>3R+KoMK
q:R)1eW%tn[Md_07b+p!_K+Cu/5je$hesX*rVS%"_LZEGZn3(<5D%-O2*DsdC/M.?D"CKIGAc*WJ]'It
BVn]cjmZoW\Y'21`uEB7rYV+P2j#63E]RQ#5=64P^Pc=#Z+H))RK,FN=s4$MD\NV0_9Yd%#qcd9g4Z@X
]F9e5b5:?(,S,eEr'M"\o&1jV3tVA+a[;ra5S,[g!NYa\8qFd^1`%+(;;;S;4D[E:*Zsm@_"PFd'TjG(
Lf._0acP!S&BW!5W?+\$$r\XYO0b.:78*hi/g'[)G_SZSjD?]aY$)te.rk1`3B:cK(r/nq,_mF(Z3p[s
b`Z4L%S87s#qf'H*2NQZ&F/pXTuh,VrZmU>F%Xk9m4>qE'[4`R34/%_;+C.G4]>"=78!S>Z[Fu<99k0J
MG=Mso.F):S.SO[Zb#g9f8fd>5YA9Ar4CV2bnC`CDl&o[dBkE6B[\elX$saZ,ojPO8<Qtjdko%\j3">i
2S7bqofmMt[3SCh5)<adf\T\0lV-1+X]6".'2*h(h,jh:JP*Et93PV'75KWi\7Q70^6j!*p=?7GJP>(o
Xtp^NGb'%L_j0fWOPA>]6"3F=2H,i-),r=[f^#DCDd&BcCF<`iI0H-RE5f5!1jT&5Ti*osST&8N_\8hZ
qGPY:6O?2i\nXhiX)DbFNjC*=3lT4DC\j(.`1`N,T<bE-7D6*,4(Onk6Q:d%:i:KH7ss_$U<\R4bGP'/
n+QJX8FUYD$Oh"@:D:G19ck1lEP(mH`H$?;r3N,f]1:)D]]HiQ;EY/Rd6ep!'@V"BY;auaSOZc+FhM7V
f60<4BA"@IVf1=64iSbciefCADg6AbM^Nc=a-5Fj*bHn"q/>_kl$<!SX6?p>`4P:253KE@qqd+GlZcbY
[IJVd:WrEUT/YU"Gi+#&q>J'`OnjI@VrRZ"?cVm>T=b#HciO-]-`I+h)u5%\rWTkl`pTD`]Rg\hha(?j
"e=orF7<nj_8mW#i<1$BN#BPqLe-VHktc<e8ed>B<skIV0SQaF(IK$T%,nQMD[j]*6al:6>8_'k;$nGT
G`#cN*(Fb^iZtp&N`4Zt>)D;!.(0>X'H1tdCMeqZ`CR:?)M:\@jZYB*pr5KB.m[gQM$gVWg='PY3fYO5
SB"1O=lZT.Nol=hZY!<K=`f1Tjdn`Y8Hrkh/;RfA)3;&%)TO+M*b7rJ8=TDjCgPL=GNQn>Q[(VlAGhmC
dYWjEW(q/?3Hp`7<`R:T=A"q6nT$D%=d9d"/LA!#QRfl/`Dc"SV<g]Vo*OV5abJ=-3pM\N<GNm`RYbOr
GFBgXB:Bd=Z6S/SORm0p,C-^jB)1_&;h@W.V/h&53Q7O9k"_)iA:GtQXa>`0=IY`D?Dk>9T-UjO.E<Al
-i%[u`3jS0H4$Jm.[$JN$>5l4)PNnI/Xl<(4jcg_TBNgiOQ=E@OZC"DB.5R+BuZ7+)G6&sR5%EL#*k^h
mS$P7!N%;o]b;*gO"%Y=La9r2S'$%b&qU._-SD*gW\."U\MZpu#sFjeRW+IaLoMlS8s<F^@Oeoq7ONeU
U:2IDC!%iAK[g\Z#0'A6q;A3JNMRe_3_jEmA$.*=#b6e;Ju"5`7jfLoTCsC&C>"M6LZqhQR`^'/!BI80
afpuZZ"&i74fNTs30W(a:JJ[NYGCgX*L,8R9kij<#eZatMa_'t1!2Mp>kjO!^/.Q2S[KiCh4%!I:i+7W
Oei3J'H9ARNH%7k`cflN'Co$;+\3.KJBSU0RUsQ[P;B4daHV<h;@HEW0Voo/>r'$6aLS/sL%=c%_WjN]
@88FD.eTA'Qstq]ALW=d\R"d!<f2H0.V7\>'^PTpLp9Q%"W40P18%FcJJT\eGamWSB7`^(#pk7pP`ddo
7u76j,=HL3&TTX,U:htm\#TLZJcY~>

%%EndBinary
grestore
np
f
326.536 444.417 mo
330.989 444.417 li
330.989 439.647 li
326.536 439.647 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 190.533 306.069 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
331.451 445.779 mo
334.879 445.779 li
334.879 442.275 li
331.451 442.275 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 205.721 301.858 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
8 setflat
319.819 447.398 mo
341.791 447.398 li
341.791 447.106 li
319.819 447.106 li
cp
0 gry
f
319.983 454.627 mo
323.1 454.627 li
323.1 451.683 li
319.983 451.683 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 170.281 274.514 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
323.837 450.514 mo
327.202 450.514 li
327.202 450.288 li
323.837 450.288 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 182.194 287.225 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
328.142 451.813 mo
329.776 451.813 li
329.776 448.114 li
328.142 448.114 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.04974 0 0 11.4299 195.496 283.213 ]ct
<<
/T 1
/W 51 
/H 114 
/M[51 0 0 -114 0 114 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf(__K(s)>e^lki\.!tBa1@B[b9rXAgS7:PZje-H'qHq3-\#o$Q7-#cEX&ZI$f$311OUsY"bdMjs"
c6-&bZs%Z2Sks)73P?&R4e0p!1g4H3Kh\DmWDiYI;PdBh<N7pfeTS9+Vq(-6b6:Ya=KpI12="P>a)&(d
DH@dRU?ca,>-@V#[J'+Z!(1<Fq=FGR#E']MnpFIh!KG(Z0ppl%"9~>

%%EndBinary
grestore
np
f
322.906 456.84 mo
326.334 456.84 li
326.334 453.336 li
322.906 453.336 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 179.315 267.677 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
332.157 454.948 mo
336.258 454.948 li
336.258 450.807 li
332.157 450.807 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 207.905 273.524 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
338.26 454.634 mo
341.432 454.634 li
341.432 451.616 li
338.26 451.616 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 226.767 274.495 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
343.882 449.304 mo
347.983 449.304 li
347.983 445.163 li
343.882 445.163 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 244.139 290.965 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
356.666 444.417 mo
361.12 444.417 li
361.12 439.647 li
356.666 439.647 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 283.649 306.069 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
361.774 444.125 mo
365.138 444.125 li
365.138 443.898 li
361.774 443.898 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 299.432 306.971 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
350.142 447.398 mo
372.114 447.398 li
372.114 447.106 li
350.142 447.106 li
cp
0 gry
f
350.306 454.627 mo
353.423 454.627 li
353.423 451.683 li
350.306 451.683 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 263.993 274.514 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
354.161 450.514 mo
357.525 450.514 li
357.525 450.288 li
354.161 450.288 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 275.905 287.225 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
358.465 451.813 mo
360.099 451.813 li
360.099 448.114 li
358.465 448.114 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.04974 0 0 11.4299 289.208 283.213 ]ct
<<
/T 1
/W 51 
/H 114 
/M[51 0 0 -114 0 114 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf(__K(s)>e^lki\.!tBa1@B[b9rXAgS7:PZje-H'qHq3-\#o$Q7-#cEX&ZI$f$311OUsY"bdMjs"
c6-&bZs%Z2Sks)73P?&R4e0p!1g4H3Kh\DmWDiYI;PdBh<N7pfeTS9+Vq(-6b6:Ya=KpI12="P>a)&(d
DH@dRU?ca,>-@V#[J'+Z!(1<Fq=FGR#E']MnpFIh!KG(Z0ppl%"9~>

%%EndBinary
grestore
np
f
353.422 455.282 mo
356.786 455.282 li
356.786 455.056 li
353.422 455.056 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 273.622 272.49 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
362.448 454.948 mo
366.549 454.948 li
366.549 450.807 li
362.448 450.807 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 301.517 273.524 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
368.584 454.634 mo
371.756 454.634 li
371.756 451.616 li
368.584 451.616 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 320.478 274.495 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
372.599 457.218 mo
376.091 457.218 li
376.091 437.225 li
372.599 437.225 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.7923 0 0 61.7855 332.887 266.509 ]ct
<<
/T 1
/W 109 
/H 618 
/M[109 0 0 -618 0 618 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J05Bkp`pU`s*OeOn9AIh57E1]61G4:i;a+?6!k$#*+fKODuaCpLO]Fqpk6HC15JnTnGE8Rj_s&[:0.Ap
7OIYNF8e0_?q@0_#rLL3.Yp83'%j$1'+:\PjqB4;rb49jc6lVR"EpO>5Zb!C)8,g(=e\e<0M4KWT5L%J
jqWe[>&.K6<pm;P($u#gL;@g$q_f%:!4>:h[[PD=92N=DC6;WK`rcITj(9+/<"ee^RU:-?5R%<>K%"E"
(4A:Y%uGs*[J>%n'-XC1D)'^\D(b&pMV[`D.F.6<]$U")];`fJ@g2pK3"TU*9:pgSE9u5G<m$i1J*qNp
*Tp0*-/\HEr%A1#3U2[qHuf`5_hn&=br%_(f4o9h50s-(lE*kk#k>"@]E6!e87N.O^a^TPL-e^(d0i*t
].1KZ06@bYYHSE!"==R7!rfh?ZWRsQ0LQ'Y^Zn2ge](.4WlRYL]O;"7D<,=7`X3op)9>[.0(U4-.^p;;
;1q4_/$acG)8re5X!Agn]JP5;M`bW)`Y.Q:)9+GK$L#]IUS=\\Ojpi+9o,RER7rbHhUaO3X+`\`dj0i5
]SY/9q+Qrg!0XD4/>GS[F!RAC+Y"3Hjj4XQaI"B_]N\"WF!S^i;tT_0:fMK\re8kN>ldmSF]D-reTHRP
\CP>a9Z,H&c#Hb8Fh<Q=,8Dtj@&#V#<h^hI'VeT('j[;@=_PrMO]iNp<oqi\NE1_.f$%?:>H#e$<SV^S
0L+@A7FK+RdhUV[,;SJ4GG/*7kBP6o2,AW]+T;)&htQ\)Ic*06WX%J(XqQI5fKL+,iMk)o_gqNR,`cE%
[O[;Gp!UI1!-ctUO^mVK8!@Jl/lIQTJ.>/;,M&FYR:\$'B:EMDKr!qpi!+P#V:k!`T4iH!\YEh=\,\X)
H=iG?.B\](V!:MD0r^k8^9+Ej>2gu)#9)4qYj8nB`Nj:INmNSu)`g,7m:^+j\*[Csc$TKk`pLHX)r`;!
n&U7b^$qN[$bs88%ctX)HtEVrn[sVu"EHW&-d)$#^GLn\4L[9MF442Vbk(c?+jT_N(JKR+*8acG`n_[[
lQGW!B^/N0cYSa<I@kf?c<^`cgUeLN$/YD_&fKbT4u6:'H(H+-k]pI;X5&#mc_p1)hX?ZqHer\On,.YO
_s)RJ?a&Je^IQE<qVMP8q>B-Jh>7-n^\.8K?dJNE?W4!Jm^:KT#?^>c/$=!`+kON.%fhWC%"W@`1VkI]
!MCDJK.p-M6)Z"5&,V67n;7Xk7(D9I6^!-WR*S*S"Ugi*.Y[B7(rF3k%@eAlD[jY_[odh0U#?2mXd1*+
R!dUl]L[jU@O&>&Rat[7:2+R%X:TQ^e(SV@M\0g)Zpp;.,4o0"%0<$>&g0bU0as$Mh45-IB[5XSB4hgm
QcE-'aCDh-Nsr$OZGop5$p8s"&cDqhdO<+;iu;LV.RV9i@j<"P%!aU"i5nP7`$CfUEU4"Xai?gtTNn.?
leW>u87sBFN2VN4e\!Mk>.Wg;8<tu&=iCQ^&f03YBi=(t[7.1HAc-S90r\tF[?E>2Em]rs*bDEqI`ds%
NLDU4Buj:q,A+T@RkLdY]j`%ak538j/r<Ofq9(c5Be<:SAp'1qg8QH1\5S8sGq#R90G?22T']BC`oS.(
VsJGs1D)oCl3]op14W0bnpHa6q]f%9&>?,?5UPRG;\L@T:^W5BSWrQ?kkhn`oSP"5"K8.1\lqR<4Zh*7
<he'SL8H?@RA;kTHP.VaOC_92UZhuC*K<=4<=.t9=:\9%ap:ZHVPU/#:mmKpDa\99Q6u5e<@OY\8ElSF
VXu?qCAMO;eVN[koQZ6i4_UV4RGf8,gCI*9E'%&nn5i#_<R5Mb96GEkTp3#g;Sh?T'qW7m['<e1!S'2k
./Qnp<E&740Ju??iRpSE7#f`a3+b_;=<hfg;F.WKG)5#-UNBngeW)J!,ha.-Bk<9<R5T^X`nA7CA'AYG
2O9HUQu`RK%AginG"C*9j"=?TQ$tNtd&`Q(Z<KsjL,AW!YEhMh=A(6a2"g(T>_8\Lah>tL[tqiU!if*)
!R<HRr107mf67M&hC5paQ/4hG8kF"K,ijWBhSN;h)@=/%Vj48$Efr\E3<9~>

%%EndBinary
grestore
np
f
0 gry
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCD055133316849E00736C24057076
3FFBEAA17D20BAD0C90929E7FC98BEF078FBD21661E4465220571BF6C5785F77
9B145176EAC3F1B48024793437EC4438247E11A602434D0E7AC34F18A158BFAD
2A9FD91C0C9E4A3D67CE58D890D1A5D9362E68BDC6AD4CEE4C45C583B8E0A134
37C5A7D60D6E4A23D8A01F527509176EA8D499100624E9> |-
/l <1C60D8A8C9B88C082599D5E898B54D665A852C4BD97DFF418DFF9C25960C
0EAF> |-
/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D
1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E
99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E5
6946239346863C679F19> |-
/v <1C60D8A8C9B7A73DC53FF2C839B947F31C11DB63CB8CC0B0E0518E01B2A8
090086BA063BC631F5BCB6255A1F02FF856D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 100 /d put
dup 108 /l put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 18{/.notdef}rp /H 24{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [5.0655 4.4142 4.3716 -5.1147 0 0 ]msf
342.441 330.507 mo
(additive)
[2.81641 2.45428 2.81644 2.45432 2.81641 2.45428 1.12454 0.97995 1.4082 1.22714 1.12454 0.97995 
2.53275 2.20712 0 0 ]xysh
DYLDUR+Helvetica*1 [2.5824 6.2328 6.1728 -2.6076 0 0 ]msf
321.282 337.162 mo
(multiplicative)
[2.15112 5.19186 1.43582 3.46545 0.573273 1.38367 0.717926 1.73273 0.573273 1.38367 1.43582 3.46545 
0.573303 1.38367 0.573273 1.3837 1.29123 3.11639 1.43579 3.46542 0.717926 1.73273 0.573273 1.3837 
1.2912 3.11639 0 0 ]xysh
DYLDUR+Helvetica*1 [6.195 2.5526 2.528 -6.2553 0 0 ]msf
322.73 307.167 mo
( )sh
DYLDUR+Helvetica*1 [6.2477 2.4188 2.3955 -6.3085 0 0 ]msf
324.535 307.917 mo
(s)sh
DYLDUR+Helvetica*1 [6.3011 2.2728 2.2509 -6.3624 0 0 ]msf
327.778 309.172 mo
(u)sh
DYLDUR+Helvetica*1 [6.3451 2.1453 2.1246 -6.4068 0 0 ]msf
331.374 310.467 mo
(p)sh
DYLDUR+Helvetica*1 [6.3742 2.0545 2.0347 -6.4362 0 0 ]msf
334.945 311.668 mo
(r)sh
DYLDUR+Helvetica*1 [6.4002 1.9701 1.9512 -6.4624 0 0 ]msf
337.095 312.366 mo
(e)sh
DYLDUR+Helvetica*1 [6.4283 1.8736 1.8555 -6.4908 0 0 ]msf
340.681 313.468 mo
(s)sh
DYLDUR+Helvetica*1 [6.4538 1.7817 1.7645 -6.5166 0 0 ]msf
343.905 314.408 mo
(s)sh
DYLDUR+Helvetica*1 [6.472 1.7148 1.6983 -6.5349 0 0 ]msf
347.133 315.294 mo
(i)sh
DYLDUR+Helvetica*1 [6.4911 1.6391 1.6233 -6.5543 0 0 ]msf
348.562 315.68 mo
(o)sh
DYLDUR+Helvetica*1 [6.5199 1.521 1.5063 -6.5833 0 0 ]msf
352.228 316.606 mo
(n)sh
223.703 199.744 mo
229.262 199.744 li
229.262 193.796 li
223.703 193.796 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[17.1802 0 0 18.3803 -127.263 1062.21 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
229.847 201.451 mo
234.126 201.451 li
234.126 197.081 li
229.847 197.081 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.2251 0 0 13.5039 -108.277 1056.93 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
234.986 199.83 mo
238.066 199.83 li
238.066 196.067 li
234.986 196.067 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.51725 0 0 11.6283 -92.3937 1061.94 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
238.961 194.649 mo
243.161 194.649 li
243.161 194.366 li
238.961 194.366 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.9779 0 0 0.875206 -80.1087 1077.95 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
243.941 196.342 mo
245.984 196.342 li
245.984 191.891 li
243.941 191.891 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.31527 0 0 13.7539 -64.7212 1072.72 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
246.59 198.001 mo
249.19 198.001 li
249.19 191.042 li
246.59 191.042 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[8.03384 0 0 21.5062 -56.5316 1067.6 ]ct
<<
/T 1
/W 65 
/H 172 
/M[65 0 0 -172 0 172 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uCDl"G+'*n;$l@!=X_#iJ7c(+t4'g6K%nMe.ObQ!68JCkmT==,(I?-Ef!c"%k)fuiKG.05#Ca<
6RNOdr1UqiL/7!Mq*P4?%&6Zqnq70!-VfRajUh9Z8eE>L5q<Qqn.)c,PulmE)&)KM@XlU=(9%u*+)%0L
/b19>IaLBlh5!dHrM#:#^<!:^N#i<0,)Kb_n:2!$#?\6A,IQ<LNkJo+jt-3V<c^2?[q/sUq\@.EG-P@2
3f*2&`NIdaoN40jdQ8A-`HO!qmPcYXYOEc>9Wi!B`f4-1O?Do[Ri9aWqE59VIoY(b`ikoB(:q9;NA*7n
?)<%o\:R2E[JsKII?*5dIPAJnBC#37j12Rigb2"^3\&>TKs%UO"RE*B65Jt#Nq0L]+`A&'WB>!<b,hhf
qpqjdBKP4S6h'\"jh@b%8qXZN1\Rk<BKQ4T^ac^#K>=]J&?A:a4;d1rb-ZJI_WnL\+<kdSM[c]4H[-.%
;IKRb4Y\F_.1d(adhSl\_#Y@]Oc#tg&.ttl)lcg[!?S7>7*c4LOp\$E,:LKlWD6t,Pho1%3<kF<BUSu
~>

%%EndBinary
grestore
np
f
249.803 196.342 mo
253.048 196.342 li
253.048 193.273 li
249.803 193.273 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.0303 0 0 9.4848 -46.6043 1072.72 ]ct
<<
/T 1
/W 81 
/H 76 
/M[81 0 0 -76 0 76 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[J-6Vr!C/o?&85T#rd]_hTeGVg1&h*._4Ye0"=<"HKYl`QL\h-.",+T:TQj!-*rg^_i)'3Bra@R5
+<Q+N'C\4BLVEi\g&0(ppmFpV#R?%unO8t\-I=f,4i&q%&*[m;`G1@JRCk'!PT>M!%n#$LF?!8qF#\,C
U%JeQ/qCaJ6_IM=[*H41SBrGS$k4-ZHGSPfR&iFQ(P[K*Z1qIV:D5D_j(Gom"7nO7Ms'Z!m*lNuTR:JE
R[ktH<L;<QB,O2DcS)]SmP#%Y[Hi+7?r_7F*@_/FHK0!io.U??0?qr;0<n8o4/n[;p&Gm[9OkUCmq03k
fHpt>jir*6J.FIsnWreE4;ob%a4gU~>

%%EndBinary
grestore
np
f
252.774 197.718 mo
256.374 197.718 li
256.374 194.043 li
252.774 194.043 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[11.124 0 0 11.357 -37.4214 1068.47 ]ct
<<
/T 1
/W 90 
/H 91 
/M[90 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-]AN<^k4l,&=>j((C#W0iUAgc$7?(3`S^2f<&-6NLI`Ue.(#.!&<FsZ18u8!9.lFI,r6uTdT\Vr
c6b9&XR^9nSBrX'\Xa'b*2CnpPM0:@RmEt!kn7`*18ch+e#N#>bs?l1!*F&<1'N]_B=(iYp'X_!Q!:"`
/ldh#EpI_V?>eAq`U<\Q^f5*W.t/89L94o8fW6DA*Jqhrni5EZ=!a0T5p;=$~>

%%EndBinary
grestore
np
f
170.139 234.882 mo
175.698 234.882 li
175.698 228.934 li
170.139 228.934 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[17.1802 0 0 18.3803 -292.799 953.619 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
176.523 234.531 mo
180.723 234.531 li
180.723 234.248 li
176.523 234.248 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.9779 0 0 0.875206 -273.069 954.703 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
181.863 234.968 mo
184.943 234.968 li
184.943 231.205 li
181.863 231.205 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.51725 0 0 11.6283 -256.565 953.353 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
186.802 231.48 mo
188.846 231.48 li
188.846 227.029 li
186.802 227.029 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.31527 0 0 13.7539 -241.302 964.132 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
189.452 233.139 mo
192.052 233.139 li
192.052 226.18 li
189.452 226.18 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[8.03384 0 0 21.5062 -233.112 959.005 ]ct
<<
/T 1
/W 65 
/H 172 
/M[65 0 0 -172 0 172 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uCDl"G+'*n;$l@!=X_#iJ7c(+t4'g6K%nMe.ObQ!68JCkmT==,(I?-Ef!c"%k)fuiKG.05#Ca<
6RNOdr1UqiL/7!Mq*P4?%&6Zqnq70!-VfRajUh9Z8eE>L5q<Qqn.)c,PulmE)&)KM@XlU=(9%u*+)%0L
/b19>IaLBlh5!dHrM#:#^<!:^N#i<0,)Kb_n:2!$#?\6A,IQ<LNkJo+jt-3V<c^2?[q/sUq\@.EG-P@2
3f*2&`NIdaoN40jdQ8A-`HO!qmPcYXYOEc>9Wi!B`f4-1O?Do[Ri9aWqE59VIoY(b`ikoB(:q9;NA*7n
?)<%o\:R2E[JsKII?*5dIPAJnBC#37j12Rigb2"^3\&>TKs%UO"RE*B65Jt#Nq0L]+`A&'WB>!<b,hhf
qpqjdBKP4S6h'\"jh@b%8qXZN1\Rk<BKQ4T^ac^#K>=]J&?A:a4;d1rb-ZJI_WnL\+<kdSM[c]4H[-.%
;IKRb4Y\F_.1d(adhSl\_#Y@]Oc#tg&.ttl)lcg[!?S7>7*c4LOp\$E,:LKlWD6t,Pho1%3<kF<BUSu
~>

%%EndBinary
grestore
np
f
192.665 231.48 mo
195.91 231.48 li
195.91 228.411 li
192.665 228.411 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.0303 0 0 9.4848 -223.185 964.133 ]ct
<<
/T 1
/W 81 
/H 76 
/M[81 0 0 -76 0 76 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[J-6Vr!C/o?&85T#rd]_hTeGVg1&h*._4Ye0"=<"HKYl`QL\h-.",+T:TQj!-*rg^_i)'3Bra@R5
+<Q+N'C\4BLVEi\g&0(ppmFpV#R?%unO8t\-I=f,4i&q%&*[m;`G1@JRCk'!PT>M!%n#$LF?!8qF#\,C
U%JeQ/qCaJ6_IM=[*H41SBrGS$k4-ZHGSPfR&iFQ(P[K*Z1qIV:D5D_j(Gom"7nO7Ms'Z!m*lNuTR:JE
R[ktH<L;<QB,O2DcS)]SmP#%Y[Hi+7?r_7F*@_/FHK0!io.U??0?qr;0<n8o4/n[;p&Gm[9OkUCmq03k
fHpt>jir*6J.FIsnWreE4;ob%a4gU~>

%%EndBinary
grestore
np
f
195.877 231.125 mo
199.357 231.125 li
199.357 230.882 li
195.877 230.882 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.7531 0 0 0.750353 -213.257 965.228 ]ct
<<
/T 1
/W 87 
/H 6 
/M[87 0 0 -6 0 6 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]%="b]3N:q1$["Ub>r5Q~>

%%EndBinary
grestore
np
f
215.345 244.238 mo
220.904 244.238 li
220.904 238.29 li
215.345 238.29 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[17.1802 0 0 18.3803 -153.094 924.704 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
221.729 243.887 mo
225.928 243.887 li
225.928 243.604 li
221.729 243.604 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.9779 0 0 0.875206 -133.364 925.788 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
215.672 169.111 mo
221.232 169.111 li
221.232 163.163 li
215.672 163.163 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[17.1802 0 0 18.3803 -152.081 1156.88 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
221.816 170.818 mo
226.095 170.818 li
226.095 166.448 li
221.816 166.448 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.2251 0 0 13.5039 -133.095 1151.6 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
237.395 501.696 mo
241.362 501.696 li
241.362 497.934 li
237.395 497.934 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.2594 0 0 11.6283 -84.9483 129.051 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
242.134 501.696 mo
245.213 501.696 li
245.213 497.934 li
242.134 497.934 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.51725 0 0 11.6283 -70.3053 129.051 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
246.109 496.516 mo
250.308 496.516 li
250.308 496.232 li
246.109 496.232 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.9779 0 0 0.875206 -58.0203 145.062 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
251.088 498.207 mo
254.447 498.207 li
254.447 495.057 li
251.088 495.057 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3823 0 0 9.7345 -42.6331 139.834 ]ct
<<
/T 1
/W 84 
/H 78 
/M[84 0 0 -78 0 78 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf!#u=E!$Aira8c8>rqHHoiD94;!YGBV!!"`4jB*K'?q$f.!'>]@s$.[A#7(unIe\N2?3:HH![n)!
8_a=P&dB`aIL"s7#S`j?p`I?9O6HK]n:->C-nlnI_P%a#dU`Ibr-!nkLIq\,g;CeEJ,n7NNX/l*4$7K:
Cm2jI/l*LV0^dL`@Li,IKd#Dse/Trt.&P!+plG\+iCnk(-r;kr:(NZ2jg%^!bR,kfWR'm-L\5C4UP\0.
n2N:h;6>l2EDUM4F(#O46)#;M9Kn<DJODB-hA65J^Xd$L4D0F&P69uajh2]#Jd]TaE:po91BXi,OC@ul
*n2'Ying=k)W+L3LZubSrLY+u2@YAkrLc]2Y$:]!ZH/1;c_/(!i-lp?+t3U>M>JXBSdrq=JLDmsJ@))O
dJ/C3m;ml4XUXj.ZQ9\c+VCI]$8T`*Lrs7912EsrJ".+&"MZ013J)3*Bfo"KOCn\/O2S%2,`esF.\Hm9
&b;+n&+Dm[JsZgc+pZ/EW;PPE#g71F3G3pdhk>o`*fVJIgD(kuN^;TRJ,~>

%%EndBinary
grestore
np
f
254.943 498.208 mo
256.986 498.208 li
256.986 493.758 li
254.943 493.758 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.31527 0 0 13.7539 -30.7204 139.831 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
179.187 500.912 mo
183.154 500.912 li
183.154 497.15 li
179.187 497.15 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.2594 0 0 11.6283 -264.837 131.474 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
183.925 500.912 mo
187.005 500.912 li
187.005 497.15 li
183.925 497.15 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.51725 0 0 11.6283 -250.194 131.474 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%+"s*R)i9E5%s&INse,"ME%%H.qP7:8Xd!W<!/NBohupOE`2&VIgu0rVY^"Y5/.+jmgJ!_41l
5l^o\N91'fJ[bpr-cC1\6]qEm:&r3=_)$X).BiFF%M_m$eY:SJ"Q#nJK$PrgpbcBI7>&s$Z#T^pL>W&9
B^bhO]&sKU<@Dk1b5u^7W(nH(gWBQe"i0'ci!RsH<tWHujO"n<+:e1@j]iE,bUEN6Hq!BtpaH/04+Ydg
ROB3Y&TG!f?P`u2(<a%C7OXT4bh_dth!0+r-s$?-H%\O;>Zg/B;]NDj.+ag+6]op`oXPNkk?kjNn*tXn
Hmb*k7.U"64O665gXZ&a]AF^.DrKGE9Y4\ne`I5<Th"_Lo:LP"T'M"?3q@M#&5nfV,47aIe%#Sh0VpEO
1K=F\k_l0g,S9OLcnq[uJC?2iE<(k<m.pp<U#lGHHn*3/^op5kH:lbsW'Y,/+YaZ,KWH`i*u:UZOt,<U
&j'qJ[B'](J:I~>

%%EndBinary
grestore
np
f
188.864 497.423 mo
192.223 497.423 li
192.223 494.273 li
188.864 494.273 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3823 0 0 9.7345 -234.931 142.257 ]ct
<<
/T 1
/W 84 
/H 78 
/M[84 0 0 -78 0 78 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsf!#u=E!$Aira8c8>rqHHoiD94;!YGBV!!"`4jB*K'?q$f.!'>]@s$.[A#7(unIe\N2?3:HH![n)!
8_a=P&dB`aIL"s7#S`j?p`I?9O6HK]n:->C-nlnI_P%a#dU`Ibr-!nkLIq\,g;CeEJ,n7NNX/l*4$7K:
Cm2jI/l*LV0^dL`@Li,IKd#Dse/Trt.&P!+plG\+iCnk(-r;kr:(NZ2jg%^!bR,kfWR'm-L\5C4UP\0.
n2N:h;6>l2EDUM4F(#O46)#;M9Kn<DJODB-hA65J^Xd$L4D0F&P69uajh2]#Jd]TaE:po91BXi,OC@ul
*n2'Ying=k)W+L3LZubSrLY+u2@YAkrLc]2Y$:]!ZH/1;c_/(!i-lp?+t3U>M>JXBSdrq=JLDmsJ@))O
dJ/C3m;ml4XUXj.ZQ9\c+VCI]$8T`*Lrs7912EsrJ".+&"MZ013J)3*Bfo"KOCn\/O2S%2,`esF.\Hm9
&b;+n&+Dm[JsZgc+pZ/EW;PPE#g71F3G3pdhk>o`*fVJIgD(kuN^;TRJ,~>

%%EndBinary
grestore
np
f
192.719 497.424 mo
194.762 497.424 li
194.762 492.974 li
192.719 492.974 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.31527 0 0 13.7539 -223.018 142.254 ]ct
<<
/T 1
/W 51 
/H 110 
/M[51 0 0 -110 0 110 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfi&gnR!e7rbE+hVu(C,LR!&2KQ:*Bh"66$T)'7q;EO2.+q(]9:B-%a+g&stue=TXp]ciEm+dOkNh
673Cb!.K2WLd.fB8ehC3!$BT;&P(q8+\ec]^^'^I:+5n<6n9!EciQ91XB4<J$M529!45pH<kDqOef^!i
ifWO@RONE99(&ocUrN:ZLeR/;.&?;>1r@SD2>Sp\LCBkSEYQ#p6GJi/e[%,(AT#8ScIm:oWud-/AC<lR
0fo5N8ZpY"TpJCMg)7>OhR9o7Ac$heKAec!Lh7TaLj25Ur0RF8_2X(gna7Ha8V>QE0`)CQ)hTi"mq.+L
*8j'&s*o<n[7B/)cMSdZC`aR37/ui2d%F&L2%$;]3_H,1WM#77rdH4?!.K/@`W/1f.u5t-YH3^m%]6H:
K-YCY+9~>

%%EndBinary
grestore
np
f
354.936 401.642 mo
358.108 401.642 li
358.108 398.625 li
354.936 398.625 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 278.3 438.259 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
359.015 403.218 mo
360.425 403.218 li
360.425 396.554 li
359.015 396.554 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 290.908 433.39 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
361.007 401.578 mo
365.46 401.578 li
365.46 396.808 li
361.007 396.808 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 297.063 438.46 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
365.922 402.94 mo
369.35 402.94 li
369.35 399.436 li
365.922 399.436 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 312.251 434.248 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
369.937 401.636 mo
373.054 401.636 li
373.054 398.692 li
369.937 398.692 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 324.66 438.279 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
372.86 402.94 mo
376.288 402.94 li
376.288 399.436 li
372.86 399.436 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 333.694 434.248 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
378.513 401.957 mo
382.615 401.957 li
382.615 397.816 li
378.513 397.816 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 351.165 437.288 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
384.649 401.578 mo
389.102 401.578 li
389.102 396.808 li
384.649 396.808 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 370.126 438.46 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
389.756 401.286 mo
393.12 401.286 li
393.12 401.059 li
389.756 401.059 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 385.91 439.362 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
393.9 401.636 mo
397.017 401.636 li
397.017 398.692 li
393.9 398.692 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 398.716 438.279 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
397.016 401.286 mo
400.38 401.286 li
400.38 401.059 li
397.016 401.059 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 408.345 439.362 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
401.32 403.218 mo
402.73 403.218 li
402.73 396.554 li
401.32 396.554 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 421.648 433.39 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
1 setflat
364.775 394.489 mo
361.093 383.508 364.942 370.837 367.619 366.614 cv
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
8 setflat
1 setflat
368.695 364.916 mo
368.479 365.916 368.351 367.246 368.493 368.214 cv
367.463 366.859 li
365.813 366.482 li
366.743 366.207 367.886 365.532 368.695 364.916 cv
f
8 setflat
411.691 313.06 mo
410.631 313.06 li
411.691 296.503 mo
410.631 296.503 li
1 lj
10 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
gsave
140.721 534.372 mo
435.177 534.372 li
435.177 145.829 li
140.721 145.829 li
cp
clp
367.678 313.984 mo
435.269 313.984 li
435.269 293.881 li
367.678 293.881 li
cp
1 gry
f
grestore
377.641 301.388 mo
380.812 301.388 li
380.812 298.371 li
377.641 298.371 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 348.467 748.086 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
381.72 302.964 mo
383.13 302.964 li
383.13 296.3 li
381.72 296.3 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 361.075 743.217 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
383.712 301.324 mo
388.165 301.324 li
388.165 296.554 li
383.712 296.554 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 367.23 748.286 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
388.626 302.686 mo
392.055 302.686 li
392.055 299.182 li
388.626 299.182 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 382.418 744.075 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
392.642 301.382 mo
395.758 301.382 li
395.758 298.438 li
392.642 298.438 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 394.827 748.105 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
395.565 302.686 mo
398.993 302.686 li
398.993 299.182 li
395.565 299.182 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.5946 0 0 10.8285 403.861 744.075 ]ct
<<
/T 1
/W 107 
/H 108 
/M[107 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2hVYFi.F:b#P^t:)[q?dU+lp9-3"@-`M4"^e5@#%N5O^23?0)'(Q_-4;Q1qI9dPKbi_oSo`aK[O
8n,*:gpVPdT?X7>M7d_Y7%r#'o?(>7Rm<muW:[&X1940Ne13C+N?Y8\X%_iE](L6G@^=Z<o;aa#Z"UPt
D38o?!pt3E?%a#`jnAY&^gM&i&I$J=DQR@2\;MCXPDlm/X8'?)5:_r@Aoej%DI5JocfZl_$]Vn1Vn$Pa
g8n&E=0L3@0tQb4_e69rm5FHI/2dP~>

%%EndBinary
grestore
np
f
401.218 301.703 mo
405.319 301.703 li
405.319 297.562 li
401.218 297.562 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 421.333 747.115 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
407.353 301.324 mo
411.807 301.324 li
411.807 296.554 li
407.353 296.554 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.7629 0 0 14.7388 440.293 748.286 ]ct
<<
/T 1
/W 139 
/H 147 
/M[139 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3$\h*%tV55YdaMf%gdtV@F5@>%H.hK6DC`P_u;M4E(=F.<Wn:=!g:MIBF-Mc!A0;Sj\Zi`!!b<7
9kNp`47[5JKt\r+aP@2I*g=5bFGSa&O!BB=.<Po#!iIEH;rm-B!![uXY#hQa:^)$W".IoEF-%]JR1XlK
Xjoren/ZSELT_:kL$HWqL-,^m\;PtD!40[@em(lHJSE,s1)@B'#:G%Uf<L`7/DiCRJj5t)qkP0$LsA9D
n,4M3nHcFmoe7c/Iol^(BHk@m^?8-1hJ@@Tm?\3'.+qZ\dRY0)L4SLT3-Hou*WJ4dl!N8,QQJZDhJr4,
qWEW,YOHB%^7IF(D2nUAU+[#d>NJ`;rO-MQcc>a1^J6ci!'eajTTfEeHV1'5cr+oh5qPaE"@:+3plRlp
e&IG9/#1[S_l.*1%RR*Ek_-l&=hsOFNCgq@_h^[%?m(>kA@b6m6uI`EnH=$Z`h3H`cCg%oL9r2'r/Aof
BG?cZ6ZQ.Zc92H?VU._OOt`n(o!GiZbHc/!cpdLV`i;7e1qnR^-lRdsTTSPS1U<sDkoq76HRS:,dt.`M
c=u"*T.I?!b<[8X,n35IMA6ps1C@,'TrJfl+%/XVSM5`:#W4%h6Ibi<!RWb;#<>`4g'#0u92_FXeZ0<Q
5Z?3rlQk&^>baO6e')@Lf<]PU?rkP+(7NmSbZM5S.*Xh[=Y+]eJ$Nc.gL)lF*Dp-I-m`#.>GrQMJhq*<
pkE%Z66gTFebTYs+h)U9E1s]\hg.H;>GR>(2nNU]bdU%8!*X%LKTFW=A"A8s\69,Ue9E"5L`gq^rdJ=:
NW+Q8G`F\:j1)/fN?/rFdZ#4a1Wbci\BAdH,>3%mZK<"95(]mgZ4s9"Za?T`:q)X_ZQ'>6$YRlG"W(aP
1n>#OC","%VU2nTV//uE#*#,1e6'M:J,~>

%%EndBinary
grestore
np
f
412.461 301.032 mo
415.825 301.032 li
415.825 300.805 li
412.461 300.805 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 456.077 749.188 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
416.605 301.382 mo
419.721 301.382 li
419.721 298.438 li
416.605 298.438 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 468.883 748.105 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
419.721 301.032 mo
423.085 301.032 li
423.085 300.805 li
419.721 300.805 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[10.3965 0 0 0.699979 478.512 749.188 ]ct
<<
/T 1
/W 105 
/H 7 
/M[105 0 0 -7 0 7 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J04h'3$]7DJ:U"[:mb3?*=mrn+n1;@*Wc~>

%%EndBinary
grestore
np
f
424.025 302.964 mo
425.435 302.964 li
425.435 296.3 li
424.025 296.3 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 491.815 743.217 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
8 setflat
369.478 304.272 mo
434.076 304.272 li
434.076 303.98 li
369.478 303.98 li
cp
0 gry
f
370.028 312.11 mo
371.437 312.11 li
371.437 305.446 li
370.028 305.446 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 324.94 714.95 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
372.373 310.471 mo
374.327 310.471 li
374.327 306.059 li
372.373 306.059 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.03991 0 0 13.6358 332.187 720.017 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
376.645 310.849 mo
380.746 310.849 li
380.746 306.708 li
376.645 306.708 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 345.39 718.848 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
383.166 310.471 mo
385.12 310.471 li
385.12 306.059 li
383.166 306.059 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.03991 0 0 13.6358 365.542 720.017 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
385.864 310.561 mo
388.427 310.561 li
388.427 306.064 li
385.864 306.064 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[7.92104 0 0 13.8967 373.881 719.739 ]ct
<<
/T 1
/W 80 
/H 139 
/M[80 0 0 -139 0 139 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&GR-#CZXQ"8Ftb_$U:^?g%bl"rdI@"5X"[r#c"AKu)UWBHTJKi/#/0&9\&&"Se-N+clCl%P\uR
c/;HT4E:T&Ma5W&3J=\Cs*..EdV2]2RnJl9=;8gjNWh"ed:.3CI0PH4TZCM^=8e#++.Z-$QC6NK'0*F]
mI5A>b!->h^+T$(rTYX.^>@dm#i5J;JriI#0Q[:X_2FufnaRk/9-FAZjPdXM#$rVYcK-l#j9CZ6U!;dJ
0K:\N-(WXTFrIs%#@f=>D'5==Ie.-bghl_7&-hBM$KH.ar2l;@=jGT?.fCbC;ieoZp,TghIrhCAl1d<R
0#&dUf(=7d?>jIhgY;JsIQd_':PH4Rmf,@3n*bec^Vg4FgH]UC(t1>r15,irn5D%G6#>!eb;,0S2T[Z]
-k=+t$p+n.-a<5(^Fp!&i1."Ze4tr)l^H>87;,liNt:cL`jMniU4"#_Mup;sO:'tGHn3@6OJ&Uf&kJ:\
Eb(Pm,q?6'VFZYTNhA+`R`LmKWP[;m95<1lPGL$\OHN0`**!b,LrqXiU1gPPLO]_PcQ'?P=on~>

%%EndBinary
grestore
np
f
388.851 310.529 mo
391.968 310.529 li
391.968 307.585 li
388.851 307.585 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 383.113 719.839 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
392.417 309.627 mo
394.852 309.627 li
394.852 306.123 li
392.417 306.123 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[7.52516 0 0 10.8285 394.132 722.624 ]ct
<<
/T 1
/W 76 
/H 108 
/M[76 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrLGPh.8It9^(J-[BO)$p:1ci=%S65]\&_4_AFL`Pt,J$:11aCBf)i!7$XJ9D>H#:b5@&F_(.<T,)'
b$^kKK7FCRJO/Gd!$M7E0d"[#OGFML5>%MEfDtc%*WFt!d\=*p`@>4bGQ@'[B7L2O"J`[^d]5bBn,TfF
Tm%D;/E(EU!&!^JD!q%GK+'CIHk$XH!5W"ldh%6PK8miMJ/Ja_1EDe&dGfG!hI`6>cTh$3>okXl<n$3<
)GOP->H$0=Z^Vs6?RN;)@eTX=hH,&)_WSEg$q<;F`k?CFQKs8deRPgelo%KNWjaA@fkT'j<CR-jWog;Z
g1H5+.\bo"mg8n!2.rISAf&RYrUDPIYi.9/4ISU$XQP0H!%?#Npl?mTMB]7,-3+%=/h9i8bJ%eo.`K9k
>F,Z'0ZqKE6YK.Z&]:j^4Usg+1fY/W0k<!R`3FD@X/kae2[prZMotJ.1"o2>/<S'c+NLN,!W~>

%%EndBinary
grestore
np
f
395.276 308.557 mo
396.91 308.557 li
396.91 306.124 li
395.276 306.124 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.04974 0 0 7.51991 402.968 725.931 ]ct
<<
/T 1
/W 51 
/H 75 
/M[51 0 0 -75 0 75 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VqBp\TJ)i-55EJ,gO=!=F8U!&3V8iXT@O_9_<G"D*2b!(UHg2tT:++%+.8&+fjL+"DcE"2XedaF>m_
#:As8-t*&t&5Qs&!sJ;s0lTEF'R2/C,>=oC!&Y$1%]J<d;<g$-D.9XQYLmVe>6U#&AZg[Np8^'VdqcHt
DDqBWf'.CWgTNOth:haNK&3^jbT6QgJ8eo$3)!Wt)i2IDELA=7U6<=880rDWHoul^c@@_@9_O*#UX85_
+9~>

%%EndBinary
grestore
np
f
397.203 308.583 mo
399.157 308.583 li
399.157 306.092 li
397.203 306.092 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.03991 0 0 7.69823 408.923 725.851 ]ct
<<
/T 1
/W 61 
/H 77 
/M[61 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vse!#u=8!e11M"8D^7)[Zhf?sr_^(*%ih_I?=!$jcnuK>/P4p&KOOp]JImmg+jMi!4nE"7T\<*J"WK
^Aos4`$0C)!$C/"#K1?\5Who:5QesiNrM?S.F`[%i^Y%07;;)g`4i]dPgSfW$Od>l#dRCa!/:Wb#Agk6
m<75\+TZS%!&!uGe`-6XUV&8Pr"&r2!lDgZ=M/6)(PdWOWUTh?;^V:];tCl3hHr'/cK;J/*9%&nEJE?A
>-.tW26PNq*u:Btdm:FK<i^SIV->:&Hq.o7MOb_!8q@1,&)bD.K`Z]5.MIZ\i^qXIFf&7Y?+Ij#ZEWCI
F?CV'rWgF+:WYJ_B&GnkSe9WA3Va#H_l=S-f*2Y6J,~>

%%EndBinary
grestore
np
f
399.708 312.11 mo
401.118 312.11 li
401.118 305.446 li
399.708 305.446 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 416.667 714.95 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
402.31 312.11 mo
403.72 312.11 li
403.72 305.446 li
402.31 305.446 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 424.708 714.95 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
404.655 310.471 mo
406.61 310.471 li
406.61 306.059 li
404.655 306.059 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.03991 0 0 13.6358 431.954 720.017 ]ct
<<
/T 1
/W 61 
/H 136 
/M[61 0 0 -136 0 136 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfoK3HM"+Pm[co:SGrs+*>+jgRC:'U3G5aW.Mq>rGO!(L<.(gHri,_s.q&r8ZA=9+^]^]55D)INf=
_r_'sb_uWEM1>j'#qZcg!hR3l1l16GN>/9iBsfuR8ukpde*0kiKlXY(YZ>Mi.ePR7?*i/LQCBb7h.X:O
Xqs0bf%Y;Yh5aVHjmN(W]O1$8.qTFSIDB0o3/en3%=uQ1EOe1a9.Q7Ej7-92L2mIu!QejcqE+7V,sY2`
qO*;_=fh[>ot)f!_I9g=5X5~>

%%EndBinary
grestore
np
f
408.927 310.849 mo
413.029 310.849 li
413.029 306.708 li
408.927 306.708 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[12.6738 0 0 12.7971 445.157 718.848 ]ct
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg2uE)o"GB)`!Vf>GrpU01TeQh;+t47X`T%O)N,CWsO2n"mM&]Ph&sL500\K]+3uaL)V=I3JRVO=@
b,7#:gq#d+Jl![Jfp)Jm6)2fje@?;@"[]-9Ub`@C6DlZ;<@]qaD/O2sS6..>.HQ_@?*mY70Lc$Dh/Bf.
!,)b"f%pG>?>ioWjnA(`^Ar,[i#S-8?c1N92EY:aeW6kD0c;NC;]1nAA91m9hH)e*cfT;;4SFt)VU9+#
>('_T=g-FnD#''^LMNjClZYE"hTC`tKubC`fE_~>

%%EndBinary
grestore
np
f
415.063 310.535 mo
418.235 310.535 li
418.235 307.518 li
415.063 307.518 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 464.118 719.819 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
418.725 310.529 mo
421.841 310.529 li
421.841 307.585 li
418.725 307.585 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.6319 0 0 9.09788 475.435 719.839 ]ct
<<
/T 1
/W 97 
/H 91 
/M[97 0 0 -91 0 91 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsc!!F&G!!&Z7:Zso!'`WPJ@B_,48e2#^6(gaSbSC@&O$b.rVrW"7&<;;";-:m\']8s5i'979eeGog
9]iUhq>_TF"4$)9dJX-#$CK5=BF"#2CAaaQhijE*6B>/u5:?*4`GV__NP#Ab>4!?h7=eTUD@)T*_*,5$
CfGQ\mcR5.h5kgWgOf/XW^#t%HAi0HBU^78\;B;6JW-;_Z4Qi75*&4Bc*J:6?=t37UseI1*7X<U6HJ@J
)+XT\=$,#H+aSR%<h6XID=gg+es=ducbqd]R"bitnDeLK)Z,jK=j,O/0Y?Zf:P7*X5l08*#B*_[\+(j%
RI>o6j4a>gEVoc4!U\hBq_6?NVs3dQA2Q,Lel2A1^[76eoqF#/56AGN6Y)(ibtJu@U9-d\QpOKB.."h<
PVVp!%NA=V_Q9h$b!Z`^E=f`Z6Nlnpc`2;AJ,~>

%%EndBinary
grestore
np
f
422.29 309.627 mo
424.725 309.627 li
424.725 306.123 li
422.29 306.123 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[7.52516 0 0 10.8285 486.454 722.624 ]ct
<<
/T 1
/W 76 
/H 108 
/M[76 0 0 -108 0 108 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrLGPh.8It9^(J-[BO)$p:1ci=%S65]\&_4_AFL`Pt,J$:11aCBf)i!7$XJ9D>H#:b5@&F_(.<T,)'
b$^kKK7FCRJO/Gd!$M7E0d"[#OGFML5>%MEfDtc%*WFt!d\=*p`@>4bGQ@'[B7L2O"J`[^d]5bBn,TfF
Tm%D;/E(EU!&!^JD!q%GK+'CIHk$XH!5W"ldh%6PK8miMJ/Ja_1EDe&dGfG!hI`6>cTh$3>okXl<n$3<
)GOP->H$0=Z^Vs6?RN;)@eTX=hH,&)_WSEg$q<;F`k?CFQKs8deRPgelo%KNWjaA@fkT'j<CR-jWog;Z
g1H5+.\bo"mg8n!2.rISAf&RYrUDPIYi.9/4ISU$XQP0H!%?#Npl?mTMB]7,-3+%=/h9i8bJ%eo.`K9k
>F,Z'0ZqKE6YK.Z&]:j^4Usg+1fY/W0k<!R`3FD@X/kae2[prZMotJ.1"o2>/<S'c+NLN,!W~>

%%EndBinary
grestore
np
f
425.246 308.583 mo
427.43 308.583 li
427.43 306.092 li
425.246 306.092 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[6.75225 0 0 7.69823 495.587 725.851 ]ct
<<
/T 1
/W 68 
/H 77 
/M[68 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfJ.)b`n:Mh`!Vd?Prql`r!-$S(%NuO9YQs]cgc5BEL-d!/=8Und#D^FYn*$8bn.1.;@1NWS$9nf8
7c6rBr$$CjSAGgBq>bsU!/!SRn;/D#QQr<JSe&o4)Q?Z8^oHj\bWGsrP>Yq0#DB)[rW$(Pd^r/(@7^G=
/_$-c`IVr[!!X6dV<[kq^!0t1"9o3L&Am67(lU9N(Q"sIiHV#M:EpIk_QqOY`[a-;c-<Tjbmlg*U=/21
3dio^!K_up15H=V#Q]b8h*MqTc0o_&hs[bD#6h9XEoUD@[OY-+%;;tI?^:KL-`9n?aZsbOKGp\#UtKG\
)I>I]!cV#3OD*/?FW?oZW,h4BaraW`8isHuDutj+TuI-N5U35-/sIOCMQ2FgafH>2+NK'8~>

%%EndBinary
grestore
np
f
427.751 308.583 mo
429.454 308.583 li
429.454 306.092 li
427.751 306.092 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.26267 0 0 7.69823 503.33 725.851 ]ct
<<
/T 1
/W 53 
/H 77 
/M[53 0 0 -77 0 77 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VrZ!!E2pG^mJY!!)p;rpYVmh[kMBIJa+j63&\e!J'\="2LN1"2j%]!e(+[%fuS8'e;MaTCSl_ao6fQ
0IG!G_Zjr84<S;/)73r[76CS7'WI<lR3JHOWRW63DIj'R8e2J:]l%=`5YGo+HN67*^o+s)$ju'Q$"UG3
/['rJ0$S-q_WEM-<(>CoKuW!\qdo'uEe[uj+96j$!!%j@Y!<tKhA;Hij`$B_O8s8YKa'.C4VZQMV3s"<
(O5)FMlrr;1V1Xc6>\05bb87/E!"Jqhs[oP$HslSTEJJ-4Is56^BP)H3Ub7QMUg+a49lfVPuh*R!7B^u
#J^gt!^QQnYaCLn=_bs/hi\odilqj_ag6)me^jGEJ,~>

%%EndBinary
grestore
np
f
429.678 308.583 mo
431.285 308.583 li
431.285 305.122 li
429.678 305.122 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.96475 0 0 10.6975 509.286 725.851 ]ct
<<
/T 1
/W 50 
/H 107 
/M[50 0 0 -107 0 107 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vr[L_K`<!eN\1n2MsO'*a+W@PFaN65^Je]HU4?ghJPbMb#"3-kh1k-B(P@d(*D!=URJajtVAhDJKr9
:#ZhRPO`i$Hr&cZ-Nsg-69n?0+:;K[JFKF7B_;o?3iQ,Ye7m8)jPkl!S_*4*.g-p:>d;n^QCA>dh.jH(
DDl9Adbf)X?*8@/^$>3:^"MmV>QjW0L7@0F=KCR*CQ?9lnMr.,;]CqAk&M?M]C:@Q!$C+om08J>s3U!$
n+6g@nLu'#p(<Zr!'^F-_V?)S%d4u6EQGrap,k;=rr^.$0Aq5`P!>70:\)Qh*J"4~>

%%EndBinary
grestore
np
f
432.023 312.11 mo
433.433 312.11 li
433.433 305.446 li
432.023 305.446 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[4.35656 0 0 20.5952 516.533 714.95 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
1 setflat
401.874 311.956 mo
402.085 315.465 400.99 321.112 400.128 322.458 cv
0 gry
0 lj
4 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
8 setflat
1 setflat
399.021 324.196 mo
399.241 323.197 399.376 321.868 399.238 320.899 cv
400.261 322.259 li
401.91 322.643 li
400.978 322.914 399.833 323.584 399.021 324.196 cv
f
366.749 490.879 mo
370.989 490.879 li
370.989 484.932 li
366.749 484.932 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.1015 0 0 18.3803 314.809 162.48 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
366.749 232.413 mo
370.989 232.413 li
370.989 226.465 li
366.749 226.465 li
cp
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.1015 0 0 18.3803 314.809 961.249 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
332.237 231.629 mo
336.477 231.629 li
336.477 225.682 li
332.237 225.682 li
cp
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[13.1015 0 0 18.3803 208.153 963.671 ]ct
<<
/T 1
/W 106 
/H 147 
/M[106 0 0 -147 0 147 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg3#_i^!an;:O5L!J&IO*%!!!j`62odB!"\Pn9N_?;5S)n;BD;N]#EHZnd-#pC7hC,BT)a.a.IdY2
c!ZS='Cm.mJiFunaJAqG!e4'VbSim<N<2DpB2CR/rY\Y89d!<5Hhq#P5L\aK3on-g>9D>Vp.J(FnKP>=
kE\C3au<P9`#]_?/`md7\l7Aq8H&u'IY(B-!;_+!#E-U\0p)ld$R$'H_#P?4<CY*#JnM-1#TejrUo7n5
&,eD(T<6Z12>XGHIqtgWk%VE?eQZ=DJ\s?j?55Y&`J@prGUpDtIgWm)\_=Zbs/0VAFm[b/e1/K<Hun=I
MV!V2e"fuk2kLOZrtOr&0/5,4r;cum_H[2h*-*ro0.9?k\/Yc:!/.@$$h0KJkP?0Z\k-Dm?m!LaJ?Pq#
]E\cid(7:_UC0]6?n4e+57j1ei_^>[!'F)cQk+8T?pe^U3;4SPb/5/f/0o=F/og/$+1a3@V'7.)1G#FX
&l\/K3DshsN/.s@!;A!Wa8h7CkZ"nh1",AE!2C29Y`b`4"*B9kBUUp,9o]Y7?qq:aI%S]jC4:p]PI$dO
VN^9Nk<dZ+2aMs..t"PAoMa+f]ZGRCr(uVCS?pY*m#Oh(.7G[\5RDegS\A)<#>ug<lb^.S;$pWd<KP^n
JQ<*c`f?cdj^hN.W'X1EUD;9lMV'IQi/XQ<;#t1W[JM%X,F3C%Wh[!A2/49FWj]$5[abMIflLoC/mHgg
_(8LJXMmoi;T2[oc8;9RNmT7"_RnZg[<$S"<cSjleZZ+TF'pIZKZ(RV*>ogSfH]briCoOVL#A==3DuR7
AMAj=R'bqgA(!P+hbt$n'9Z6/ej=kX'#n"=jS7.-E),#])%S._3X\\pb^EtR;3gOaXXa--3MK_LI"\+8
<^Yf8kfB#nL"+OF3D!2X5)b3rDK6kab&_`qRA2RD.dJ<:Nm<Z!-pdt~>

%%EndBinary
grestore
np
f
214.126 302.318 mo
214.126 308.569 li
0 gry
0.841 lw
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
8 setflat
162.511 328.141 mo
266.744 328.141 li
0.42 lw
1 lj
10 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
205.063 325.016 mo
205.063 331.266 li
183.341 325.016 mo
183.341 331.266 li
164.936 325.016 mo
164.936 331.266 li
230.857 325.016 mo
230.857 331.266 li
247.253 325.016 mo
247.253 331.266 li
254.281 325.016 mo
254.281 331.266 li
168.283 325.016 mo
168.283 331.266 li
214.126 432.064 mo
214.126 438.315 li
0.841 lw
0 lj
4 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7EF325758E57677E81C8AA433AA021E3255F2E2A0B1596320
19EEA8F6DE2A2BAC7F3B4B357F98F028325FFF3907B73C5456EB1D8FF0179B85
DD1D687E5A074ACA4745CB20001A6A3AC6F132FADF60810876C26262A98CC751
0FA38BE9723AF4B4ABB522A0D15754DB077A63E0BA57BE88E1BBA6B0CE58E658
8DE7ADAB6E41FD9D54E4EFD5A122C76C7BEBAA12F9C5DCCF6BAA6CC0815777C0
B46D695C4EB465E9932D1607B265E794EBAF8378597763D2145A376764> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 18{/.notdef}rp /H 24{/.notdef}rp /a /b /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
250.347 302.475 mo
(pre)
[3.72086 2.22845 0 ]xsh
250.347 319.875 mo
(post)
[3.72086 3.72086 3.3461 0 ]xsh
248.674 432.666 mo
(pre)
[3.72086 2.22845 0 ]xsh
248.786 451.417 mo
(post)
[3.72086 3.72087 3.3461 0 ]xsh
178.126 362.079 mo
(probability)
[3.72086 2.22845 3.72087 3.72086 3.72087 3.72086 1.48567 1.48567 1.48566 1.86044 0 ]xsh
178.126 370.104 mo
(density)
[3.72086 3.72087 3.72086 3.3461 1.48567 1.86043 0 ]xsh
8 setflat
162.511 457.659 mo
266.744 457.659 li
0.42 lw
1 lj
10 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
205.063 454.533 mo
205.063 460.784 li
183.341 454.533 mo
183.341 460.784 li
164.936 454.533 mo
164.936 460.784 li
230.857 454.533 mo
230.857 460.784 li
247.253 454.533 mo
247.253 460.784 li
254.281 454.533 mo
254.281 460.784 li
168.283 454.533 mo
168.283 460.784 li
213.456 310.342 mo
205.761 322.507 li
214.906 310.342 mo
228.849 322.507 li
244.242 323.182 mo
215.688 309.78 li
215.688 308.991 mo
253.053 323.971 li
213.345 309.328 mo
184.456 324.196 li
212.788 308.766 mo
169.733 324.534 li
212.118 308.09 mo
166.61 323.971 li
213.568 439.976 mo
205.761 452.591 li
215.242 440.202 mo
229.741 452.816 li
0.841 lw
0 lj
4 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RTRAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUR+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B64EDFA3F30AE40D82627F2F65ED12882A4E7BE9A365DF6DDE
A50F6F4183F6FB4A060F65336ED2B0FE4820FD52850E5F52B5883009881E15D3
A6E91B5E> |-
/B <1C60D8A8C9B64EDF8861093A50D70CE704C3B99B255E57C25F5628D6A25D
CF329FDC490B240CA8E3263684788E9E559211DF7A652BCEA6E7473D11540293
3A862D3C0BED9681856F5ACE8B339645A6A4CED62CD1A26855F2D51956984EE1
3F47812E810D9E8C98922B6C1937C1681825270D4D77D4BBDEECB712B7702AEE
C61BE96AFEBE20DFCCFCC19F8646EA0A427DFBAA43CEB1ACB616853A6CD4C3E4
CEE20B743FFD4303148B5B4D479ED1038084D37CCEE34880877DCE43721DF888> |-
/C <1C60D8A8C9B6079FED21EC1DA43783C3C67A5FBA5FB885DEE16CDCDCAF1B
7E5C168D0377F501B09EEE06FA7720C35D9E5B5FBCE148C17092F43DAB7E2D94
E9FE9DCFFADEA91F9C52F49E3053420DCED72662293A521E028C39AF83F75FC5
4A> |-
/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70
768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A4
87B4AA37370316974673AB> |-
/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6
C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-
/F <1C60D8A8C9B7D8BE41A64DA557BA3801C50A6D0B90DD03689D1958230FDD
078C54AD8D0DA7DD6F0C9EC4C6354485AE4B93FC66781C> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/P <1C60D8A8C9B64EDFA3F30AE4AB14FCCB57D446AF805F45D1BE197D47C6C2
0943FECBF4EB404456C629F1F5342EEA681381C7461EF00E178F4482E2C7F7B3
9C94B8CCFF41619BA5DC67957F7F81> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA838C6F6EFB82E618
7B34759773BB4D8C1A41E190DEFABB354DFB531C99308891FC3B7E87957393F9
CD35CA8C07371CAABAAF32C24CDAE22C826F234EC2B15BA06DFB54FFCB46EDDF
1D277ED530855C8BB0880980568C5F76DE693CEE6004D84A502F3C6B0F55A550
95F8FAF71FCF3869AA0D55975A515D287103786F2BEFCA3E30833F771676F4E4
B0C078830B99B254F2B4> |-
/T <1C60D8A8C9B7D8BE41A64DAB684ED090D9F4D4439340AD4301BD70587A67
BA95C799E46FC7C8D88E9FFD990A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUR+Helvetica /Encoding get
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
pop
%ADOEndSubsetFont
/DYLDUR+Helvetica*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/five 11{/.notdef}rp /A /B /C /D /E /F 
/.notdef /H 4{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y /z 133{/.notdef}rp]
DYLDUR+Helvetica nf
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
202.743 296.851 mo
(all-to-all)
[3.72086 1.48567 1.48567 2.22845 1.86043 3.72086 2.22845 3.72087 1.48567 0 ]xsh
380.924 292.986 mo
(all-to-all)
[3.72086 1.48569 1.48566 2.22845 1.86044 3.72086 2.22845 3.72086 1.48566 0 ]xsh
191.367 425.241 mo
(nearest-neighbor)
[3.72086 3.72087 3.72086 2.22845 3.72086 3.3461 1.86044 2.22845 3.72086 3.72086 1.48567 3.72087 
3.72086 3.72086 3.72087 0 ]xsh
331.873 425.43 mo
(nearest-neighbor)
[3.72086 3.72086 3.72089 2.22845 3.72086 3.3461 1.86041 2.22845 3.72086 3.72089 1.48566 3.72086 
3.72086 3.72089 3.72086 0 ]xsh
240.778 169.363 mo
(STDP)
[4.46375 4.08888 4.83177 0 ]xsh
389.792 166.661 mo
(BCM)
[4.46375 4.83179 0 ]xsh
DYLDUR+Helvetica*1 [10.7075 0 0 -10.8116 0 0 ]msf
151.994 156.3 mo
(A)sh
289.184 155.849 mo
(B)sh
151.101 288.742 mo
(C)sh
289.407 286.49 mo
(D)sh
150.208 420.283 mo
(E)sh
288.514 419.382 mo
(F)sh
DYLDUR+Helvetica*1 [4.2204 -5.2423 -5.1918 -4.2614 0 0 ]msf
385.978 200.481 mo
(n)sh
DYLDUR+Helvetica*1 [4.1951 -5.2636 -5.2129 -4.2359 0 0 ]msf
388.284 197.617 mo
(o)sh
DYLDUR+Helvetica*1 [4.1689 -5.2851 -5.2342 -4.2095 0 0 ]msf
390.589 194.723 mo
(r)sh
DYLDUR+Helvetica*1 [4.1215 -5.323 -5.2717 -4.1616 0 0 ]msf
392.106 192.812 mo
(m)sh
DYLDUR+Helvetica*1 [4.0478 -5.3798 -5.328 -4.0872 0 0 ]msf
395.563 188.34 mo
(a)sh
DYLDUR+Helvetica*1 [3.9973 -5.4172 -5.365 -4.0362 0 0 ]msf
397.789 185.373 mo
(l)sh
DYLDUR+Helvetica*1 [4.0549 -5.3732 -5.3215 -4.0943 0 0 ]msf
361.981 193.625 mo
(d)sh
DYLDUR+Helvetica*1 [4.0062 -5.4115 -5.3594 -4.0452 0 0 ]msf
364.262 190.598 mo
(e)sh
DYLDUR+Helvetica*1 [3.9743 -5.436 -5.3836 -4.0129 0 0 ]msf
366.503 187.571 mo
(p)sh
DYLDUR+Helvetica*1 [3.9506 -5.4526 -5.4001 -3.989 0 0 ]msf
368.72 184.535 mo
(r)sh
DYLDUR+Helvetica*1 [3.936 -5.4633 -5.4107 -3.9742 0 0 ]msf
370.049 182.7 mo
(i)sh
DYLDUR+Helvetica*1 [3.9161 -5.4786 -5.4258 -3.9542 0 0 ]msf
370.938 181.47 mo
(v)sh
DYLDUR+Helvetica*1 [3.8831 -5.5018 -5.4488 -3.9209 0 0 ]msf
372.902 178.724 mo
(e)sh
DYLDUR+Helvetica*1 [3.8406 -5.5329 -5.4796 -3.878 0 0 ]msf
375.035 175.702 mo
(d)sh
214.293 384.001 mo
214.293 331.46 li
214.293 515.436 mo
214.293 462.896 li
0.42 lw
1 lj
10 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
213.005 514.211 mo
216.574 514.211 li
216.574 499.683 li
213.005 499.683 li
cp
0.65 gry
f
0 gry
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
198.616 504.863 mo
(probability)
[3.72086 2.22845 3.72087 3.72086 3.72087 3.72086 1.48567 1.48567 1.48566 1.86044 0 ]xsh
198.616 512.888 mo
(density)
[3.72086 3.72087 3.72086 3.3461 1.48567 1.86043 0 ]xsh
155.506 352.711 mo
158.678 352.711 li
158.678 349.694 li
155.506 349.694 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 -338.021 589.478 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
156.844 467.585 mo
160.016 467.585 li
160.016 464.568 li
156.844 464.568 li
cp
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.80218 0 0 9.3244 -333.885 234.47 ]ct
<<
/T 1
/W 99 
/H 93 
/M[99 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsfp&I8\n,^;Z&3&MI!s:dg#Oo5:^]4@!^YdFXHr:7e&&7(r!$$7a++h8b!-c3_.3!cR+]8jS;>CNa
_':K5":=T&IRDI9,QNEG5E,XbkW2EV'cE"'_"+G:$%W0Y&"q<b;uVOR!"UT&=8XD$*0@Z[YNhYi0h>\U
i7(;^I['c@^Z%&\X5ZKg^/CR;MksMV7X/>p<SNKN_&8t7j7CprlQpP)e`%Go"M+NJJ_mKTLg>IdB"UIp
Q&@I,<M9CsFk0iQaqXm1CihAEP](Br[QrksQrEkQ_qjjm5Ro.Co*sjGA3^P%cU/0,mJ?cUhb!@nJ`UX6
Y1*usjRINm\eqoOV&%-pT^e(Mcf=-=I69YC=7c3i^MVa+q(U.d6=;QF$3p]!cs.4c1=0f4#rGJP!7o!n
,Uj0dWrm29+77Q=h_ZbI6P:M:1FhHS0f,-U`Q/^cL.3ebSe&-0_AO=TDQ<WW]CGG=Ik9"T%Z.)5UT/PL
k5m3,0!05a[3I>?p2DW>XJ1:i8;`M:0hh\b0-O6ILG>s<!X==[:SQjf.W]>[5ft\fjJC!L`6,65Bf^XK
XFNG2R*4]61^BBUq]@Se/&G4;9<+M2\Z><?OMm^tS;>c6$/#6);6+EHE$Q\17#.?AS=BVY.S,%;S.>Hb
Mn`!g35\$1>f`;N9tZXb^*`s`~>

%%EndBinary
grestore
np
f
208.566 338.505 mo
212.205 338.505 li
212.205 334.742 li
208.566 334.742 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[11.2476 0 0 11.6283 -174.044 633.38 ]ct
<<
/T 1
/W 91 
/H 93 
/M[91 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-NFV\s):9]huEfW#75sq+bTQ;*Pi-h`F*?Z)o)s`5f+X^huJ3'"-Q3J;(-Ggq$i-Eh>eB+!a.6c
6(nO?KPiS$3)<p[=;/JY6BXbZmts.)+YSU8jn'sc%]:e$!$lO*;hA]bP#e:jRb`i(J<.L]'1dWTdmLQ.
jHKIoMI1IZgh#I>4E<k'V-2a'Ra)*:I_nH[i!^SM'l&fH=;^lU7K8R*>GOdseSd!hYLigeQqa^oF-11;
H:]CI"a>W8@/%0!^Kja33$n:s`UUbWhF+j.#X/;%=hJaE*0)EK.Eg,Tn?@_^ij0,67IQ=%^J]pD`HHUt
:C^10jFUq3d=4qQ/Y-j,T_XC5Et#jf\20BfYNPWT^W`G`!5FIRFT""og^^J?YZqg7_9C'MMmP%9aU4_\
RoIc[lO58m.WG9[&@CsG)%*eZRr6q(9Cf0Y*ruLLf>\De<uT(n>)7D3&^-.T7kU<VZ6A[V^bA<9XGlqk
XIHH\_QWcd-o#O8K&s?i$6:XoC9S8g&2!emHijdS#;J;kitMO':eAGd0gIkTW0dpCrAc-\M$#l4^jA\2
,jIts5;;E^plDu+i',7--\=*=#NrmOKU`>DJ;P0Dq;FoB5QpY2!9O?Qgbh^Hb_<B#dc/H^kp%c#5&Kil
~>

%%EndBinary
grestore
np
f
219.889 346.276 mo
222.968 346.276 li
222.968 342.513 li
219.889 342.513 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[9.51725 0 0 11.6283 -139.051 609.364 ]ct
<<
/T 1
/W 77 
/H 93 
/M[77 0 0 -93 0 93 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg-h%*Ws*R)i9E5%o&IO--8+;lbiYr)Z5b%fVqZ$j=J"Qd[pYZ63"V8D!&X]j&(3kDC+j_TeiWgN^
L*1.04QZkQJ\M3s-f=uS"+O/+&]q^9AI=13J2E.ArIInA<Fes1Vuh<&W52m8#^$p&s-["T&t%#ILDHZ>
BQG\^r\m3(bH8+ObRQQmL-hb9A-C2o0L/Y];.rK&'`WYQi3G=A,:Ab0;0%br`>64YMeD%SCHPX/V8_]j
%uHRX3?-R=FrIl&`to/q`HN7n2QmM!`Sk`<c5-8EQ&BYRQ!Qs:Q\O\c.<t^P;\tJY7Cq;=cXTuUc1:ci
cQ?N;9Cp-94q<`cfpDnCnuuJc6f[:%I:k?pXOaPu*!=+Xb*WFM_!;Oc1TZY:k^X.j,0iFq#WYOC50h$B
![`N.,QRh`Y,Efk[A'W=&jS#2!d]Ne%/BmfTdPGrU8>q),-*4"8rF(XbZ[u(Xsg"]js#gXcA]"ZiW9~>

%%EndBinary
grestore
np
f
223.743 348.243 mo
225.503 348.243 li
225.503 339.924 li
223.743 339.924 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.4382 0 0 25.7089 -127.138 603.286 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3Vsg+9W/QrdqrCJI"'i@0Urr+O14F)1rZTT]6S+*,YTYNP>Ma\%mGNn/o[*&ssVgru5?1j(K<p$j/AI
:*783_se0rHirRH.)Whb3294pF+s_pR8/\`+B9>M$?%o)`F%/_4S!7bY=3*S=2b)R6)qRG;d37%_+0sK
mDJe$!pMSS<DXCoXmYk0ML[Akpe99Hn:X's'mZ'_'`>s51)Tl[b/&s_AR67E`L:@L`B5s&%2O^hD5k#s
F"LEC>H-/c2>YLLaapjED=Li1T(?g/h`MGhKE^4D`PljII',[QL!Jh%q)mR?;ltrBp+MU\(Mg]_meAk^
%hEa%jmm]q?2ljie*cjUI=<fh?buHuo`&11L\LN?^Q(s<!Om"mHNQ0cF(3h2:g>!e[Oiu,#prKD2USl=
RlLp69Y.,41<bY'WNjhq,/gL_3s`eZN#MW.`QT7k]IrEJQFO(0ZuVQdBWFseXU@26Yt/O*4KU._3k0[]
Ea#9/8a+$[Vl<=`MPJ>Z*41YUBYnq_+6hcCS#16.@[/8(C07I[BDP5^UhCZ1NQa2Q1lG+bU*,:8BQ=N8
T[?(1!$EB~>

%%EndBinary
grestore
np
f
226.153 346.268 mo
228.637 346.268 li
228.637 340.977 li
226.153 340.977 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[7.67752 0 0 16.3489 -119.693 609.39 ]ct
<<
/T 1
/W 62 
/H 131 
/M[62 0 0 -131 0 131 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J3VsfpY\4A"+S#bn9>nf#7Q/C!&4`U![dhu7A>SD]HT?TLW1HM#n.pW-%X1tJ-]D;"Y>HoV@r-X[KeR?
9`Pio)tJ1aT2-S.i;EWV7@-1dnHr8?#>-)e!#6Am_P[sG<?\";rF3;KE*)/P)XWIa6\3m,&1.RP+`4X+
@WqX=\j$b<^Fc)djmWP+^>Ns44=1F8K*"<8[_,j#EK$O--oS`08sbj<_^W%,hJ06cW5C,D]cN'GVQRff
QG$V)h6*@(2=`8OXu3Yu__1hgb_eusJ+)cFXrKZ]$fgSnY^The+)'iRo"?T8;`!"Wk@"7e`C$u(KB[bI
#fU"Hj7C8JY^^#\?gRO,2R&D+='kCmmGIr%Q)Ep'S-[%6!BA0%#_A?s3Wq^C%O(g;_6-*'!Q$6%%gnrl
oIbWj&BGptTZA6?&0OK]7h.p7^jct]EEl=rO7?YoK9-ZOK,R-'*,pHSV?.29+Q``/SfA#=i27V%=hq-]
#^HEW-cb64%'P[H7(u&@UHXe^%I*u~>

%%EndBinary
grestore
np
f
229.285 348.243 mo
231.044 348.243 li
231.044 339.924 li
229.285 339.924 li
cp
0 gry
gsave
clp
[0.323581 0 0 -0.323581 264.883 543.455 ]ct
[5.4382 0 0 25.7089 -110.014 603.286 ]ct
<<
/T 1
/W 44 
/H 206 
/M[44 0 0 -206 0 206 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /LZWDecode filter
/O 1
>>
%%BeginBinary: 1
img
J-4]u2uCB$"G3<*%gEFo_$bK0i/\,Yr[.OR`SaQOKDH)uIt6NsoF-_1-Ab#qmKlP'$Po!k,;U1l\bS+4
^E`=4oSQWJ!6?Q&,R"g6^kk^\EGAF(R2h16SeW(]iWVrT:Yu_0<9er1O]&*`p[n`U6aM:jn,$+U!.VI_
+I%dG!.T.'_&NLQ4mr2p]`[Wi$kuJF*!=m[GcXRNn,pX?+I3C!;^MOfjrfso5'&U^cKI(XHY/?>E.hru
3f#,`>HECK2@oE[_@a31m@]r.hWn[cg&rQ-%Md<J"6+:pn,?*%Q-\Vum9M=d:Qa4np)G*Uj<M.jmbYT1
56$PWkOX"ISj(JqfC&A*5$`W@6]oRSrVkTua7o9m3Gmf*gq\p9$J;e(EX)b"OA$YDZnRD-c*Kq[4Fs,d
WcJV)d).-/_rpn<`^GWP)NHN8/5gFUC]hcq-#nP']Ip7K@iI=g_V3SCCG[Ub+6siVYeph-X!:#)\uR,"
Whc)UWR?Bijs_m>N1[%(_EbB&9(]]b.k-?fQQ?Hb>a?WB7+.3nW<.I!UWCk9R@pLY-A\C0H7"B@BN.ZZ
UM/Wg~>

%%EndBinary
grestore
np
f
8 setflat
214.07 336.598 mo
213.011 336.598 li
335.414 286.107 mo
335.414 287.258 334.45 288.191 333.263 288.191 cv
332.074 288.191 331.111 287.258 331.111 286.107 cv
331.111 284.958 332.074 284.023 333.263 284.023 cv
334.45 284.023 335.414 284.958 335.414 286.107 cv
338.168 288.775 mo
338.168 289.926 337.205 290.859 336.016 290.859 cv
334.829 290.859 333.865 289.926 333.865 288.775 cv
333.865 287.625 334.829 286.691 336.016 286.691 cv
337.205 286.691 338.168 287.625 338.168 288.775 cv
340.923 290.276 mo
340.923 291.426 339.958 292.36 338.771 292.36 cv
337.583 292.36 336.619 291.426 336.619 290.276 cv
336.619 289.125 337.583 288.191 338.771 288.191 cv
339.958 288.191 340.923 289.125 340.923 290.276 cv
343.332 293.61 mo
343.332 294.76 342.369 295.694 341.18 295.694 cv
339.993 295.694 339.029 294.76 339.029 293.61 cv
339.029 292.46 339.993 291.526 341.18 291.526 cv
342.369 291.526 343.332 292.46 343.332 293.61 cv
345.742 299.779 mo
345.742 300.929 344.778 301.863 343.591 301.863 cv
342.402 301.863 341.439 300.929 341.439 299.779 cv
341.439 298.628 342.402 297.695 343.591 297.695 cv
344.778 297.695 345.742 298.628 345.742 299.779 cv
348.496 295.944 mo
348.496 297.095 347.533 298.028 346.345 298.028 cv
345.157 298.028 344.193 297.095 344.193 295.944 cv
344.193 294.794 345.157 293.86 346.345 293.86 cv
347.533 293.86 348.496 294.794 348.496 295.944 cv
350.734 300.946 mo
350.734 302.096 349.77 303.03 348.583 303.03 cv
347.394 303.03 346.431 302.096 346.431 300.946 cv
346.431 299.795 347.394 298.861 348.583 298.861 cv
349.77 298.861 350.734 299.795 350.734 300.946 cv
353.66 303.447 mo
353.66 304.597 352.697 305.531 351.509 305.531 cv
350.321 305.531 349.357 304.597 349.357 303.447 cv
349.357 302.296 350.321 301.363 351.509 301.363 cv
352.697 301.363 353.66 302.296 353.66 303.447 cv
356.415 307.615 mo
356.415 308.765 355.451 309.698 354.263 309.698 cv
353.075 309.698 352.112 308.765 352.112 307.615 cv
352.112 306.464 353.075 305.531 354.263 305.531 cv
355.451 305.531 356.415 306.464 356.415 307.615 cv
358.824 308.782 mo
358.824 309.932 357.861 310.866 356.673 310.866 cv
355.485 310.866 354.521 309.932 354.521 308.782 cv
354.521 307.631 355.485 306.698 356.673 306.698 cv
357.861 306.698 358.824 307.631 358.824 308.782 cv
361.235 311.449 mo
361.235 312.599 360.27 313.533 359.083 313.533 cv
357.895 313.533 356.931 312.599 356.931 311.449 cv
356.931 310.299 357.895 309.366 359.083 309.366 cv
360.27 309.366 361.235 310.299 361.235 311.449 cv
364.333 314.784 mo
364.333 315.934 363.369 316.867 362.181 316.867 cv
360.994 316.867 360.029 315.934 360.029 314.784 cv
360.029 313.633 360.994 312.7 362.181 312.7 cv
363.369 312.7 364.333 313.633 364.333 314.784 cv
367.087 313.616 mo
367.087 314.767 366.123 315.701 364.935 315.701 cv
363.748 315.701 362.783 314.767 362.783 313.616 cv
362.783 312.467 363.748 311.532 364.935 311.532 cv
366.123 311.532 367.087 312.467 367.087 313.616 cv
368.98 317.117 mo
368.98 318.268 368.017 319.202 366.829 319.202 cv
365.641 319.202 364.677 318.268 364.677 317.117 cv
364.677 315.968 365.641 315.033 366.829 315.033 cv
368.017 315.033 368.98 315.968 368.98 317.117 cv
371.563 320.785 mo
371.563 321.936 370.599 322.869 369.411 322.869 cv
368.223 322.869 367.26 321.936 367.26 320.785 cv
367.26 319.636 368.223 318.701 369.411 318.701 cv
370.599 318.701 371.563 319.636 371.563 320.785 cv
374.489 320.618 mo
374.489 321.769 373.525 322.703 372.337 322.703 cv
371.15 322.703 370.186 321.769 370.186 320.618 cv
370.186 319.469 371.15 318.534 372.337 318.534 cv
373.525 318.534 374.489 319.469 374.489 320.618 cv
377.071 326.788 mo
377.071 327.938 376.107 328.872 374.92 328.872 cv
373.731 328.872 372.767 327.938 372.767 326.788 cv
372.767 325.637 373.731 324.703 374.92 324.703 cv
376.107 324.703 377.071 325.637 377.071 326.788 cv
379.481 329.289 mo
379.481 330.438 378.517 331.372 377.329 331.372 cv
376.142 331.372 375.177 330.438 375.177 329.289 cv
375.177 328.138 376.142 327.205 377.329 327.205 cv
378.517 327.205 379.481 328.138 379.481 329.289 cv
382.063 329.122 mo
382.063 330.272 381.099 331.206 379.912 331.206 cv
378.723 331.206 377.76 330.272 377.76 329.122 cv
377.76 327.971 378.723 327.038 379.912 327.038 cv
381.099 327.038 382.063 327.971 382.063 329.122 cv
385.161 334.624 mo
385.161 335.773 384.198 336.707 383.01 336.707 cv
381.822 336.707 380.858 335.773 380.858 334.624 cv
380.858 333.473 381.822 332.54 383.01 332.54 cv
384.198 332.54 385.161 333.473 385.161 334.624 cv
387.4 335.457 mo
387.4 336.607 386.435 337.541 385.247 337.541 cv
384.06 337.541 383.095 336.607 383.095 335.457 cv
383.095 334.306 384.06 333.373 385.247 333.373 cv
386.435 333.373 387.4 334.306 387.4 335.457 cv
390.153 332.456 mo
390.153 333.607 389.189 334.54 388.002 334.54 cv
386.814 334.54 385.85 333.607 385.85 332.456 cv
385.85 331.306 386.814 330.372 388.002 330.372 cv
389.189 330.372 390.153 331.306 390.153 332.456 cv
392.564 338.125 mo
392.564 339.274 391.599 340.209 390.412 340.209 cv
389.224 340.209 388.26 339.274 388.26 338.125 cv
388.26 336.974 389.224 336.041 390.412 336.041 cv
391.599 336.041 392.564 336.974 392.564 338.125 cv
395.317 344.293 mo
395.317 345.444 394.353 346.377 393.166 346.377 cv
391.978 346.377 391.014 345.444 391.014 344.293 cv
391.014 343.143 391.978 342.209 393.166 342.209 cv
394.353 342.209 395.317 343.143 395.317 344.293 cv
398.244 342.876 mo
398.244 344.027 397.28 344.96 396.093 344.96 cv
394.904 344.96 393.94 344.027 393.94 342.876 cv
393.94 341.725 394.904 340.792 396.093 340.792 cv
397.28 340.792 398.244 341.725 398.244 342.876 cv
400.826 344.46 mo
400.826 345.61 399.861 346.544 398.674 346.544 cv
397.487 346.544 396.522 345.61 396.522 344.46 cv
396.522 343.31 397.487 342.376 398.674 342.376 cv
399.861 342.376 400.826 343.31 400.826 344.46 cv
0 gry
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
403.236 345.793 mo
403.236 346.944 402.272 347.877 401.083 347.877 cv
399.896 347.877 398.932 346.944 398.932 345.793 cv
398.932 344.644 399.896 343.71 401.083 343.71 cv
402.272 343.71 403.236 344.644 403.236 345.793 cv
405.99 349.295 mo
405.99 350.445 405.025 351.378 403.838 351.378 cv
402.65 351.378 401.687 350.445 401.687 349.295 cv
401.687 348.145 402.65 347.211 403.838 347.211 cv
405.025 347.211 405.99 348.145 405.99 349.295 cv
408.056 357.631 mo
408.056 358.782 407.091 359.715 405.904 359.715 cv
404.716 359.715 403.752 358.782 403.752 357.631 cv
403.752 356.48 404.716 355.547 405.904 355.547 cv
407.091 355.547 408.056 356.48 408.056 357.631 cv
411.154 359.131 mo
411.154 360.282 410.19 361.215 409.002 361.215 cv
407.815 361.215 406.851 360.282 406.851 359.131 cv
406.851 357.981 407.815 357.047 409.002 357.047 cv
410.19 357.047 411.154 357.981 411.154 359.131 cv
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
1 setflat
332.024 285.339 mo
408.736 355.238 li
0.841 lw
4 ml
gsave
[0.9952 0 0 -1.0049 0 792 ]ct
@
grestore newpath
DYLDUR+Helvetica*1 [4.9507 4.5442 4.5004 -4.9988 0 0 ]msf
377.567 339.989 mo
(correlated)
[2.47534 2.27209 2.75259 2.52658 1.64856 1.51318 1.64853 1.51318 2.75259 2.52658 1.09906 1.00882 
2.75259 2.52655 1.37628 1.26331 2.75259 2.52658 0 0 ]xysh
DYLDUR+Helvetica*1 [6.6922 0 0 -6.7573 0 0 ]msf
300.11 287.031 mo
(1)sh
%ADOBeginSubsetFont: OCNBAA+Palatino-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
DYLDUQ+Palatino-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/percent <1C60D8A8C9B6BD5E0AAD709D98BAE03383D86AF740EAB00153F1B2
C288BB9E8DEBF4F45A7B63F6A1E3EAAF626C09840521D69759D9A7B9D41F9EB6
5947502D44432DC09DA6CF75C119E1CB613B2E4F91E17A6D05556B52E8D62489
5F5114F226004F0202FF8734E440D4B8E48A30AA7671BBA87216DEC99933B905
AF1FEAC64BFB86711A820C3ADDEC7B98D977D8050D16AC6C0D553D4214FCE8C9
6CE7402FFFDB8E44C851A620BE> |-
/parenleft <1C60D8A8C9B81F2C348F48801FB0A0AA8502C77E6BB153A60314
6EB8E22A451A38F99C077471FA6614A76C7B93F682DAA370977A4F126379A14B
CBD44C801CBD87AFF017E88BAE421D91DC3611D3C1C29EBDA0E3BF7E72> |-
/parenright <1C60D8A8C9B81F2C348F48802F77B24839E8A0A3C735A7225F8
9C604B4F3E6DF3FFED36319B1A62CB8E8A47DD06AF049D84A2C68E846199D1D0
77F027AA369670B1F4896DFD2E41008FF1F10AB7B3B> |-
/comma <1C60D8A8C9B8707CD00AB27B0CF960C8373D2B6989189C4A67ADDC78
C6036B68FBB87ABDC059FA6CDD7A0F9AA9602C872A948C> |-
/hyphen <1C60D8A8C9B81F2C3AD0946ACB4F28B29A6C1C2973B3C153B21D943
0DA1A9458EEF1A7196935> |-
/zero <1C60D8A8C9B7A73D39411EB989D5C60161441F10B2E7338AB8F25B5F8
562F90E81CAE4EA48EC29880BD2A09EF44E2BA4A31A607939BE0285021ECD631
9E1C4F29795974284288BFE11E882793B7894490ECB0716AA65C3FD755B75E04
0D47CD9BBE1545B> |-
/three <1C60D8A8C9B7A73D395B17BE472BF1EF77AE52BEDBA136361E234B5C
F0B28E2874196DE83C740077D5018FE006B3B5E617A2AD817044FEB2305E1118
74398BFAF56B0A17AF2C181979E0C7A7AD1DFBBE03C7F60FBE81F65E8338C786
D51A2982AB1648D9CD35EF57AFCDA42775D17E8D6EB6EB30C09AED62553DDAFE
C160EF44B5C21E870884CF31A53A06B933C211567860CF88B26266C5F09002FF
9DE170C42D7493433E590677A04D83C1C71B8CE541D5> |-
/four <1C60D8A8C9B7A73DC60AD0FC49B7A92988D74C852EC952B249B1AA80E
2B5455C7F491EE69DC4A0970E3B75949C5BE4F674442F8D14FC086EA4B5E7C7D
E58240A392543165A39AD920A7436FA9E0AA6DCB42A4EA2EDCD3AD871EBF9A42
E9C06671A4CD14782133263AC87378A8D0A3440001E7E6FBDD4B2979D54F5822
974ADEEC4CAA128480B2D761C09EC031A94F104968BF1FFC4E6CEE87A8E923CC
63960D1B9FE1F657F4B33EE9BBD1DC3EDB182B3D93450BC> |-
/six <1C60D8A8C9B7A73D3943BAC8A48E5C1257C4B3279AC9B1D1A2E3519595
5C782046DE6E74FEEAC35277D6A4E5EAEA7848DB07891E543CB72B7F16287084
497D55073A6F76C05A672CDD800AD835F16A17365301FBCFF99F4191CC99230F
560AEABF028E17EABBF52460328D828E44C111B88C372290C2E22CF8> |-
/nine <1C60D8A8C9B7A73DC2110DE3725AC6F9D915A64B4E9FB2CB5FC745C50
606FB2A5B2F0C1DCE01EA1A76F59DB4314D842E34B2B51E3939B2B28E8CFE1C6
7E924A05D8F191BE95BEBF6732DF6859F17CCF3E56DE5720B5796B6110E313C2
C4F0A1BF3BC2B1D94293FC2236A4175FCBC1C99651A14F30C5876E84AC3BFA26
B4A732B9D2A9934296FB32B> |-
/colon <1C60D8A8C9B8707CAD1458FB3776573F74C7F55CCFA64ED6CF5FDF3B
0C3835A5BFDADE531C1593B23BD0769451A1DEBE44374261A20CC99B50ABA65A
76079A0FC1357F9E224172D5> |-
/semicolon <1C60D8A8C9B8707CDC3AC0EF5EE880776D41D88B02BCCA4947F0
13CD57FE444F527405453E5C6C3FBC0C639E7ADBB43E1EEA90C4AB8C5B77B62D
4655ED502D1F981107FEBAE639A860AE5B09F5A6AC3D8B36B4A7BDDF01BBC0> |-
/A <1C60D8A8C9B6FF868A0C73373AE7B263AEFF3F1A06DD176EE64BE9944826
7F8E74097ED2B32CB66BD1A308EC310C84027D99080B7487F1EAFFD8AAC77B4A
B1D265ED1DB010E8637D60D972E08082B8B6DCA7E0390C0685EBACF7EB90AB5D
4E62CEAA7568E6F2BA1D6E460D0F7F573A42BF5F706B1401CA300EDCBDCAC193
E87EA8C2FE3224D0C42B314EF05AD9FB68DD16F17248400A7E779007BE1591E9
D41F9166016748DE415BD9302248018989496E34A80780F52ABA94260DB0EEB8
4CC83BBF95B770E51AF2D75EF6F5FDBC230BF63B9264BB094F69F5A431C2D9> |-
/B <1C60D8A8C9B7D8BE7C15F6D7B1BD84C01980704E31A0B11E39083B79E2F9
644FEDE3600A7C6D1AFD6D7590FA101B19D5493540A54C747965A464C574BEDE
F4DA434DED05A35DD32042287E570759C2C25847E86A6CA5FBCA40228DAC73EA
D2866856CEE433E331113EB1BA4063833E8EF3F3C6525F91E80DD6BD76C98B59
29D42FE87623857F613BF2EF24B667B932D49B5353E1EDD0BB5220138BF2FDD0
218AB693BE40963E7A8FA24AC5C247FD21C3D4BECF93612F1F04B1C1CE3A218F
CE5DED660ADF86291AFC2C44DB4690F26A26E039D530C5730F476A1157F592FA
4F9F090A6EA07C4566ED0860CAABBDC84D4E5834EC902F61FFAE1732DBEAFF3F
B2A8E591DC1416718B09A55388B144DAD96A5135B1A9AFEEAFB4E2056435BD31
60034476230CAEFC09E4C4DEB20D06139BF9E72572C5> |-
/C <1C60D8A8C9B638183F62B3C8A86C65B9BB6F504B1D6AC204C05C7CE53E29
889571AF58F2612666C97F45B1EB861D5EA2E6CB6A6EA0F532925D75BD4CB9F1
693E1EAF668956CD5321E30801FC1B856078022976F48A59E53F951AB6DEE848
4ADD8221340294D4340B8DA80F8394D069191A7B15F38AE4BB> |-
/F <1C60D8A8C9B7EF32548E9EDD6AC068CA39AE8B10F07B63C266FA63FE052D
CB5CD544DCEC2E0BAFD7D1A9BBD137E0489771F934F90F487FB680858D00F2DC
6182EEBE72BDAA09E1E5E22C90AC9D627298C0A88421C6682B7A09EB30E43352
1556B034886513AB1CD5B927E456BE0C8494F50944A50174F2D11C4A25A9F14F
6A4188C7B81E29AB2FD42CA74C17B881610B6CE993811246A20176CF9BFC4AF0
F975F9DF4923163E1AE302170C4B7B8F90E682B12A4FD5A8CD5CFDA76285C113
4B7BFC2B9DA6F4D13C570396389DB68740FFFEB3730BA7D51CC3642D470B568B
10A01461731B1F74F8017EC2F5C1C64AD07D567F0042DEF59ECC150E0CF0D5C3
D91870213EB83D2F34408AA4B04A71C4199269D1F8091750C30E4D674976511A
64C580367183DCEE5B10CB9BBBBEC9EDA62A57A10C3D26F3BE48103B142D5BE5
4B2A718E08F2E19D65276BD8B758683B52E585915CAC157F12> |-
/H <1C60D8A8C9B6B5EDE6C1946FE665DE7F40E692ACE1A05DFEAE8C9DD4F39E
55164398AA406D470B64CEEF4E684430031AB17AA236117A6B43E370A5589768
BE4A2687DE308AF2FF183707368E6FC793DADDDE07A4FB412B7C65FE355BB820
5637C9A936BD9A866918A89171D9813EBD732E7F63E1DBE1AE58D8D6667E6AD6
C27D20713630AC3E00A8EFD61E673B10B0D093E8F29C85BC4843D003D59B9B22
2E04EFD63C119E4200E54A390B08073EAC3B5525A8A6CC82C1DA5E7255DFADE7
9C29BC7F72B54C5FEDBE066D9C68B7D7A68EBB4A4E2BA15AC32866B4A4EF800A
EF8847EE0C7455C7CB478E9218EBEF14A9C55961BC259314EB7B96776F8F5EA0
E8A8469D21F5EF59A848EB9C1794A425654E25F42DB96ABA48C7E6E6DF220F6B
FC84ECDEFFB2EA2A2F30A10E74EEC5BB3EB40FED05AA6579CA40DEDB23F6BBE2
9F9BBC33CFD01E63F3EE2409030B4CE319B5B78942F6499BCB6FEECF1B6BA6F8
949223946F5FC5BF439669879FBCAD89350C1C5C178866425453A3D84E5DD2B4
20F5725EF172AB9C677B378DA1CE1E6D7EBB> |-
/K <1C60D8A8C9B60BC6F94DE0EF30A106DBC241A22C9E63973EEE9EB521E2A4
78A6E2125D23E0BFFA4B18624439BDF78AE67846706572D9B21C1AD6E86A6BC7
2CDD6817CA667B431E227F9E73A58BA66548D0CC1BFA79D0CAB42A288DA2C99E
52B2A6DC05D5026338B01F9BB36B46CF4F114F12E3FBBE55BB134D391270A006
4EDB8A879064742A198BACE9858C2C42F4A02E0D6DDEB1B83A165918FFEDC26B
58AA0597D76AE7C4C7A2D1D120BC808861E92314A845BE7AB340D86D9F28FF72
04299C23832FCA355088762BACC94BA57EF770F0ECD2E93677FD0A01D4AD4EDB
FCF154774CCAFEC45B49AB7776624F506C3FAA320AABF8C1BC2254D59F3E0777
01E6E683C37389F6FC8C7D72E7E8F8153AAB83BAA55461BEF89920898E6AC04F
5088BA60AD83C1B013E1BB5CD5A723C72B2F93B63860AB8C48C29A7F43AB224C
021A14D48F8FC65C99C980F32F58> |-
/M <1C60D8A8C9B5D4485F4811014F502AE8DD3859F33514E0FF3902056BB0BB
EB750DEC53431FB26E3548279209F233B42CCBD56EC1137C5E48DD2251D69F1F
C8EACAE444E7385D8CE4C0E7A33DD3C135079EAF1D1FC76A5983D677F06785EC
45DE7ED4C5D59178DD8838E751EBD66414E77B2D616DD1B20F1CCAB545D6BFFF
5EF6994D79C81F1207CD3355C1F351B7074E6184C3D8DDAA5E80E4C51AAA2C5F
C60ADDAF16B13C9113111587C331758A9400952226328729D4FA14B106462919
B66C02FA3A8C2F40ED63AC2E1C49A25A58A22035DE3975A3CD9E9DF5DB85A747
3C54F4E04071FE3B716D00AAB90D65FC7BF4EF909DC2368FC3943602BEF9EB49
F3088A3FA374EF1B915BEA0C99C3B83E870C5D410DED9A9F9BC98965C8CB5B05
DB43457D4B2B75C46FA0C96438D3987BC270524B3FBD96AB08541E399D043326
AAD1B6A9623399852D346E184CCE86F33E928D005225BD8E1180179E9C5F6CE2
1D491C97FE9370EFFB2047B12020874F19E69865CF4B59F0> |-
/P <1C60D8A8C9B7DF55E754E0E99EE477416FB0421160E6BE337A5C2528E600
193CB5A8867FDE109B5D00ABFE72D4C662DA43D0D3432ABE89962830CA1F0F0F
CB0BAA90DB1BB891418A2B2D2593CBA468C07AD5D6C6ACB8D8F561E2EFA624AB
2FB5F3F4A6104F7823A75000CB4DC51A3C3B620E2C5EBA39C359141018581106
C30A2E58153305DB12DD495E91C8C84EE8FD41C6ED34B74DFFE736A93D9C1764
E6F442291411E8C6522D9E24411429C81B97E363291C4356350DE4B10C736C76
7C46D25D608D169805D6AB04A4E71178C75061F9F39E9A6F8CF876B018A9A25C
CE8FC5343D3457E9189D0A6AE79AADEAC7CCA4> |-
/S <1C60D8A8C9B78E05EBEDC8EE138262B7043E61D366D77FD6A4FB049DCE86
4B57BBC035AFFDEA0E41A2974EB26325134A7F5D78480D00FCA209C86C2A439D
FB5C306D707BA92C20FB77F6FF895531296672794A2617F60C2A8A2260DAFFDD
833E2F8F97E2CF9F8A969E08638343F5776FF0382A65A55413AB44BD2E548F53
16CB4AEEE6B6814FE81FF52BF0BCE5027FDD906D2C056C517F21D96AC8893FB5
E22B3DA3852B646E> |-
/T <1C60D8A8C9B7D61B9881BC3CFA35E7A4A6D03F223DB1563E6FB977CCCC49
F39E3E6F005435BE1A3D3815FD15B10682379BC75CC56C78A8C06F31CC03CB54
131DB56EC254C84D0857FE095CF0E947444307BA1BB6634A1D1D7A1D10A0EBE1
98F6296D882BB0FF7086D70DC5FD1049A2787ABC8F7F9FB446A963431D3839AA
D584DDF1CE13A7C1AA6707AB01317A53ED29DF9AE1760E09279B54AD95438A80
17338C11C0BB3B8773F2D94E1847B7847B119EF04EB176913CA1410D41A9B3> |-
/b <1C60D8A8C9B7924C4228F1763A3ECC54175213AF1C7DFE14BB30910E09FF
7101ADD5C08A9F5C3A8D2F1EBE0547080D35EF7996C08D3ACB420E3A641DA44A
081A5696B9FDA160BC2BF31D9C321FD0437949EBAC8137E32B46CBE6CA0F11D4
2778A71AEFBC8A6EA120AA3C8BF9F0C14C1867397668908F7FD93F5BF22B367D
234C529C5148439F1DCCAC6DCA78F97337874F24708C3CBDF496980E9650> |-
/f <1C60D8A8C9B81F2C3484F62C83CA5419A3217CC6872C4A88F3761CD31438
F3A50D1F5ABD12190977C71EA2CD4E1E666D5DFD6947DC38087D41C6C5DE5B42
ABE9FDF846F21ADEE4121FBDF9B240A72796F6197BEDC044E96858AA0D66E254
FB67E95251A123401ACD665E41D60599D0A8AF5A75C9672D115C918C130CB379
80BEDAE7525281FB3E623E23DFE4361B003B280CD4B61ACAEA0889E016AB81C2
D6AC5BB33216411FDFF2C727F68C6849B495EA86F032498DE39502B3EABC9523
658DAF0436272ECB98FD9BE1B743240B36B9D150C31187A0BDE9F9> |-
/g <1C60D8A8C9B7EF32247E7BE82FF7BC2222AF00F027BE6B37CD542F36C37E
1A3D3E81E838DFB3E695C54A5210F0C539577C5CCBC77445AE7F99C7F8C12F7A
EE015BF525BA0B003C6410AF23AC36AA0B4D6DB1D10C5FF9781242C30A2E39C6
E1C65082DF3DC67DDC1FB17A24BF75E26010766A4E8C4BC06E8D47826CC80C9C
AF779A9B9682345F32C98E20CC762526B04F0782F515D747F99B4D22621459E6
0CEDA8B1D6A82D5ACFFFFC5F77FD6F9768A275765C125F34F6C0AC10A9D34C8A
6D7F4110AAC3C2C0718B1F6EB8F4F31DF35CD7B1C2124FD7A19C1D37C515F9C2
D42D890173F127696C05E775BCC3EEE826FDF8936849CC8D108DA58FE0F2D533
94BE9F6C1C2C260666F6DC22B697CF341E5A7127E9C4D8E8EDE78CBB07DC56C4
8D22EA3CA8125F7E114BA0ADF025E125E5D14C1E605E302529170CA7DB44E258
54348979B46117C1> |-
/l <1C60D8A8C9B849F243CB78EF61AB763EB35431BF68817DB4D9B4D1BA88C3
7A24E7C2105DCF6DE0D94B96E68F7AC3F8D1CED16F853C6136E6E7AA3615461D
330F0A9A0AE0F2CE4A642FBBBA9CF1CB65CEAC3D944EC6C95B2E92A381E2EF4B
8EFB054D24767195CF9A51146D6DC12766CC3BA851D131153C85E6E0A595569D
47FD0ABC8DE7BEB1CD827069DC3D51D6> |-
/m <1C60D8A8C9B59575CFB8ADCBCCAC0A4F70EBFEDF5E7C11D6691ECB152B7A
455C896EA679A6E29352B8617FAC9AC9D61D4A5195DB23FE45CDCE647BB75D36
E82ABDBD2335CC68D7F9EFEB770A8964DF4BA3B2B97F2C59ABDFD7FC1E0E09EF
043C5B697340D9922BCB1AF8634C007516B65D85A6C2C0469C3D964193D7E749
1522393213650BDB0898F9FAC61FC289E780CA56525D9A43E4F0DAF09283AC49
6EECF8ED40CD53C38447B818BF0D99BC947266ED4007B9FC87DC4C2BFD4693F9
A0BA0AAACD7F0CCA48D137B5978961C795369A26E1ACC80E1DA27035259F3FA7
D80897729DB580863AE14F1A2239B39FB2926C608F5075F05622F6E9F1656291
3D78B449EF011B7C3DEC462E5A4481695E23835107CE27421D90A32402C8EBB8
9F71EF58E3F1819B3AE5563478791C0C30E2AD1D22E6B932CBEEB0D7BF7C9697
C7B4979EEEF9064217945ACD73BC3504DB0EC4C557838AD1428BF974D885DEFD
A207C61950E992C554B52727BED76D45756FD37EBAA7BE866C31> |-
/o <1C60D8A8C9B799EB5D34ABF6B2172F0AF3B604D9C5F8C6958EAF8562F37C
E5667AB2038AA73632A9EFBD00CAF418A8C63AB4FFD1FBCD81BB7D20229CA10D
1802B4CF5690B3817A26FB1A95F56191D5ACF4F636667706390E57> |-
/p <1C60D8A8C9B7C2FB37FE6EB4E373DAE25842BFEA61182ED63DFEC1F4976E
969DDF6193907A604F6C3ADF19375BA35E85E0BD601804BC61202567946BB1B0
2779A692C9B26FD35A6C011390D7145FA042F275D731530B60F5EECA6A15FA65
0CEBDD6262F8B911D27550E85865A2B52BA15F6E13826C45BCBB86A5403D3B77
F645A262AA6980BC5C79807CDF08A8874F0164961AF7D97A4216C04736A2ADE6
2E9E0F7A3736688158D2C70CD656DAFEEB19A6750EFCAAF74DDA95AE1F1AF409
AD28A52E612DB1390A0B6E36A17C0A6B5CFB9960977845D6367515E2D4CD7F3C
13483819F40541F55B1B250077D3FBAD83C9C906856F824FF54664AEBC01AA23
99973B19> |-
/q <1C60D8A8C9B7EB086E79C6F0A63CEDDCA8D2176CCA2CA84462B0E211CD90
9D5D66C88A39FE1046B41249E4068F746C2A2478A65D6E00A6CBC15069D96A5B
C65C35EC2D9AA47DE751ED6BEF0343EB4747B52EEBE9312788AEBA81263C6D93
AD64131A54D814A4C322048861C7797C6FA5025B1FCD5E887893F710D67C22F4
9EDA3B745BD5FE80F5E9DE23829F165A96067CFC4278E60DAB7B3DA34E631C83
2A2CFE5277A98BE1D9E94230CD6A574EBF65737BB81EFE048E80E4DE3441A114
784262C3D7C328B1969745E9A42EFAC7E64DE4023DE40FA09D930D88D12D384A
E8F057> |-
/r <1C60D8A8C9B730315208524930FDFE0F55106EC46D02C4F0E8CAD9394338
EF66F35217CCAEA73E97A6F48CBE61E6B97A983C4F15591AEC34FCD1922E8AD3
54649ACACED11CCC35BD77AB2FA3C8C5CB5209AF2C4E1A267BC896A2A6AB1AC0
3F69D261BB863A7B1086A333A1A6F3DEF05B8E6E2F4438442868AE66B72CE3BC
8966B37A26BCFAAF58EF01415D142E86671CCE0A5695E916AB23647E51B45DBB
082F06D0E363C6E87D37E6EA5F267FDC208506063AA18A20112E40E2F25FFFDE
D2F3370E229462BA080F93E138BB5F1D9C0DD2303733634F39BF98> |-
/t <1C60D8A8C9B824242125E7CF483F3B20A0411FC639B4CA7EB14176ACF7F5
17DB5181EBBCCF9F3DA78EDBBF5CE6FCEFA2F669967B3307B34138461A3DAC54
7380B7B4B2EBF3973D9E2B0FFBD1D51F6C99A47019176A424988D19329DE0F73
35F4E9549FBC6ED2E963DEACB1B775221ED89699FCA473D112D084> |-
/u <1C60D8A8C9B7C05416E69C0A1CC52BBE3BF6ACB80A9037CA2CF12BC8FF00
D4D950284D95EFAC976E11B0F1B40F16B0E8FB1B5881F11DA286A17242F0609C
78B12BC959CCFFF184B3CF9E7D18E34A879239F60DDF7C5BB3655D79BF3243F0
E5124E6BBD3D41BEEF530E6D84E33B7457F2C5F7518EB94006C65DC41A9C5A75
E473447935AD6732A243CF0C428922690A13874FDBE5659E37F946FE5FB62D26
3527CB87851EAA09501B7D24EE068121A50E337133CC35F9AE974AD1328F9B3A
78174608615CB3962EA5448E7A4D357BEB93A38FFEDDD6F3C11E8496B9F528E0
0121FCA675C0EA06> |-
/w <1C60D8A8C9B6B7704E9B9D90C8344F5909E8C08A13CF7B0251A134D7F75B
919DC1751FABC37181355EDB60AF60E52EBBF98CED53866F7C2AA1D527652FB3
27F0FE9C6356ED2CE232CCFE2C89A60ACE82C7060A1BB735BEBF5757DEA90028
190ACF0214BD7A2F3C2B07AB579A6D20D952CBF39CDF4B968D3873E26B04E278
0D1F722E787FD275A7486D61B477539F6D0B12AE7AE4E7238FBB9502B4ED93FF
927412BDDED5BB11B660241AB79387D732BDA2CBC6E3AB303D4225F0553A3C6E
EA9E13983C01E6F3756139CEC51A2993B17EA76E45F99F6236EC4B6955B5ABDC
6A1FB0FDCA3B1F46A7C4D87B8BBF5E87F1F58CAC> |-
/x <1C60D8A8C9B7B71A30FA83B1EA627F34A75111B9DA7EC0D483D96C9D8831
DFC817694F4030CD442B08E728F74997A1DF27E9E26B4F9EDF605F5D3658A152
2DC63425559565749F5368BCEDF50C59416D7138CD36F333536AFD94AFC376C1
A0AE515000810F4057F14C3C6667AFA0B1C887B98CF4E3630D325DB78163E7C1
4DA72ED1835EF776D852A34D2C936DB36E668F0E1083B2389B123B18BBBFE8FF
66947DD2682048BE9DDAF168CC441E9ED9B90C7AF3E0430B749EE8C2AB17> |-
/y <1C60D8A8C9B7EF3227737BFD50A79C051AE2BE11E5EA2AC9871C69AB2183
16B3CFC82C834C8FAF1A961A3E059E75A89732D3ED1A538323E3064AD4A5368A
61C18BDE3A21986C98744315FE0EC925A315CF93FE7E8FBE037D0E7CA4B2E240
036E580B40FF0FD3EA338190336CA84BEFF01E082A7B8B3D51247704DD11DDEE
9E88683A4F85252E1159BED9DB98B9BA1DB08D2B4B8E6CA77E4C85798F020AD6
BFE7B70F3FB992AE4D342A5BB69B85787AC5C2DF090555F7A3E44CADB29B3A6F
AAB4221B2B08ED6CEC8905FB0789709F4208CA209F8C2A15E1314EFA966A8F03
6FEB69> |-
/quotedblleft <1C60D8A8C9B7A73DB6E8DAAC3B43289A86AB8873C715BBE6F
C9DB6E0B2531B5ED1E424CDFDF56833C9CE478F434E9F0154E41924C8125CF6F
8A83919D1ECE65985E53C7431A959470CF6A128348724B51C8B518B095D98F3A
9> |-
/quotedblright <1C60D8A8C9B7A73DB6E8DAAC3B43289A86ABC2B73D6BB11A
E7A386EC34AEAEEFAB0FD1B6703C0E439DD6B2CA7D0B0A78F6B9B85A13F09D80
4A92B81A07F984FCD6D29B9C8DC072FD49DB46B8B042FDDD2A1B20709ED7FC3D
CC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYLDUQ+Palatino-Roman /Encoding get
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 72 /H put
dup 75 /K put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 98 /b put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 170 /quotedblleft put
dup 186 /quotedblright put
pop
%ADOEndSubsetFont
/DYLDUQ+Palatino-Roman*1 
[37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /.notdef /zero /one /two /three /four /five 
/six 2{/.notdef}rp /nine /colon /semicolon 5{/.notdef}rp /A /B 
/C /D /E /F /.notdef /H /I /.notdef 
/K /.notdef /M /N /.notdef /P 2{/.notdef}rp /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 
69{/.notdef}rp]
DYLDUQ+Palatino-Roman nf
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
133.39 554.326 mo
(Figure1:TheSTDPcurve.Theparameters)
[4.98532 2.60922 4.98532 5.40671 3.38037 8.68579 4.48318 6.72481 5.49646 5.21846 8.68488 4.70731 
5.49646 6.94003 9.80478 3.98108 5.40672 3.54176 5.06604 4.29494 6.63246 5.49646 5.21844 8.68491 
5.38879 4.48315 3.54178 4.48318 7.9173 4.29495 2.92307 4.29495 3.54178 0 ]xsh
%ADOBeginSubsetFont: SSZAAA+Palatino-Italic Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /SSZAAA+Palatino-Italic def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989 Adobe Systems Incorporated.  All rights reserved.Palatino is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle -10 def
/BaseFontName (Palatino-Italic) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 120 /x put
def
/FontBBox {-170 -276 1010 918} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-18 -0 689 707 470 482 733 733] def
/OtherBlues [273 280 -276 -276] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/A <1C60D8A8C9B6079F1DAE2B0A9B0A4C96052151EF7517C8EAE6157B5D27E7
CC0648AEDBC27918190D6BFF8D1608C071449A1CD9F295DB79E83081916B8DC7
1870A71711E5271AD31E731CA9A3FDBDCC177B49F901CD0E8F00595A9C21ACA1
0E86269490A79CBC67911F83D2E6505B8327D5ADB9201B05DA8FC7E8B0AEC539
574D65D4C784CDCF4639504CE9A77BC9DEA07EE34C72765A604161BDB8007D23
7B2EEADDB591CF83D8B32F1D0F5965B774B303B387049AB87AB4F57E0B71AF94
7C511BDBF9C8C5A383EE7B6022BDB58B588E825015F0D5C3178F0C34F188208C
AC1802957FD642CC97FE77E5B4E9BCD1DC06DC> |-
/x <1C60D8A8C9B7A73DC283F8F4C8780FB9C6F29E365E5C3B11496578B3A937
58C6BDFFDBE4A635B478EBF4EFC8ABA310788BF9DD9D6419EE7ED02DB7AFD0B9
829909CA8198FF49FF63BD95A47E2A1DED855F5BC9DDE6AB49F24FCEBF1DFD36
EABB48C09BF71B211525B675055E85A5C854FF3B5331DF25642A72B08A4B0F7F
D75F974B54ECB4919C9DE5F007D0ED15EC0BB98D3FC7394BAE7A2E0D950A263E
E4A363B6298996AD1C486F2521DA1E7B9AC4FBA7F082108B9A875F2C19936680
F6B5AE5C9B5274842FAAA5843708266C21BBF9239206F9DDDF2774CADFFF4DBD
E7E740A57E1F4F> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUS+Palatino-Italic /SSZAAA+Palatino-Italic findfont ct_VMDictPut
/DYLDUS+Palatino-Italic*1 
[65{/.notdef}rp /A 54{/.notdef}rp /x 135{/.notdef}rp]
DYLDUS+Palatino-Italic nf
DYLDUS+Palatino-Italic*1 [8.9664 0 0 -8.9664 0 0 ]msf
318.551 554.326 mo
(A)sh
%ADOBeginSubsetFont: ECJBAA+MTSY Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ECJBAA+MTSY def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (MTSY) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 67 /plus put
dup 68 /equal put
dup 161 /minus put
def
/FontBBox {0 -954 1043 796} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 465 484 501 506 657 676] def
/OtherBlues [-209 -186] def
/BlueScale 0.04796 def
/StdHW [50] def
/StdVW [50] def
/StemSnapH [20 50] def
/StemSnapV [30 50] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/plus <1C60D8A8C9B6C180FE7E255088499B6A505EB6DB68D164488832FE8CE
1A33AC5E060A59D03BCEB9639BC4D489466A32ABD040C578748437F6AB5A2> |-
/equal <1C60D8A8C9B6C180329C486F337E2637810D8548FE31FA7E089C659A
5FA4521910F4A25ADF4E42AFDF85360EA65D> |-
/minus <1C60D8A8C9B6C18031E531D62CCFFB4F07592A446F7E1EF35039F4AC
88C2> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUT+MTSY /ECJBAA+MTSY findfont ct_VMDictPut
/DYLDUT+MTSY*1 
[67{/.notdef}rp /plus /equal 92{/.notdef}rp /minus 94{/.notdef}rp]
DYLDUT+MTSY nf
DYLDUT+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf
325.024 555.671 mo
(C)sh
DYLDUT+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf
336.257 554.326 mo
(D)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
349.322 554.326 mo
(103%,)
[4.48318 4.48322 4.48322 7.53174 0 ]xsh
%ADOBeginSubsetFont: BLQAAA+RMTMI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BLQAAA+RMTMI def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation) def
/Weight (Medium) def
/ItalicAngle -14.036 def
/BaseFontName (RMTMI) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
dup 58 /period put
dup 191 /tau put
def
/FontBBox {0 -213 987 680} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-18 -0 653 672 428 441] def
/OtherBlues [268 271 -211 -192] def
/BlueScale 0.04796 def
/StdHW [34] def
/StdVW [73] def
/StemSnapH [20 34] def
/StemSnapV [55 73] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/period <1C60D8A8C9B859EB4CC3B80A0EF1567264FFADB77611645EA6395F9
BB3FD093035B70BC8D098F94C1AE3> |-
/tau <1C60D8A8C9B76A0D4EB171D4FF05EA9E17D0E2491FD236F49CAB9C2DCD
FE96216D02FCD513E72D7C10633902573A83B3EEC0B153C16130FE68A0A684C7
70BA714C979509D4EBA28720DE6BDF9CC5A39B3AF27DDEA081D74358B9CE28A0
309DDAD92075F1799E662CFA17078070> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYLDUU+RMTMI /BLQAAA+RMTMI findfont ct_VMDictPut
/DYLDUU+RMTMI*1 
[58{/.notdef}rp /period 132{/.notdef}rp /tau 64{/.notdef}rp]
DYLDUU+RMTMI nf
DYLDUU+RMTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
376.936 554.326 mo
(\277)sh
DYLDUT+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf
380.818 555.671 mo
(C)sh
DYLDUT+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf
392.051 554.326 mo
(D)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
405.116 554.326 mo
(0)sh
DYLDUU+RMTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
409.599 554.326 mo
(:)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
412.065 554.326 mo
(014sec,)
[4.48322 4.48318 8.87405 3.8017 4.29495 3.98108 0 ]xsh
DYLDUS+Palatino-Italic*1 [8.9664 0 0 -8.9664 0 0 ]msf
133.559 565.285 mo
(A)sh
DYLDUT+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf
140.034 566.63 mo
(\241)sh
DYLDUT+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf
147.985 565.285 mo
(D\241)
[9.78412 0 ]xsh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
164.763 565.285 mo
(51%,)
[4.4832 4.4832 7.53174 0 ]xsh
DYLDUU+RMTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
185.925 565.285 mo
(\277)sh
DYLDUT+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf
189.807 566.63 mo
(\241)sh
DYLDUT+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf
197.758 565.285 mo
(D)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
207.542 565.285 mo
(0)sh
DYLDUU+RMTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
212.025 565.285 mo
(:)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
214.491 565.285 mo
(034secaretakenfromFroemkeandDan\(2002\).\(B\)Func-)
[4.4832 4.4832 6.90503 3.80171 4.29494 6.40292 4.48318 3.38037 6.71588 2.92307 4.48322 4.98532 
4.29492 7.64029 2.98575 3.38037 4.89569 10.3382 4.98532 3.38037 4.89569 4.29495 7.9173 4.98532 
6.71765 4.48322 5.21844 7.89929 6.94003 4.48318 7.64029 2.98575 4.48322 4.48318 4.48318 4.48322 
2.98575 4.66434 2.98572 5.47839 5.40668 4.98535 5.40668 5.21848 3.98108 0 ]xsh
133.39 576.244 mo
(tioncontrollingsynapticplasticityattheCoopersynapsereceiving20Hzpresy-)
[2.92308 2.60922 4.89571 6.92656 3.98108 4.89569 5.21846 2.92308 3.38037 4.89571 2.60922 2.60922 
2.60924 5.21844 6.69342 3.80171 4.98531 5.21846 4.4832 5.38879 2.92307 2.60924 5.68828 5.38879 
2.60922 4.48322 3.8017 2.9231 2.60922 3.98108 2.60922 2.9231 6.69342 4.48322 4.63116 2.9231 
5.21844 6.00305 6.35718 4.89569 4.89569 5.38879 4.29492 5.24988 3.80173 4.98532 5.21844 4.48322 
5.38876 3.80173 6.00305 3.38037 4.29492 3.98108 4.29495 2.60922 5.06604 2.60922 5.21848 6.6925 
4.48322 6.19128 7.46002 6.19135 5.38879 3.38037 4.29492 3.8017 4.98535 0 ]xsh
133.39 587.203 mo
(napticstimulation.Datapoints\(circles\)arefromvisualcortexexperimentsby)
[5.21844 4.4832 5.38879 2.92308 2.60922 6.5679 3.80171 2.92308 2.60922 7.9173 5.40671 2.60922 
4.4832 2.9231 2.60922 4.89569 5.21846 4.8284 6.94002 4.4832 2.92308 7.07089 5.38879 4.89571 
2.60922 5.21846 2.92307 6.38852 2.98578 3.98108 2.60919 3.38037 3.98111 2.60922 4.29495 3.80173 
5.57254 4.48318 3.38037 6.88086 2.98575 3.3804 4.89569 10.5032 5.06601 2.60925 3.8017 5.40674 
4.48318 5.19693 3.98108 4.89569 3.54178 2.92307 4.29495 7.21353 4.29492 4.62671 5.38879 4.29498 
3.54175 2.60925 7.91724 4.29498 5.21844 2.9231 6.38855 4.95837 0 ]xsh
133.39 598.161 mo
(Kirkwoodetal.\(1996\).ParametersfromFigure1Ainequation3.1resultinthe)
[6.50958 2.60924 3.54176 4.98531 7.47798 4.89571 4.89569 7.8007 4.29494 5.24449 4.4832 2.60922 
4.563 2.98573 4.48322 4.48318 4.48322 4.48318 2.98575 4.563 5.41574 4.4832 3.54178 4.48318 
7.9173 4.29494 2.92308 4.29495 3.54178 6.12399 2.98575 3.38037 4.89569 10.2387 4.98529 2.60925 
4.98529 5.40674 3.38037 6.61725 4.48318 9.29727 2.60919 7.53986 4.29495 5.02115 5.40674 4.48318 
2.92307 2.60925 4.89569 7.54077 4.48318 2.24161 6.80457 3.38037 4.29498 3.8017 5.40674 2.60919 
5.24451 2.60919 7.53986 2.9231 5.21844 0 ]xsh
133.39 609.12 mo
(normalcurve.Increasing)
[5.21844 4.89571 3.54176 7.9173 4.4832 4.83559 3.98108 5.40671 3.54176 5.06604 4.29495 4.46884 
3.02173 5.21846 3.98108 3.38039 4.29492 4.48322 3.80171 2.60922 5.21846 0 ]xsh
DYLDUU+RMTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
234.26 609.12 mo
(\277)sh
DYLDUT+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf
238.142 610.466 mo
(C)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
245.528 609.121 mo
(by10%resultsinthe\252deprived\272curve.\(C\)All-to-)
[4.95836 7.21167 4.48322 4.48318 9.7572 3.38037 4.29495 3.80173 5.40671 2.60922 2.92307 6.02808 
2.60922 7.44482 2.9231 5.21844 6.52039 4.48322 5.47839 4.29495 5.38876 3.54178 2.60922 5.06604 
4.29495 5.47839 6.70956 3.98108 5.40671 3.54178 5.06604 4.29492 4.46887 2.98572 6.35718 5.21121 
6.97586 2.60922 2.60922 2.98575 2.92307 4.89569 0 ]xsh
133.389 620.08 mo
(allimplementationofSTDP:thenetsynapticchangeisacombinationofsmall)
[4.4832 2.60922 5.00954 2.60922 7.9173 5.38878 2.60922 4.29495 7.9173 4.29494 5.21844 2.92308 
4.4832 2.92308 2.60922 4.89572 7.61874 4.89571 5.38606 4.70731 5.49646 6.94 5.41574 4.64191 
2.92308 5.21846 6.69522 5.21848 4.29495 5.32336 3.80173 4.98532 5.21844 4.48322 5.38879 2.92307 
2.60922 6.38049 3.98108 5.21844 4.48322 5.21844 4.98529 6.69525 2.60925 6.20203 6.88348 3.98108 
4.89572 7.9173 4.95834 2.60925 5.21844 4.48322 2.92303 2.60925 4.89569 7.61786 4.89569 5.38605 
3.80176 7.9173 4.48315 2.60925 0 ]xsh
133.389 631.038 mo
(changesinducedbyallpossiblepre-andpostsynapticpairs.\(D\)Theresultof)
[3.98108 5.21846 4.4832 5.21844 4.98532 4.29494 6.50778 2.60922 5.21844 5.47841 5.40671 3.98109 
4.29494 8.18356 4.95836 7.69138 4.48322 2.60922 5.31438 5.38878 4.89572 3.80171 3.80171 2.60922 
4.95837 2.60922 7.00098 5.38879 3.38037 4.29495 5.69089 4.48322 5.21844 8.18448 5.38876 4.89572 
3.80173 2.92307 3.80173 4.98529 5.21848 4.48318 5.38879 2.9231 2.60922 6.68713 5.38879 4.48318 
2.60925 3.54175 3.80173 4.94766 2.98572 6.94003 5.69089 5.49646 5.21851 7.00006 3.38037 4.29498 
3.8017 5.40674 2.60919 5.62915 4.89569 0 ]xsh
133.389 641.997 mo
(applicationofSTDPruletoPoissonspiketrains:presynaptic:10Hzand100,000)
[4.4832 5.38879 5.38878 2.60922 2.60924 3.98108 4.4832 2.92308 2.60922 4.89571 7.03145 4.89571 
4.79697 4.70731 5.49646 6.94 7.22694 3.47003 5.40672 2.60922 6.10704 2.9231 6.70691 5.41574 
4.89569 2.60924 3.80171 3.80173 4.89569 7.03146 3.80173 5.38879 2.60919 4.98535 6.10614 2.92307 
3.54178 4.48322 2.60919 5.21844 3.80176 4.05457 5.38879 3.38037 4.29495 3.80173 4.98529 5.21848 
4.48318 5.38879 2.9231 2.60922 3.98108 4.05371 4.48318 6.29535 7.46002 6.29443 4.48322 5.21844 
7.29053 4.48315 4.48322 4.48322 2.24164 4.48315 4.48322 0 ]xsh
133.389 652.956 mo
(spikes;postsynaptic:)
[3.80171 5.38879 2.60922 4.98532 4.29494 3.80171 3.72375 5.38879 4.89569 3.80173 2.92307 3.80173 
4.98532 5.21844 4.4832 5.38878 2.9231 2.60922 3.98108 0 ]xsh
DYLDUS+Palatino-Italic*1 [8.9664 0 0 -8.9664 0 0 ]msf
216.117 652.956 mo
(x)sh
DYLDUQ+Palatino-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf
222.082 652.956 mo
(Hzandmatchingnumberofspikes.Theanalyticalcurves)
[7.46005 5.96445 4.4832 5.21846 6.95964 7.91728 4.48322 2.9231 3.98108 5.21844 2.60922 5.21844 
6.46747 5.21844 5.40671 7.9173 4.95837 4.29492 5.02393 4.89569 4.46701 3.80173 5.38879 2.60919 
4.98535 4.29492 3.8017 3.72467 5.49646 5.21844 5.77618 4.48322 5.21844 4.48318 2.60922 4.98532 
2.92307 2.60925 3.98108 4.48322 4.09137 3.98108 5.40671 3.54178 5.06604 4.29492 0 ]xsh
133.388 663.915 mo
(arederivedinsupplementalmaterials.\(E\)Thenearest-neighborimplementa-)
[4.4832 3.38037 7.12474 5.47839 4.29495 3.54176 2.60922 5.06604 4.29494 8.3091 2.60922 8.04825 
3.80171 5.40672 5.38878 5.38878 2.60924 4.29494 7.9173 4.29494 5.21846 2.92307 4.48322 5.43991 
7.9173 4.48322 2.92307 4.29495 3.54175 2.60925 4.48318 2.60922 3.8017 5.07233 2.98572 5.47842 
5.81467 5.49646 5.21844 7.12561 5.21844 4.29498 4.48318 3.38037 4.29495 3.8017 2.9231 2.98572 
5.21848 4.29495 2.60919 4.98535 5.21844 4.95837 4.89569 6.37152 2.60925 7.9173 5.38879 2.60919 
4.29498 7.9173 4.29492 5.21844 2.9231 4.48322 0 ]xsh
133.388 674.873 mo
(tionofSTDP.Foreachpresynapticspike,onlyoneprecedingandonesucceeding)
[2.92308 2.60922 4.89571 6.64322 4.89569 4.41051 4.70731 5.49646 6.94002 4.25908 3.66635 4.98532 
4.89569 4.96652 4.29495 4.4832 3.98109 6.6432 5.38878 3.38039 4.29494 3.80173 4.98531 5.21846 
4.48318 5.38879 2.9231 2.60919 5.40677 3.80173 5.38879 2.60919 4.98532 4.29495 3.66635 4.89569 
5.21848 2.60919 6.4101 4.89569 5.21844 5.71973 5.38876 3.38037 4.29495 3.98108 4.29492 5.47842 
2.60922 5.21844 6.4101 4.48318 5.21844 6.90317 4.89569 5.21844 5.71973 3.8017 5.40674 3.98108 
3.98108 4.29492 4.29498 5.47839 2.60919 5.21844 0 ]xsh
133.388 685.832 mo
(postsynapticspikeareconsidered.\(F\)TheresultingBCMfunction.Parameters)
[5.38879 4.89569 3.80173 2.92308 3.80171 4.98532 5.21844 4.4832 5.38879 2.92308 2.60922 6.18593 
3.80171 5.38879 2.60922 4.98532 6.49797 4.48322 3.38037 6.49887 3.98109 4.89571 5.21844 3.80173 
2.60922 5.47839 4.29495 3.38126 4.29492 5.47842 4.44553 2.98578 4.98529 5.18878 5.49646 5.21848 
6.49887 3.38037 4.29495 3.80173 5.40671 2.60922 2.9231 2.60919 5.21848 7.18924 5.47839 6.35718 
10.6853 2.98575 5.40671 5.21848 3.98108 2.92307 2.60922 4.89569 5.21844 4.44556 5.41577 4.48315 
3.54181 4.48315 7.91736 4.29492 2.9231 4.29492 3.54175 0 ]xsh
133.388 696.791 mo
(areasinFigure1A.)
[4.4832 3.38037 6.53654 4.4832 6.0433 2.60924 7.46005 4.98531 2.60922 4.98532 5.40671 3.38037 
6.53654 4.4832 6.97586 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/DYLDUT+MTSY*1 uf
/DYLDUT+MTSY uf
/ECJBAA+MTSY uf
/DYLDUQ+Palatino-Roman*1 uf
/DYLDUQ+Palatino-Roman uf
/OCNBAA+Palatino-Roman uf
/DYLDUR+Helvetica*1 uf
/DYLDUR+Helvetica uf
/RTRAAA+Helvetica uf
/DYLDUS+Palatino-Italic*1 uf
/DYLDUS+Palatino-Italic uf
/SSZAAA+Palatino-Italic uf
/DYLDUU+RMTMI*1 uf
/DYLDUU+RMTMI uf
/BLQAAA+RMTMI uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize A4
%%+ *JobPatchFile 0
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
